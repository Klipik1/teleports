repeat wait() until game:IsLoaded()
wait(7)
local Servers = game.HttpService:JSONDecode(game:HttpGet("https://games.roblox.com/v1/games/2809202155/servers/Public?sortOrder=Asc&limit=100"))
local ping1 = (game:GetService("Stats"):WaitForChild("Network"):WaitForChild("ServerStatsItem"):WaitForChild"Data Ping":GetValue())
local workspace = game.workspace
local LocalPlayer = game.Players.LocalPlayer
getgenv().AutoCaptcha = true
local plr = game:GetService("Players").LocalPlayer
    
repeat task.wait() until plr:FindFirstChildOfClass("PlayerGui")
-- wait for the PlayerGui gui to exist
local plrgGui = plr.PlayerGui

local function bypass(new)
    for i,v in next, new:GetDescendants() do
        if v:IsA("ImageButton") then
            local text = v:FindFirstChildOfClass("TextLabel")
            if text and text.Text ~= "X" then
                repeat
                    task.wait()
                until text.TextColor3 ~= Color3.fromRGB(255,255,255)
                if text.TextColor3 == Color3.fromRGB(0, 255, 0) then -- its god
                    firesignal(v.MouseEnter) -- it require this one
                    firesignal(v.MouseButton1Up)
                    firesignal(v.MouseButton1Click)
                    firesignal(v.Activated)

                elseif text.TextColor3 == Color3.fromRGB(255, 0, 0) then -- its a bad
                end
            end
        end
    end
end

plrgGui.ChildAdded:Connect(function(new)
    if not getgenv().AutoCaptcha then return end
    if new:IsA("ScreenGui")
    and new.Name == "ScreenGui" and new.DisplayOrder == 100 then
        bypass(new)
    end
end)
local function XD()
    local repFirst = game.GetService(game, 'ReplicatedFirst');
    local itemSpawn = repFirst.ItemSpawn;
    
    local vector3Metatable = getrawmetatable(Vector3.new());
    local oldIndex = rawget(vector3Metatable, '__index');
    
    setreadonly(vector3Metatable, false); do
        vector3Metatable.__index = newcclosure(function(self, idx)
            if(string.lower(idx) == 'magnitude' and getcallingscript() == itemSpawn) then
                return 0;
            end;
            return oldIndex(self, idx);
        end);
    end; setreadonly(vector3Metatable, true);
end
local function updateRibs()
    local Children = {}
    for _, Obj in pairs(LocalPlayer:WaitForChild("Backpack"):GetChildren()) do
        if Obj.Name == ("Rib Cage of The Saint's Corpse") then
            table.insert(Children, Obj)
            if workspace:FindFirstChild("Rib") then
                workspace.Rib.Value = #Children
            end
        end
    end
end
if workspace:FindFirstChild("Rib")==nil then
    local hi = Instance.new("NumberValue")
    hi.Parent = game.Workspace
    hi.Name = ("Rib")
end
TPBypass = hookfunction(getrawmetatable(game).__namecall, newcclosure(function(self, ...)
    local args = {...}
    if self.Name == "Returner" and args[1] == "idklolbrah2de"  then
            return "  ___XP DE KEY"
        end
    return TPBypass(self, ...)
end))
local function sendWebhook(Blehh, eb)
    pcall(function()
    local everyone
    local omagad
    if getgenv().eb == "" then
        everyone = ""
    elseif getgenv().eb ~= "" then
        everyone = "<@"..getgenv().eb..">"
    end
    if getgenv().omagad == "" then
        omagad = "Сияние"
    elseif getgenv().omagad ~= "" then
        omagad = getgenv().omagad
    end
    local clr = "0x4287f5"
    local data = {
        ['content'] = everyone,
        ['username'] = omagad,
        ["embeds"] = {{
            ['title'] = "",
            ['color'] = tonumber(clr),
            ["footer"] = {
                ["text"] = ("И помните: Сияние заботится о вас!"),
                ["icon_url"] = "https://cdn.discordapp.com/attachments/902801014766338052/1094299531736264745/6737d8768484458da727394a599b7742.png"
            },
            ["fields"] = {
                {
                    ["name"] = "Аккаунт:", -- This is  the title of your field.
                    ["value"] = "||"..game.Players.LocalPlayer.Name.."||" -- This is the value of your field.
                },
                {
                    ["name"] = "Что произошло:", -- This is  the title of your field.
                    ["value"] = Blehh -- This is the value of your field.
                },
            }}
        }
    }
    local newdata = game:GetService("HttpService"):JSONEncode(data)

    local headers = {
        ["content-type"] = "application/json"
    }
    request = http_request or request or HttpPost or syn.request
    local abcdef = {Url = getgenv().be, Body = newdata, Method = "POST", Headers = headers}
    request(abcdef)
end)
end
local function sendWebhook1(Blehh, eb)
    pcall(function()
    local omagad
    if getgenv().omagad == "" then
        omagad = "Сияние"
    elseif getgenv().omagad ~= "" then
        omagad = getgenv().omagad
    end
    local clr = "0x4287f5"
    local data = {
        ['content'] = "",
        ['username'] = omagad,
        ["embeds"] = {{
            ['title'] = "",
            ['color'] = tonumber(clr),
            ["footer"] = {
                ["text"] = ("И помните: Сияние заботится о вас!"),
                ["icon_url"] = "https://cdn.discordapp.com/attachments/902801014766338052/1094299531736264745/6737d8768484458da727394a599b7742.png"
            },
            ["fields"] = {
                {
                    ["name"] = "Аккаунт:", -- This is  the title of your field.
                    ["value"] = "||"..game.Players.LocalPlayer.Name.."||" -- This is the value of your field.
                },
                {
                    ["name"] = "Что произошло:", -- This is  the title of your field.
                    ["value"] = Blehh -- This is the value of your field.
                },
            }}
        }
    }
    local newdata = game:GetService("HttpService"):JSONEncode(data)

    local headers = {
        ["content-type"] = "application/json"
    }
    request = http_request or request or HttpPost or syn.request
    local abcdef = {Url = getgenv().be, Body = newdata, Method = "POST", Headers = headers}
    request(abcdef)
end)
end
LocalPlayer.PlayerGui:WaitForChild("LoadingScreen")
repeat wait(1) if LocalPlayer.PlayerGui:FindFirstChild("LoadingScreen") then 
firesignal(LocalPlayer.PlayerGui:FindFirstChild('LoadingScreen').Frames.Main.Play.MouseButton1Click)
firesignal(LocalPlayer.PlayerGui:FindFirstChild('LoadingScreen').Frames.Gamemodes.MainGame.Play.MouseButton1Click)
end until LocalPlayer.PlayerGui:FindFirstChild("HUD")
print("Completed loading skip")
updateRibs()
if workspace.Rib.Value == 10 then
    print("10 ribs here")
    task.wait(1)
    LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-801.063, -42.5264, -861.054)
    local Player = game.Players.LocalPlayer
    local Character = Player.Character or Player.CharacterAdded:Wait()

    local Pity = function()
        return (Player.PlayerStats.PityCount.Value * 0.04) + 1
    end

    local UseRib = function()
        local A_1 = "LearnSkill"
        local A_2 = {
            ["Skill"] = "Worthiness V",
            ["SkillTreeType"] = "Character"
        }
        LocalPlayer.Character.RemoteFunction:InvokeServer(A_1, A_2)
        task.wait(0.3)
        local args = {[1] = "EndDialogue", [2] = { ["NPC"] = "Rib Cage of The Saint's Corpse", ["Option"] = "Option1", ["Dialogue"] = "Dialogue2" }}
        Character.RemoteEvent:FireServer(unpack(args))
    end
    
    while RibPityFarm do
        updateRibs()
        if Pity() >= WantedPity then
            sendWebhook("Вы получили желаемый пити!")
            Player:Kick("Вы полчили:".. Pity() .."Пити")
        end
        if workspace.Rib.Value <= 2 then
            sendWebhook1("Рибки Закончились. Ваш пити: ".. Pity())
                for i,v in pairs(Servers.data) do
                if v.playing ~= v.maxPlayers then
                        game:GetService('TeleportService'):TeleportToPlaceInstance(game.PlaceId, v.id)
            end
            end
        end
    
        UseRib()
    
        task.wait()
    end
end
if workspace.Rib.Value ~= 10 then
    print("10 ribs no here, starting farm...")
    XD()
    task.wait(2)
    while wait() do
        for _, aga in pairs(workspace.Item_Spawns.Items:GetChildren()) do
            if aga:IsA("Model") then
                for _, aga2 in pairs(aga:GetChildren()) do
                if aga2:IsA("MeshPart") then
                    if aga:FindFirstChild("ProximityPrompt") then
                        if aga.ProximityPrompt.ObjectText == "Rib Cage of The Saint's Corpse" and aga2.Transparency ~= 1 then
                            LocalPlayer.Character.HumanoidRootPart.CFrame = aga:GetModelCFrame()
                            wait(0.7)
                            if ping1 >= 200 then task.wait(0.5) end
                            if ping1 >= 300 then task.wait(0.5) end
                        if aga:FindFirstChild("ProximityPrompt") then
                                fireproximityprompt(aga.ProximityPrompt)
                                wait(1.2)
                                if ping1 >= 200 then task.wait(0.5) end
                                if ping1 >= 300 then task.wait(0.5) end
                                updateRibs()
                            if workspace.Rib.Value == 10 then
                                sendWebhook1("Рибки фулл")
                                    for i,v in pairs(Servers.data) do
                                        if v.playing ~= v.maxPlayers then
                                            game:GetService('TeleportService'):TeleportToPlaceInstance(game.PlaceId, v.id)
                                end
                            end
                            end
                            end
                            end
                        end
                end
                    end
            end
        end
        task.wait(1)
        if not game:GetService("Players").LocalPlayer.PlayerGui.HUD.Main.DropMoney.Money:FindFirstChild("+ITEM: Rib Cage of The Saint's Corpse") then
                for i,v in pairs(Servers.data) do
                    if v.playing ~= v.maxPlayers then
                            game:GetService('TeleportService'):TeleportToPlaceInstance(game.PlaceId, v.id)
            end
            end
        end
    end
end
