--[[
 .____                  ________ ___.    _____                           __                
 |    |    __ _______   \_____  \\_ |___/ ____\_ __  ______ ____ _____ _/  |_  ___________ 
 |    |   |  |  \__  \   /   |   \| __ \   __\  |  \/  ___// ___\\__  \\   __\/  _ \_  __ \
 |    |___|  |  // __ \_/    |    \ \_\ \  | |  |  /\___ \\  \___ / __ \|  | (  <_> )  | \/
 |_______ \____/(____  /\_______  /___  /__| |____//____  >\___  >____  /__|  \____/|__|   
         \/          \/         \/    \/                \/     \/     \/                   
          \_Welcome to LuaObfuscator.com   (Alpha 0.2.8) ~  Much Love, Ferib 

]]--

do
	local v0 = tonumber;
	local v1 = string.byte;
	local v2 = string.char;
	local v3 = string.sub;
	local v4 = string.gsub;
	local v5 = string.rep;
	local v6 = table.concat;
	local v7 = table.insert;
	local v8 = math.ldexp;
	local v9 = getfenv or function()
		return _ENV;
	end;
	local v10 = setmetatable;
	local v11 = pcall;
	local v12 = select;
	local v13 = unpack or table.unpack;
	local v14 = tonumber;
	local function v15(v16, v17, ...)
		local v18 = 1;
		local v19;
		v16 = v4(v3(v16, 5), "..", function(v30)
			if (v1(v30, 2) == 79) then
				v19 = v0(v3(v30, 1, 1));
				return "";
			else
				local v80 = v2(v0(v30, 16));
				if v19 then
					local v85 = v5(v80, v19);
					v19 = nil;
					return v85;
				else
					return v80;
				end
			end
		end);
		local function v20(v31, v32, v33)
			if v33 then
				local v81 = (v31 / ((5 - 3) ^ (v32 - 1))) % ((5 - 3) ^ (((v33 - ((1 + 0) - 0)) - (v32 - (2 - 1))) + (620 - (555 + 64))));
				return v81 - (v81 % (932 - (857 + 74)));
			else
				local v82 = (570 - (367 + 201)) ^ (v32 - 1);
				return (((v31 % (v82 + v82)) >= v82) and ((1805 - (282 + 595)) - (214 + (2350 - (1523 + 114))))) or (0 + 0 + 0);
			end
		end
		local function v21()
			local v34 = v1(v16, v18, v18);
			v18 = v18 + 1;
			return v34;
		end
		local function v22()
			local v35 = 0 - 0;
			local v36;
			local v37;
			while true do
				if (v35 == (1066 - (68 + 997))) then
					return (v37 * 256) + v36;
				end
				if (v35 == (1270 - (222 + 4 + 1044))) then
					v36, v37 = v1(v16, v18, v18 + (8 - 6));
					v18 = v18 + 2;
					v35 = 118 - (32 + 19 + 66);
				end
			end
		end
		local function v23()
			local v38, v39, v40, v41 = v1(v16, v18, v18 + (960 - ((1242 - (87 + 263)) + 65)));
			v18 = v18 + 4;
			return (v41 * (40022563 - 23245347)) + (v40 * (121138 - 55602)) + (v39 * (469 - 213)) + v38;
		end
		local function v24()
			local v42 = v23();
			local v43 = v23();
			local v44 = 181 - (67 + 113);
			local v45 = (v20(v43, 1 + (791 - (368 + 423)), 49 - 29) * ((2 + 0) ^ ((399 - 272) - (113 - (10 + 8))))) + v42;
			local v46 = v20(v43, 973 - (802 + 150), 83 - (199 - 147));
			local v47 = ((v20(v43, 57 - 25) == (1 + 0)) and -(443 - (416 + 26))) or 1;
			if (v46 == (997 - (915 + 82))) then
				if (v45 == ((0 - 0) - (0 + 0))) then
					return v47 * (0 + 0);
				else
					v46 = 1 - 0;
					v44 = (2100 - 913) - (1069 + 118);
				end
			elseif (v46 == (4643 - 2596)) then
				return ((v45 == 0) and (v47 * ((1 - 0) / (0 + (438 - (145 + 293)))))) or (v47 * NaN);
			end
			return v8(v47, v46 - (1817 - 794)) * (v44 + (v45 / (2 ^ (52 + (430 - (44 + 386))))));
		end
		local function v25(v48)
			local v49 = 1486 - (998 + 488);
			local v50;
			local v51;
			while true do
				if (v49 == ((2 - 1) + 1 + 0)) then
					v51 = {};
					for v86 = 1 + 0 + 0, #v50 do
						v51[v86] = v2(v1(v3(v50, v86, v86)));
					end
					v49 = (1660 - (261 + 624)) - (201 + 571);
				end
				if (v49 == 1) then
					v50 = v3(v16, v18, (v18 + v48) - (1139 - (116 + (1815 - 793))));
					v18 = v18 + v48;
					v49 = 8 - 6;
				end
				if (v49 == (2 + 1)) then
					return v6(v51);
				end
				if (v49 == (0 - 0)) then
					v50 = nil;
					if not v48 then
						local v93 = 0;
						while true do
							if (v93 == 0) then
								v48 = v23();
								if (v48 == ((1080 - (1020 + 60)) - 0)) then
									return "";
								end
								break;
							end
						end
					end
					v49 = 860 - (814 + 45);
				end
			end
		end
		local v26 = v23;
		local function v27(...)
			return {...}, v12("#", ...);
		end
		local function v28()
			local v52 = 1086 - (461 + 625);
			local v53;
			local v54;
			local v55;
			local v56;
			local v57;
			local v58;
			local v59;
			while true do
				if (v52 == (1 + 2)) then
					v59 = nil;
					while true do
						local v88 = 0 + 0;
						while true do
							if (v88 ~= (837 - (660 + 176))) then
							else
								if (2 == v53) then
									for v99 = 1 + 0, v23() do
										local v100 = 202 - (14 + 188);
										local v101;
										local v102;
										local v103;
										while true do
											if (v100 == (675 - (534 + 141))) then
												v101 = 0;
												v102 = nil;
												v100 = 1 + 0;
											end
											if (v100 ~= 1) then
											else
												v103 = nil;
												while true do
													if (v101 == 1) then
														while true do
															if (v102 ~= (0 + 0)) then
															else
																v103 = v21();
																if (v20(v103, 1172 - (418 + 753), 1 + 0) ~= (0 + 0)) then
																else
																	local v437 = 0 + 0;
																	local v438;
																	local v439;
																	local v440;
																	while true do
																		if (v437 ~= 0) then
																		else
																			v438 = v20(v103, 1 + 1, 6 - 3);
																			v439 = v20(v103, 1773 - (1749 + 20), 2 + 4);
																			v437 = 1323 - (1249 + 73);
																		end
																		if ((4 - 1) ~= v437) then
																		else
																			if (v20(v439, 8 - 5, 3) == (1 + 0)) then
																				v440[4] = v59[v440[4]];
																			end
																			v54[v99] = v440;
																			break;
																		end
																		if (v437 ~= (1 + 0)) then
																		else
																			local v1770 = 0;
																			while true do
																				if (v1770 ~= 1) then
																				else
																					v437 = 4 - 2;
																					break;
																				end
																				if (v1770 == (396 - (115 + 281))) then
																					v440 = {v22(),v22(),nil,nil};
																					if (v438 == (0 + 0)) then
																						local v2843 = 0 - 0;
																						local v2844;
																						local v2845;
																						while true do
																							if (v2843 == 1) then
																								while true do
																									if (v2844 == (0 - 0)) then
																										v2845 = 0 - 0;
																										while true do
																											if (v2845 == (867 - (550 + 317))) then
																												v440[117 - (4 + 110)] = v22();
																												v440[588 - (57 + 527)] = v22();
																												break;
																											end
																										end
																										break;
																									end
																								end
																								break;
																							end
																							if (v2843 == (0 - 0)) then
																								v2844 = 0;
																								v2845 = nil;
																								v2843 = 1 - 0;
																							end
																						end
																					elseif (v438 == (2 - 1)) then
																						v440[3] = v23();
																					elseif (v438 == (1429 - (41 + 1386))) then
																						v440[3] = v23() - ((287 - (134 + 151)) ^ (1681 - (970 + 695)));
																					elseif (v438 ~= 3) then
																					else
																						local v2849 = 0;
																						while true do
																							if (0 ~= v2849) then
																							else
																								v440[106 - (17 + 86)] = v23() - (2 ^ (30 - 14));
																								v440[1994 - (582 + 1408)] = v22();
																								break;
																							end
																						end
																					end
																					v1770 = 1;
																				end
																			end
																		end
																		if (v437 == (6 - 4)) then
																			if (v20(v439, 1 - 0, 1) == (3 - 2)) then
																				v440[1826 - (1195 + 629)] = v59[v440[2 - 0]];
																			end
																			if (v20(v439, 243 - (187 + 54), 782 - (162 + 618)) == (1 + 0)) then
																				v440[9 - 6] = v59[v440[2 + 1]];
																			end
																			v437 = 6 - 3;
																		end
																	end
																end
																break;
															end
														end
														break;
													end
													if (v101 == (0 + 0)) then
														local v108 = 0 + 0;
														while true do
															if (v108 == (1 - 0)) then
																v101 = 1 + 0;
																break;
															end
															if (v108 ~= 0) then
															else
																local v110 = 1636 - (1373 + 263);
																while true do
																	if (v110 == 1) then
																		v108 = 1001 - (451 + 549);
																		break;
																	end
																	if (v110 == (65 - (30 + 35))) then
																		v102 = 0;
																		v103 = nil;
																		v110 = 1 + 0;
																	end
																end
															end
														end
													end
												end
												break;
											end
										end
									end
									for v104 = 1258 - (1043 + 214), v23() do
										v55[v104 - (1 + 0)] = v28();
									end
									return v57;
								end
								break;
							end
							if (v88 == (0 - 0)) then
								if (v53 ~= (0 - 0)) then
								else
									local v96 = 1384 - (746 + 638);
									while true do
										if (v96 == (2 - 1)) then
											v56 = {};
											v57 = {v54,v55,nil,v56};
											v96 = 2;
										end
										if (v96 == (341 - (218 + 123))) then
											v54 = {};
											v55 = {};
											v96 = 1582 - (1535 + 46);
										end
										if (v96 == 2) then
											v53 = 1 + 0;
											break;
										end
									end
								end
								if (v53 == 1) then
									local v97 = 0 - 0;
									local v98;
									while true do
										if ((0 + 0) ~= v97) then
										else
											v98 = 560 - (306 + 254);
											while true do
												if (v98 == 2) then
													v53 = 1 + 1;
													break;
												end
												if (v98 ~= 0) then
												else
													local v106 = 0 - 0;
													while true do
														if (v106 == 0) then
															v58 = v23();
															v59 = {};
															v106 = 127 - (116 + 10);
														end
														if (v106 ~= (1468 - (899 + 568))) then
														else
															v98 = 739 - (542 + 196);
															break;
														end
													end
												end
												if ((1 + 0) ~= v98) then
												else
													local v107 = 0;
													while true do
														if ((0 - 0) == v107) then
															for v111 = 604 - (268 + 335), v58 do
																local v112 = 0;
																local v113;
																local v114;
																local v115;
																while true do
																	if (v112 ~= (290 - (60 + 230))) then
																	else
																		v113 = 0 + 0;
																		v114 = nil;
																		v112 = 2 - 1;
																	end
																	if (v112 == 1) then
																		v115 = nil;
																		while true do
																			if ((572 - (426 + 146)) ~= v113) then
																			else
																				local v2769 = 0 - 0;
																				local v2770;
																				while true do
																					if (v2769 ~= (0 + 0)) then
																					else
																						v2770 = 405 - (118 + 287);
																						while true do
																							if (v2770 ~= 0) then
																							else
																								local v2847 = 0 - 0;
																								while true do
																									if (v2847 == (1456 - (282 + 1174))) then
																										v114 = v21();
																										v115 = nil;
																										v2847 = 812 - (569 + 242);
																									end
																									if (v2847 == 1) then
																										v2770 = 2 - 1;
																										break;
																									end
																								end
																							end
																							if ((4 - 3) ~= v2770) then
																							else
																								v113 = 1 + 0;
																								break;
																							end
																						end
																						break;
																					end
																				end
																			end
																			if (v113 == (1 + 0)) then
																				if (v114 == 1) then
																					v115 = v21() ~= (1024 - (706 + 318));
																				elseif (v114 == (1253 - (721 + 530))) then
																					v115 = v24();
																				elseif (v114 ~= (1274 - (945 + 326))) then
																				else
																					v115 = v25();
																				end
																				v59[v111] = v115;
																				break;
																			end
																		end
																		break;
																	end
																end
															end
															v57[7 - 4] = v21();
															v107 = 1;
														end
														if (v107 == 1) then
															v98 = 2 + 0;
															break;
														end
													end
												end
											end
											break;
										end
									end
								end
								v88 = 701 - (271 + 429);
							end
						end
					end
					break;
				end
				if (v52 == (1 + 0)) then
					v55 = nil;
					v56 = nil;
					v52 = 2 + 0;
				end
				if (v52 == (0 + 0)) then
					v53 = 1500 - (1408 + 92);
					v54 = nil;
					v52 = 1;
				end
				if (v52 == 2) then
					v57 = nil;
					v58 = nil;
					v52 = 2 + 1;
				end
			end
		end
		local function v29(v60, v61, v62)
			local v63 = v60[1];
			local v64 = v60[2];
			local v65 = v60[3];
			return function(...)
				local v66 = v63;
				local v67 = v64;
				local v68 = v65;
				local v69 = v27;
				local v70 = 1;
				local v71 = -1;
				local v72 = {};
				local v73 = {...};
				local v74 = v12("#", ...) - 1;
				local v75 = {};
				local v76 = {};
				for v83 = 0, v74 do
					if (v83 >= v68) then
						v72[v83 - v68] = v73[v83 + 1];
					else
						v76[v83] = v73[v83 + 1];
					end
				end
				local v77 = (v74 - v68) + 1;
				local v78;
				local v79;
				while true do
					local v84 = 0;
					while true do
						if (v84 == 0) then
							v78 = v66[v70];
							v79 = v78[1];
							v84 = 1;
						end
						if (v84 == 1) then
							if (v79 <= 96) then
								if (v79 <= 47) then
									if (v79 <= 23) then
										if (v79 <= 11) then
											if (v79 <= 5) then
												if (v79 <= 2) then
													if (v79 <= 0) then
														local v116 = 0;
														local v117;
														local v118;
														while true do
															if (1 == v116) then
																v78 = v66[v70];
																v76[v78[2]] = v78[3];
																v70 = v70 + 1;
																v78 = v66[v70];
																v116 = 2;
															end
															if (2 == v116) then
																v118 = v78[2];
																v76[v118](v76[v118 + 1]);
																v70 = v70 + 1;
																v78 = v66[v70];
																v116 = 3;
															end
															if (v116 == 3) then
																v76[v78[2]] = v76[v78[3]][v78[4]];
																v70 = v70 + 1;
																v78 = v66[v70];
																v76[v78[2]] = v76[v78[3]][v78[4]];
																v116 = 4;
															end
															if (v116 == 5) then
																v76[v118 + 1] = v117;
																v76[v118] = v117[v78[4]];
																break;
															end
															if (v116 == 0) then
																v117 = nil;
																v118 = nil;
																v76[v78[2]] = v76[v78[3]][v78[4]];
																v70 = v70 + 1;
																v116 = 1;
															end
															if (v116 == 4) then
																v70 = v70 + 1;
																v78 = v66[v70];
																v118 = v78[2];
																v117 = v76[v78[3]];
																v116 = 5;
															end
														end
													elseif (v79 == 1) then
														v76[v78[2]] = v76[v78[3]] + v76[v78[4]];
													else
														local v442 = 0;
														local v443;
														local v444;
														while true do
															if (v442 == 5) then
																v78 = v66[v70];
																v76[v78[2]] = v76[v78[3]][v78[4]];
																v70 = v70 + 1;
																v78 = v66[v70];
																v76[v78[2]] = v76[v78[3]][v78[4]];
																v70 = v70 + 1;
																v442 = 6;
															end
															if (v442 == 2) then
																v70 = v70 + 1;
																v78 = v66[v70];
																v444 = v78[2];
																v76[v444] = v76[v444](v13(v76, v444 + 1, v78[3]));
																v70 = v70 + 1;
																v78 = v66[v70];
																v442 = 3;
															end
															if (v442 == 3) then
																v444 = v78[2];
																v443 = v76[v78[3]];
																v76[v444 + 1] = v443;
																v76[v444] = v443[v78[4]];
																v70 = v70 + 1;
																v78 = v66[v70];
																v442 = 4;
															end
															if (v442 == 4) then
																v76[v78[2]] = v78[3];
																v70 = v70 + 1;
																v78 = v66[v70];
																v444 = v78[2];
																v76[v444] = v76[v444](v13(v76, v444 + 1, v78[3]));
																v70 = v70 + 1;
																v442 = 5;
															end
															if (v442 == 0) then
																v443 = nil;
																v444 = nil;
																v76[v78[2]] = v76[v78[3]][v78[4]];
																v70 = v70 + 1;
																v78 = v66[v70];
																v444 = v78[2];
																v442 = 1;
															end
															if (v442 == 6) then
																v78 = v66[v70];
																v76[v78[2]] = v76[v78[3]][v78[4]];
																break;
															end
															if (v442 == 1) then
																v443 = v76[v78[3]];
																v76[v444 + 1] = v443;
																v76[v444] = v443[v78[4]];
																v70 = v70 + 1;
																v78 = v66[v70];
																v76[v78[2]] = v78[3];
																v442 = 2;
															end
														end
													end
												elseif (v79 <= 3) then
													v76[v78[2]] = v78[3];
												elseif (v79 > 4) then
													v76[v78[2]] = v62[v78[3]];
												elseif (v76[v78[2]] == v76[v78[4]]) then
													v70 = v70 + 1;
												else
													v70 = v78[3];
												end
											elseif (v79 <= 8) then
												if (v79 <= 6) then
													local v121 = 0;
													local v122;
													local v123;
													while true do
														if (v121 == 2) then
															v76[v78[2]] = v61[v78[3]];
															v70 = v70 + 1;
															v78 = v66[v70];
															v76[v78[2]] = v76[v78[3]][v78[4]];
															v121 = 3;
														end
														if (v121 == 6) then
															v70 = v70 + 1;
															v78 = v66[v70];
															v123 = v78[2];
															v76[v123] = v76[v123](v13(v76, v123 + 1, v78[3]));
															v121 = 7;
														end
														if (v121 == 3) then
															v70 = v70 + 1;
															v78 = v66[v70];
															v76[v78[2]] = v76[v78[3]][v76[v78[4]]];
															v70 = v70 + 1;
															v121 = 4;
														end
														if (v121 == 1) then
															v78 = v66[v70];
															v76[v78[2]] = v76[v78[3]][v78[4]];
															v70 = v70 + 1;
															v78 = v66[v70];
															v121 = 2;
														end
														if (v121 == 7) then
															v70 = v70 + 1;
															v78 = v66[v70];
															if not v76[v78[2]] then
																v70 = v70 + 1;
															else
																v70 = v78[3];
															end
															break;
														end
														if (v121 == 0) then
															v122 = nil;
															v123 = nil;
															v76[v78[2]] = v61[v78[3]];
															v70 = v70 + 1;
															v121 = 1;
														end
														if (v121 == 5) then
															v76[v123] = v122[v78[4]];
															v70 = v70 + 1;
															v78 = v66[v70];
															v76[v78[2]] = v78[3];
															v121 = 6;
														end
														if (v121 == 4) then
															v78 = v66[v70];
															v123 = v78[2];
															v122 = v76[v78[3]];
															v76[v123 + 1] = v122;
															v121 = 5;
														end
													end
												elseif (v79 == 7) then
													local v447;
													v76[v78[2]] = v62[v78[3]];
													v70 = v70 + 1;
													v78 = v66[v70];
													v447 = v78[2];
													v76[v447] = v76[v447]();
													v70 = v70 + 1;
													v78 = v66[v70];
													v76[v78[2]] = v76[v78[3]][v78[4]];
													v70 = v70 + 1;
													v78 = v66[v70];
													v76[v78[2]][v78[3]] = v76[v78[4]];
													v70 = v70 + 1;
													v78 = v66[v70];
													v76[v78[2]][v78[3]] = v76[v78[4]];
													v70 = v70 + 1;
													v78 = v66[v70];
													v76[v78[2]][v78[3]] = v78[4];
													v70 = v70 + 1;
													v78 = v66[v70];
													v76[v78[2]][v78[3]] = v76[v78[4]];
													v70 = v70 + 1;
													v78 = v66[v70];
													v76[v78[2]] = v76[v78[3]];
													v70 = v70 + 1;
													v78 = v66[v70];
													v76[v78[2]] = v62[v78[3]];
													v70 = v70 + 1;
													v78 = v66[v70];
													v76[v78[2]] = v76[v78[3]];
													v70 = v70 + 1;
													v78 = v66[v70];
													v447 = v78[2];
													v76[v447](v76[v447 + 1]);
													v70 = v70 + 1;
													v78 = v66[v70];
													v70 = v78[3];
												else
													v76[v78[2]][v78[3]] = v76[v78[4]];
												end
											elseif (v79 <= 9) then
												local v124 = v78[2];
												do
													return v13(v76, v124, v124 + v78[3]);
												end
											elseif (v79 == 10) then
												local v461 = v67[v78[3]];
												local v462;
												local v463 = {};
												v462 = v10({}, {__index=function(v1280, v1281)
													local v1282 = v463[v1281];
													return v1282[1][v1282[2]];
												end,__newindex=function(v1283, v1284, v1285)
													local v1286 = v463[v1284];
													v1286[1][v1286[2]] = v1285;
												end});
												for v1288 = 1, v78[4] do
													v70 = v70 + 1;
													local v1289 = v66[v70];
													if (v1289[1] == 152) then
														v463[v1288 - 1] = {v76,v1289[3]};
													else
														v463[v1288 - 1] = {v61,v1289[3]};
													end
													v75[#v75 + 1] = v463;
												end
												v76[v78[2]] = v29(v461, v462, v62);
											else
												local v465;
												local v466;
												v76[v78[2]] = v76[v78[3]][v78[4]];
												v70 = v70 + 1;
												v78 = v66[v70];
												v466 = v78[2];
												v465 = v76[v78[3]];
												v76[v466 + 1] = v465;
												v76[v466] = v465[v78[4]];
												v70 = v70 + 1;
												v78 = v66[v70];
												v76[v78[2]] = v78[3];
												v70 = v70 + 1;
												v78 = v66[v70];
												v466 = v78[2];
												v76[v466] = v76[v466](v13(v76, v466 + 1, v78[3]));
												v70 = v70 + 1;
												v78 = v66[v70];
												if not v76[v78[2]] then
													v70 = v70 + 1;
												else
													v70 = v78[3];
												end
											end
										elseif (v79 <= 17) then
											if (v79 <= 14) then
												if (v79 <= 12) then
													local v125;
													v76[v78[2]] = v76[v78[3]][v78[4]];
													v70 = v70 + 1;
													v78 = v66[v70];
													v76[v78[2]] = v78[3];
													v70 = v70 + 1;
													v78 = v66[v70];
													v76[v78[2]] = v76[v78[3]];
													v70 = v70 + 1;
													v78 = v66[v70];
													v125 = v78[2];
													v76[v125] = v76[v125](v13(v76, v125 + 1, v78[3]));
													v70 = v70 + 1;
													v78 = v66[v70];
													v76[v78[2]] = v76[v78[3]];
													v70 = v70 + 1;
													v78 = v66[v70];
													v76[v78[2]] = v78[3];
													v70 = v70 + 1;
													v78 = v66[v70];
													v70 = v78[3];
												elseif (v79 == 13) then
													local v476;
													local v477;
													local v478;
													v76[v78[2]] = v78[3];
													v70 = v70 + 1;
													v78 = v66[v70];
													v76[v78[2]] = v76[v78[3]];
													v70 = v70 + 1;
													v78 = v66[v70];
													v478 = v78[3];
													v477 = v76[v478];
													for v1291 = v478 + 1, v78[4] do
														v477 = v477 .. v76[v1291];
													end
													v76[v78[2]] = v477;
													v70 = v70 + 1;
													v78 = v66[v70];
													v476 = v78[2];
													v76[v476](v76[v476 + 1]);
													v70 = v70 + 1;
													v78 = v66[v70];
													v70 = v78[3];
												else
													local v485;
													v76[v78[2]][v78[3]] = v78[4];
													v70 = v70 + 1;
													v78 = v66[v70];
													v76[v78[2]] = {};
													v70 = v70 + 1;
													v78 = v66[v70];
													v76[v78[2]][v78[3]] = v78[4];
													v70 = v70 + 1;
													v78 = v66[v70];
													v76[v78[2]] = v76[v78[3]][v78[4]];
													v70 = v70 + 1;
													v78 = v66[v70];
													v76[v78[2]][v78[3]] = v76[v78[4]];
													v70 = v70 + 1;
													v78 = v66[v70];
													v76[v78[2]][v78[3]] = v76[v78[4]];
													v70 = v70 + 1;
													v78 = v66[v70];
													v76[v78[2]] = v76[v78[3]];
													v70 = v70 + 1;
													v78 = v66[v70];
													v76[v78[2]] = v62[v78[3]];
													v70 = v70 + 1;
													v78 = v66[v70];
													v76[v78[2]] = v78[3];
													v70 = v70 + 1;
													v78 = v66[v70];
													v76[v78[2]] = v76[v78[3]][v78[4]];
													v70 = v70 + 1;
													v78 = v66[v70];
													v485 = v78[2];
													v76[v485](v13(v76, v485 + 1, v78[3]));
													v70 = v70 + 1;
													v78 = v66[v70];
													v76[v78[2]] = v78[3];
												end
											elseif (v79 <= 15) then
												local v133;
												local v134;
												local v133, v135;
												local v136;
												local v137;
												v76[v78[2]] = v76[v78[3]][v78[4]];
												v70 = v70 + 1;
												v78 = v66[v70];
												v76[v78[2]] = v76[v78[3]][v78[4]];
												v70 = v70 + 1;
												v78 = v66[v70];
												v76[v78[2]] = v76[v78[3]][v78[4]];
												v70 = v70 + 1;
												v78 = v66[v70];
												v76[v78[2]] = v76[v78[3]][v78[4]];
												v70 = v70 + 1;
												v78 = v66[v70];
												v76[v78[2]] = v76[v78[3]][v78[4]];
												v70 = v70 + 1;
												v78 = v66[v70];
												v76[v78[2]] = v76[v78[3]][v78[4]];
												v70 = v70 + 1;
												v78 = v66[v70];
												v137 = v78[2];
												v136 = v76[v78[3]];
												v76[v137 + 1] = v136;
												v76[v137] = v136[v78[4]];
												v70 = v70 + 1;
												v78 = v66[v70];
												v137 = v78[2];
												v133, v135 = v69(v76[v137](v76[v137 + 1]));
												v71 = (v135 + v137) - 1;
												v134 = 0;
												for v426 = v137, v71 do
													v134 = v134 + 1;
													v76[v426] = v133[v134];
												end
												v70 = v70 + 1;
												v78 = v66[v70];
												v137 = v78[2];
												v133 = {v76[v137](v13(v76, v137 + 1, v71))};
												v134 = 0;
												for v429 = v137, v78[4] do
													v134 = v134 + 1;
													v76[v429] = v133[v134];
												end
												v70 = v70 + 1;
												v78 = v66[v70];
												v70 = v78[3];
											elseif (v79 > 16) then
												local v496 = 0;
												local v497;
												while true do
													if (0 == v496) then
														v497 = nil;
														v76[v78[2]] = v76[v78[3]][v78[4]];
														v70 = v70 + 1;
														v78 = v66[v70];
														v496 = 1;
													end
													if (v496 == 5) then
														v76[v497] = v76[v497](v13(v76, v497 + 1, v78[3]));
														v70 = v70 + 1;
														v78 = v66[v70];
														v76[v78[2]][v78[3]] = v76[v78[4]];
														v496 = 6;
													end
													if (v496 == 3) then
														v78 = v66[v70];
														v76[v78[2]] = v78[3];
														v70 = v70 + 1;
														v78 = v66[v70];
														v496 = 4;
													end
													if (1 == v496) then
														v76[v78[2]] = v62[v78[3]];
														v70 = v70 + 1;
														v78 = v66[v70];
														v76[v78[2]] = v76[v78[3]][v78[4]];
														v496 = 2;
													end
													if (v496 == 6) then
														v70 = v70 + 1;
														v78 = v66[v70];
														v76[v78[2]] = v62[v78[3]];
														v70 = v70 + 1;
														v496 = 7;
													end
													if (v496 == 7) then
														v78 = v66[v70];
														v76[v78[2]] = v76[v78[3]][v78[4]];
														break;
													end
													if (4 == v496) then
														v76[v78[2]] = v78[3];
														v70 = v70 + 1;
														v78 = v66[v70];
														v497 = v78[2];
														v496 = 5;
													end
													if (v496 == 2) then
														v70 = v70 + 1;
														v78 = v66[v70];
														v76[v78[2]] = v78[3];
														v70 = v70 + 1;
														v496 = 3;
													end
												end
											else
												local v498;
												v498 = v78[2];
												v76[v498] = v76[v498](v13(v76, v498 + 1, v78[3]));
												v70 = v70 + 1;
												v78 = v66[v70];
												v76[v78[2]] = v76[v78[3]] + v76[v78[4]];
												v70 = v70 + 1;
												v78 = v66[v70];
												v76[v78[2]][v78[3]] = v76[v78[4]];
												v70 = v70 + 1;
												v78 = v66[v70];
												v76[v78[2]] = v78[3];
												v70 = v70 + 1;
												v78 = v66[v70];
												v70 = v78[3];
											end
										elseif (v79 <= 20) then
											if (v79 <= 18) then
												v70 = v78[3];
											elseif (v79 > 19) then
												local v506 = v78[2];
												do
													return v13(v76, v506, v71);
												end
											else
												local v507 = 0;
												local v508;
												local v509;
												local v510;
												local v511;
												local v512;
												while true do
													if (v507 == 12) then
														v78 = v66[v70];
														v512 = v78[2];
														v508 = {v76[v512](v13(v76, v512 + 1, v71))};
														v509 = 0;
														for v2772 = v512, v78[4] do
															local v2773 = 0;
															while true do
																if (v2773 == 0) then
																	v509 = v509 + 1;
																	v76[v2772] = v508[v509];
																	break;
																end
															end
														end
														v70 = v70 + 1;
														v78 = v66[v70];
														v70 = v78[3];
														break;
													end
													if (v507 == 4) then
														v512 = v78[2];
														v76[v512](v13(v76, v512 + 1, v78[3]));
														v70 = v70 + 1;
														v78 = v66[v70];
														v76[v78[2]] = v62[v78[3]];
														v70 = v70 + 1;
														v78 = v66[v70];
														v76[v78[2]] = v61[v78[3]];
														v507 = 5;
													end
													if (v507 == 3) then
														v70 = v70 + 1;
														v78 = v66[v70];
														v76[v78[2]][v78[3]] = v78[4];
														v70 = v70 + 1;
														v78 = v66[v70];
														v76[v78[2]][v78[3]] = v78[4];
														v70 = v70 + 1;
														v78 = v66[v70];
														v507 = 4;
													end
													if (v507 == 0) then
														v508 = nil;
														v509 = nil;
														v508, v510 = nil;
														v511 = nil;
														v512 = nil;
														v76[v78[2]] = v76[v78[3]][v78[4]];
														v70 = v70 + 1;
														v78 = v66[v70];
														v507 = 1;
													end
													if (5 == v507) then
														v70 = v70 + 1;
														v78 = v66[v70];
														v76[v78[2]] = v76[v78[3]][v78[4]];
														v70 = v70 + 1;
														v78 = v66[v70];
														v512 = v78[2];
														v511 = v76[v78[3]];
														v76[v512 + 1] = v511;
														v507 = 6;
													end
													if (v507 == 11) then
														v70 = v70 + 1;
														v78 = v66[v70];
														v512 = v78[2];
														v508, v510 = v69(v76[v512](v76[v512 + 1]));
														v71 = (v510 + v512) - 1;
														v509 = 0;
														for v2774 = v512, v71 do
															local v2775 = 0;
															while true do
																if (v2775 == 0) then
																	v509 = v509 + 1;
																	v76[v2774] = v508[v509];
																	break;
																end
															end
														end
														v70 = v70 + 1;
														v507 = 12;
													end
													if (v507 == 8) then
														v76[v78[2]] = v78[3];
														v70 = v70 + 1;
														v78 = v66[v70];
														v512 = v78[2];
														v76[v512] = v76[v512](v13(v76, v512 + 1, v78[3]));
														v70 = v70 + 1;
														v78 = v66[v70];
														v512 = v78[2];
														v507 = 9;
													end
													if (v507 == 9) then
														v511 = v76[v78[3]];
														v76[v512 + 1] = v511;
														v76[v512] = v511[v78[4]];
														v70 = v70 + 1;
														v78 = v66[v70];
														v76[v78[2]] = v78[3];
														v70 = v70 + 1;
														v78 = v66[v70];
														v507 = 10;
													end
													if (v507 == 2) then
														v78 = v66[v70];
														v76[v78[2]] = v78[3];
														v70 = v70 + 1;
														v78 = v66[v70];
														v76[v78[2]] = {};
														v70 = v70 + 1;
														v78 = v66[v70];
														v76[v78[2]][v78[3]] = v78[4];
														v507 = 3;
													end
													if (v507 == 1) then
														v76[v78[2]] = v76[v78[3]][v78[4]];
														v70 = v70 + 1;
														v78 = v66[v70];
														v512 = v78[2];
														v511 = v76[v78[3]];
														v76[v512 + 1] = v511;
														v76[v512] = v511[v78[4]];
														v70 = v70 + 1;
														v507 = 2;
													end
													if (6 == v507) then
														v76[v512] = v511[v78[4]];
														v70 = v70 + 1;
														v78 = v66[v70];
														v76[v78[2]] = v78[3];
														v70 = v70 + 1;
														v78 = v66[v70];
														v512 = v78[2];
														v76[v512] = v76[v512](v13(v76, v512 + 1, v78[3]));
														v507 = 7;
													end
													if (v507 == 7) then
														v70 = v70 + 1;
														v78 = v66[v70];
														v512 = v78[2];
														v511 = v76[v78[3]];
														v76[v512 + 1] = v511;
														v76[v512] = v511[v78[4]];
														v70 = v70 + 1;
														v78 = v66[v70];
														v507 = 8;
													end
													if (v507 == 10) then
														v512 = v78[2];
														v76[v512] = v76[v512](v13(v76, v512 + 1, v78[3]));
														v70 = v70 + 1;
														v78 = v66[v70];
														v512 = v78[2];
														v511 = v76[v78[3]];
														v76[v512 + 1] = v511;
														v76[v512] = v511[v78[4]];
														v507 = 11;
													end
												end
											end
										elseif (v79 <= 21) then
											local v148;
											v76[v78[2]] = v62[v78[3]];
											v70 = v70 + 1;
											v78 = v66[v70];
											v148 = v78[2];
											v76[v148] = v76[v148]();
											v70 = v70 + 1;
											v78 = v66[v70];
											v76[v78[2]] = v76[v78[3]][v78[4]];
											v70 = v70 + 1;
											v78 = v66[v70];
											v76[v78[2]][v78[3]] = v76[v78[4]];
											v70 = v70 + 1;
											v78 = v66[v70];
											v76[v78[2]][v78[3]] = v76[v78[4]];
											v70 = v70 + 1;
											v78 = v66[v70];
											v76[v78[2]][v78[3]] = v78[4];
											v70 = v70 + 1;
											v78 = v66[v70];
											v76[v78[2]][v78[3]] = v76[v78[4]];
											v70 = v70 + 1;
											v78 = v66[v70];
											v76[v78[2]] = v76[v78[3]];
											v70 = v70 + 1;
											v78 = v66[v70];
											v76[v78[2]] = v62[v78[3]];
											v70 = v70 + 1;
											v78 = v66[v70];
											v76[v78[2]] = v76[v78[3]];
											v70 = v70 + 1;
											v78 = v66[v70];
											v148 = v78[2];
											v76[v148](v76[v148 + 1]);
											v70 = v70 + 1;
											v78 = v66[v70];
											v70 = v78[3];
										elseif (v79 > 22) then
											local v513 = 0;
											local v514;
											while true do
												if (v513 == 2) then
													v78 = v66[v70];
													v76[v78[2]] = v76[v78[3]][v78[4]];
													v70 = v70 + 1;
													v513 = 3;
												end
												if (v513 == 5) then
													v78 = v66[v70];
													v76[v78[2]] = v78[3];
													v70 = v70 + 1;
													v513 = 6;
												end
												if (0 == v513) then
													v514 = nil;
													v76[v78[2]] = v76[v78[3]][v78[4]];
													v70 = v70 + 1;
													v513 = 1;
												end
												if (v513 == 9) then
													v70 = v70 + 1;
													v78 = v66[v70];
													v76[v78[2]] = v76[v78[3]] + v76[v78[4]];
													break;
												end
												if (v513 == 1) then
													v78 = v66[v70];
													v76[v78[2]] = v76[v78[3]][v78[4]];
													v70 = v70 + 1;
													v513 = 2;
												end
												if (v513 == 8) then
													v78 = v66[v70];
													v514 = v78[2];
													v76[v514] = v76[v514](v13(v76, v514 + 1, v78[3]));
													v513 = 9;
												end
												if (4 == v513) then
													v78 = v66[v70];
													v76[v78[2]] = v76[v78[3]][v78[4]];
													v70 = v70 + 1;
													v513 = 5;
												end
												if (v513 == 7) then
													v78 = v66[v70];
													v76[v78[2]] = v78[3];
													v70 = v70 + 1;
													v513 = 8;
												end
												if (v513 == 3) then
													v78 = v66[v70];
													v76[v78[2]] = v62[v78[3]];
													v70 = v70 + 1;
													v513 = 4;
												end
												if (6 == v513) then
													v78 = v66[v70];
													v76[v78[2]] = v78[3];
													v70 = v70 + 1;
													v513 = 7;
												end
											end
										else
											local v515;
											local v516;
											v76[v78[2]] = v76[v78[3]][v78[4]];
											v70 = v70 + 1;
											v78 = v66[v70];
											v76[v78[2]]();
											v70 = v70 + 1;
											v78 = v66[v70];
											v76[v78[2]] = v62[v78[3]];
											v70 = v70 + 1;
											v78 = v66[v70];
											v516 = v78[2];
											v515 = v76[v78[3]];
											v76[v516 + 1] = v515;
											v76[v516] = v515[v78[4]];
											v70 = v70 + 1;
											v78 = v66[v70];
											v516 = v78[2];
											v76[v516] = v76[v516](v76[v516 + 1]);
											v70 = v70 + 1;
											v78 = v66[v70];
											if v76[v78[2]] then
												v70 = v70 + 1;
											else
												v70 = v78[3];
											end
										end
									elseif (v79 <= 35) then
										if (v79 <= 29) then
											if (v79 <= 26) then
												if (v79 <= 24) then
													local v160 = 0;
													local v161;
													local v162;
													while true do
														if (5 == v160) then
															v78 = v66[v70];
															v162 = v78[2];
															v76[v162] = v76[v162](v13(v76, v162 + 1, v78[3]));
															v70 = v70 + 1;
															v160 = 6;
														end
														if (v160 == 0) then
															v161 = nil;
															v162 = nil;
															v76[v78[2]] = v78[3];
															v70 = v70 + 1;
															v160 = 1;
														end
														if (v160 == 9) then
															v78 = v66[v70];
															v162 = v78[2];
															v76[v162] = v76[v162](v76[v162 + 1]);
															v70 = v70 + 1;
															v160 = 10;
														end
														if (v160 == 2) then
															v78 = v66[v70];
															v76[v78[2]] = v62[v78[3]];
															v70 = v70 + 1;
															v78 = v66[v70];
															v160 = 3;
														end
														if (v160 == 4) then
															v70 = v70 + 1;
															v78 = v66[v70];
															v76[v78[2]] = v78[3];
															v70 = v70 + 1;
															v160 = 5;
														end
														if (v160 == 6) then
															v78 = v66[v70];
															v76[v78[2]] = v76[v78[3]][v78[4]];
															v70 = v70 + 1;
															v78 = v66[v70];
															v160 = 7;
														end
														if (v160 == 8) then
															v161 = v76[v78[3]];
															v76[v162 + 1] = v161;
															v76[v162] = v161[v78[4]];
															v70 = v70 + 1;
															v160 = 9;
														end
														if (v160 == 7) then
															v76[v78[2]] = v76[v78[3]][v78[4]];
															v70 = v70 + 1;
															v78 = v66[v70];
															v162 = v78[2];
															v160 = 8;
														end
														if (v160 == 3) then
															v162 = v78[2];
															v161 = v76[v78[3]];
															v76[v162 + 1] = v161;
															v76[v162] = v161[v78[4]];
															v160 = 4;
														end
														if (v160 == 1) then
															v78 = v66[v70];
															v162 = v78[2];
															v76[v162](v76[v162 + 1]);
															v70 = v70 + 1;
															v160 = 2;
														end
														if (10 == v160) then
															v78 = v66[v70];
															v76[v78[2]] = v76[v78[3]];
															v70 = v70 + 1;
															v78 = v66[v70];
															v160 = 11;
														end
														if (v160 == 11) then
															v76[v78[2]] = v78[3];
															v70 = v70 + 1;
															v78 = v66[v70];
															v70 = v78[3];
															break;
														end
													end
												elseif (v79 > 25) then
													local v526 = v78[2];
													v76[v526] = v76[v526](v13(v76, v526 + 1, v78[3]));
												else
													local v528;
													v76[v78[2]] = v76[v78[3]][v78[4]];
													v70 = v70 + 1;
													v78 = v66[v70];
													v76[v78[2]] = v76[v78[3]][v78[4]];
													v70 = v70 + 1;
													v78 = v66[v70];
													v76[v78[2]] = v76[v78[3]][v78[4]];
													v70 = v70 + 1;
													v78 = v66[v70];
													v76[v78[2]] = v78[3];
													v70 = v70 + 1;
													v78 = v66[v70];
													v528 = v78[2];
													v76[v528] = v76[v528](v13(v76, v528 + 1, v78[3]));
													v70 = v70 + 1;
													v78 = v66[v70];
													if v76[v78[2]] then
														v70 = v70 + 1;
													else
														v70 = v78[3];
													end
												end
											elseif (v79 <= 27) then
												local v163 = v78[2];
												v76[v163] = v76[v163]();
											elseif (v79 > 28) then
												local v535 = 0;
												local v536;
												local v537;
												local v538;
												local v539;
												while true do
													if (v535 == 10) then
														v70 = v70 + 1;
														v78 = v66[v70];
														v76[v78[2]] = v76[v78[3]][v78[4]];
														v70 = v70 + 1;
														v78 = v66[v70];
														v76[v78[2]] = v76[v78[3]][v78[4]];
														v535 = 11;
													end
													if (v535 == 8) then
														v70 = v70 + 1;
														v78 = v66[v70];
														v76[v78[2]][v78[3]] = v78[4];
														v70 = v70 + 1;
														v78 = v66[v70];
														v76[v78[2]] = v78[3];
														v535 = 9;
													end
													if (v535 == 13) then
														v70 = v70 + 1;
														v78 = v66[v70];
														v76[v78[2]] = {};
														v70 = v70 + 1;
														v78 = v66[v70];
														v76[v78[2]][v78[3]] = v78[4];
														v535 = 14;
													end
													if (v535 == 4) then
														v78 = v66[v70];
														v539 = v78[2];
														v76[v539] = v76[v539](v76[v539 + 1]);
														v70 = v70 + 1;
														v78 = v66[v70];
														v76[v78[2]][v78[3]] = v76[v78[4]];
														v535 = 5;
													end
													if (v535 == 2) then
														v78 = v66[v70];
														v76[v78[2]] = {};
														v70 = v70 + 1;
														v78 = v66[v70];
														v76[v78[2]][v78[3]] = v78[4];
														v70 = v70 + 1;
														v535 = 3;
													end
													if (v535 == 1) then
														v78 = v66[v70];
														v76[v78[2]][v78[3]] = v76[v78[4]];
														v70 = v70 + 1;
														v78 = v66[v70];
														v76[v78[2]] = {};
														v70 = v70 + 1;
														v535 = 2;
													end
													if (v535 == 9) then
														v70 = v70 + 1;
														v78 = v66[v70];
														v76[v78[2]] = v62[v78[3]];
														v70 = v70 + 1;
														v78 = v66[v70];
														v76[v78[2]] = v76[v78[3]][v78[4]];
														v535 = 10;
													end
													if (5 == v535) then
														v70 = v70 + 1;
														v78 = v66[v70];
														v76[v78[2]] = {};
														v70 = v70 + 1;
														v78 = v66[v70];
														v76[v78[2]][v78[3]] = v78[4];
														v535 = 6;
													end
													if (3 == v535) then
														v78 = v66[v70];
														v76[v78[2]] = v62[v78[3]];
														v70 = v70 + 1;
														v78 = v66[v70];
														v76[v78[2]] = v76[v78[3]];
														v70 = v70 + 1;
														v535 = 4;
													end
													if (v535 == 6) then
														v70 = v70 + 1;
														v78 = v66[v70];
														v76[v78[2]][v78[3]] = v78[4];
														v70 = v70 + 1;
														v78 = v66[v70];
														v76[v78[2]][v78[3]] = v76[v78[4]];
														v535 = 7;
													end
													if (v535 == 15) then
														v70 = v70 + 1;
														v78 = v66[v70];
														v539 = v78[2];
														v536 = v76[v539];
														v538 = v78[3];
														for v2776 = 1, v538 do
															v536[v2776] = v76[v539 + v2776];
														end
														break;
													end
													if (v535 == 7) then
														v70 = v70 + 1;
														v78 = v66[v70];
														v76[v78[2]] = {};
														v70 = v70 + 1;
														v78 = v66[v70];
														v76[v78[2]] = {};
														v535 = 8;
													end
													if (v535 == 14) then
														v70 = v70 + 1;
														v78 = v66[v70];
														v76[v78[2]] = v61[v78[3]];
														v70 = v70 + 1;
														v78 = v66[v70];
														v76[v78[2]][v78[3]] = v76[v78[4]];
														v535 = 15;
													end
													if (v535 == 0) then
														v536 = nil;
														v537 = nil;
														v538 = nil;
														v539 = nil;
														v76[v78[2]][v78[3]] = v76[v78[4]];
														v70 = v70 + 1;
														v535 = 1;
													end
													if (12 == v535) then
														v537 = v76[v538];
														for v2779 = v538 + 1, v78[4] do
															v537 = v537 .. v76[v2779];
														end
														v76[v78[2]] = v537;
														v70 = v70 + 1;
														v78 = v66[v70];
														v76[v78[2]][v78[3]] = v76[v78[4]];
														v535 = 13;
													end
													if (v535 == 11) then
														v70 = v70 + 1;
														v78 = v66[v70];
														v76[v78[2]] = v78[3];
														v70 = v70 + 1;
														v78 = v66[v70];
														v538 = v78[3];
														v535 = 12;
													end
												end
											else
												local v540 = 0;
												local v541;
												while true do
													if (0 == v540) then
														v541 = nil;
														v76[v78[2]] = v76[v78[3]][v78[4]];
														v70 = v70 + 1;
														v540 = 1;
													end
													if (v540 == 1) then
														v78 = v66[v70];
														v76[v78[2]] = v76[v78[3]][v78[4]];
														v70 = v70 + 1;
														v540 = 2;
													end
													if (v540 == 3) then
														v78 = v66[v70];
														v76[v78[2]] = v62[v78[3]];
														v70 = v70 + 1;
														v540 = 4;
													end
													if (v540 == 4) then
														v78 = v66[v70];
														v76[v78[2]] = v76[v78[3]][v78[4]];
														v70 = v70 + 1;
														v540 = 5;
													end
													if (v540 == 2) then
														v78 = v66[v70];
														v76[v78[2]] = v76[v78[3]][v78[4]];
														v70 = v70 + 1;
														v540 = 3;
													end
													if (v540 == 6) then
														v78 = v66[v70];
														v76[v78[2]] = v78[3];
														v70 = v70 + 1;
														v540 = 7;
													end
													if (v540 == 7) then
														v78 = v66[v70];
														v76[v78[2]] = v78[3];
														v70 = v70 + 1;
														v540 = 8;
													end
													if (v540 == 8) then
														v78 = v66[v70];
														v541 = v78[2];
														v76[v541] = v76[v541](v13(v76, v541 + 1, v78[3]));
														v540 = 9;
													end
													if (v540 == 5) then
														v78 = v66[v70];
														v76[v78[2]] = v78[3];
														v70 = v70 + 1;
														v540 = 6;
													end
													if (v540 == 9) then
														v70 = v70 + 1;
														v78 = v66[v70];
														v76[v78[2]] = v76[v78[3]] + v76[v78[4]];
														break;
													end
												end
											end
										elseif (v79 <= 32) then
											if (v79 <= 30) then
												local v165 = 0;
												local v166;
												while true do
													if (v165 == 1) then
														v78 = v66[v70];
														v76[v78[2]] = v62[v78[3]];
														v70 = v70 + 1;
														v165 = 2;
													end
													if (4 == v165) then
														v78 = v66[v70];
														v166 = v78[2];
														v76[v166](v76[v166 + 1]);
														v165 = 5;
													end
													if (v165 == 2) then
														v78 = v66[v70];
														v76[v78[2]] = v76[v78[3]][v78[4]];
														v70 = v70 + 1;
														v165 = 3;
													end
													if (v165 == 3) then
														v78 = v66[v70];
														v76[v78[2]] = v78[3];
														v70 = v70 + 1;
														v165 = 4;
													end
													if (v165 == 5) then
														v70 = v70 + 1;
														v78 = v66[v70];
														v76[v78[2]] = v78[3];
														break;
													end
													if (v165 == 0) then
														v166 = nil;
														v76[v78[2]]();
														v70 = v70 + 1;
														v165 = 1;
													end
												end
											elseif (v79 > 31) then
												local v542 = 0;
												local v543;
												while true do
													if (v542 == 1) then
														v78 = v66[v70];
														v543 = v78[2];
														v76[v543](v76[v543 + 1]);
														v542 = 2;
													end
													if (v542 == 5) then
														v70 = v70 + 1;
														v78 = v66[v70];
														v543 = v78[2];
														v542 = 6;
													end
													if (6 == v542) then
														v76[v543](v76[v543 + 1]);
														v70 = v70 + 1;
														v78 = v66[v70];
														v542 = 7;
													end
													if (7 == v542) then
														v76[v78[2]] = v78[3];
														break;
													end
													if (v542 == 3) then
														v70 = v70 + 1;
														v78 = v66[v70];
														v76[v78[2]] = v76[v78[3]][v78[4]];
														v542 = 4;
													end
													if (v542 == 0) then
														v543 = nil;
														v76[v78[2]] = v78[3];
														v70 = v70 + 1;
														v542 = 1;
													end
													if (v542 == 4) then
														v70 = v70 + 1;
														v78 = v66[v70];
														v76[v78[2]] = v78[3];
														v542 = 5;
													end
													if (2 == v542) then
														v70 = v70 + 1;
														v78 = v66[v70];
														v76[v78[2]] = v62[v78[3]];
														v542 = 3;
													end
												end
											else
												local v544;
												v76[v78[2]] = v78[3];
												v70 = v70 + 1;
												v78 = v66[v70];
												v76[v78[2]] = v76[v78[3]][v78[4]];
												v70 = v70 + 1;
												v78 = v66[v70];
												v544 = v78[2];
												v76[v544](v13(v76, v544 + 1, v78[3]));
												v70 = v70 + 1;
												v78 = v66[v70];
												v76[v78[2]] = v76[v78[3]][v78[4]];
												v70 = v70 + 1;
												v78 = v66[v70];
												v76[v78[2]] = v62[v78[3]];
												v70 = v70 + 1;
												v78 = v66[v70];
												v76[v78[2]] = v78[3];
												v70 = v70 + 1;
												v78 = v66[v70];
												v544 = v78[2];
												v76[v544] = v76[v544](v76[v544 + 1]);
												v70 = v70 + 1;
												v78 = v66[v70];
												if (v76[v78[2]] == v76[v78[4]]) then
													v70 = v70 + 1;
												else
													v70 = v78[3];
												end
											end
										elseif (v79 <= 33) then
											v76[v78[2]] = v76[v78[3]][v78[4]];
											v70 = v70 + 1;
											v78 = v66[v70];
											v76[v78[2]] = v76[v78[3]][v78[4]];
											v70 = v70 + 1;
											v78 = v66[v70];
											v76[v78[2]] = v76[v78[3]][v78[4]];
											v70 = v70 + 1;
											v78 = v66[v70];
											v76[v78[2]] = v76[v78[3]][v78[4]];
											v70 = v70 + 1;
											v78 = v66[v70];
											v76[v78[2]] = v76[v78[3]][v78[4]];
											v70 = v70 + 1;
											v78 = v66[v70];
											v76[v78[2]] = v62[v78[3]];
											v70 = v70 + 1;
											v78 = v66[v70];
											v76[v78[2]] = v76[v78[3]][v78[4]];
											v70 = v70 + 1;
											v78 = v66[v70];
											v76[v78[2]] = v76[v78[3]];
											v70 = v70 + 1;
											v78 = v66[v70];
											v76[v78[2]] = v78[3];
											v70 = v70 + 1;
											v78 = v66[v70];
											v76[v78[2]] = v78[3];
										elseif (v79 == 34) then
											local v552;
											local v553;
											v553 = v78[2];
											v552 = v76[v78[3]];
											v76[v553 + 1] = v552;
											v76[v553] = v552[v78[4]];
											v70 = v70 + 1;
											v78 = v66[v70];
											v76[v78[2]] = v78[3];
											v70 = v70 + 1;
											v78 = v66[v70];
											v553 = v78[2];
											v76[v553] = v76[v553](v13(v76, v553 + 1, v78[3]));
											v70 = v70 + 1;
											v78 = v66[v70];
											v76[v78[2]] = v76[v78[3]][v78[4]];
											v70 = v70 + 1;
											v78 = v66[v70];
											v553 = v78[2];
											v552 = v76[v78[3]];
											v76[v553 + 1] = v552;
											v76[v553] = v552[v78[4]];
										else
											local v563;
											local v564;
											v76[v78[2]] = v62[v78[3]];
											v70 = v70 + 1;
											v78 = v66[v70];
											v564 = v78[2];
											v563 = v76[v78[3]];
											v76[v564 + 1] = v563;
											v76[v564] = v563[v78[4]];
											v70 = v70 + 1;
											v78 = v66[v70];
											v76[v78[2]] = v78[3];
											v70 = v70 + 1;
											v78 = v66[v70];
											v564 = v78[2];
											v76[v564] = v76[v564](v13(v76, v564 + 1, v78[3]));
											v70 = v70 + 1;
											v78 = v66[v70];
											v76[v78[2]] = v76[v78[3]][v78[4]];
											v70 = v70 + 1;
											v78 = v66[v70];
											v564 = v78[2];
											v563 = v76[v78[3]];
											v76[v564 + 1] = v563;
											v76[v564] = v563[v78[4]];
										end
									elseif (v79 <= 41) then
										if (v79 <= 38) then
											if (v79 <= 36) then
												local v173;
												local v174;
												v76[v78[2]] = v76[v78[3]][v78[4]];
												v70 = v70 + 1;
												v78 = v66[v70];
												v76[v78[2]] = v76[v78[3]][v78[4]];
												v70 = v70 + 1;
												v78 = v66[v70];
												v174 = v78[2];
												v173 = v76[v78[3]];
												v76[v174 + 1] = v173;
												v76[v174] = v173[v78[4]];
												v70 = v70 + 1;
												v78 = v66[v70];
												v76[v78[2]] = v78[3];
												v70 = v70 + 1;
												v78 = v66[v70];
												v76[v78[2]] = {};
												v70 = v70 + 1;
												v78 = v66[v70];
												v76[v78[2]][v78[3]] = v78[4];
												v70 = v70 + 1;
												v78 = v66[v70];
												v76[v78[2]][v78[3]] = v78[4];
												v70 = v70 + 1;
												v78 = v66[v70];
												v174 = v78[2];
												v76[v174](v13(v76, v174 + 1, v78[3]));
												v70 = v70 + 1;
												v78 = v66[v70];
												v76[v78[2]] = v61[v78[3]];
												v70 = v70 + 1;
												v78 = v66[v70];
												v76[v78[2]] = v76[v78[3]][v78[4]];
												v70 = v70 + 1;
												v78 = v66[v70];
												v76[v78[2]] = v76[v78[3]][v78[4]];
												v70 = v70 + 1;
												v78 = v66[v70];
												v174 = v78[2];
												v173 = v76[v78[3]];
												v76[v174 + 1] = v173;
												v76[v174] = v173[v78[4]];
												v70 = v70 + 1;
												v78 = v66[v70];
												v76[v78[2]] = v78[3];
												v70 = v70 + 1;
												v78 = v66[v70];
												v76[v78[2]] = {};
												v70 = v70 + 1;
												v78 = v66[v70];
												v76[v78[2]][v78[3]] = v78[4];
												v70 = v70 + 1;
												v78 = v66[v70];
												v76[v78[2]][v78[3]] = v78[4];
												v70 = v70 + 1;
												v78 = v66[v70];
												v174 = v78[2];
												v76[v174](v13(v76, v174 + 1, v78[3]));
												v70 = v70 + 1;
												v78 = v66[v70];
												v76[v78[2]] = v78[3];
												v70 = v70 + 1;
												v78 = v66[v70];
												v70 = v78[3];
											elseif (v79 == 37) then
												local v575 = 0;
												local v576;
												local v577;
												while true do
													if (v575 == 7) then
														v76[v78[2]] = v78[3];
														break;
													end
													if (v575 == 2) then
														v576 = v76[v78[3]];
														v76[v577 + 1] = v576;
														v76[v577] = v576[v78[4]];
														v575 = 3;
													end
													if (0 == v575) then
														v576 = nil;
														v577 = nil;
														v76[v78[2]] = v62[v78[3]];
														v575 = 1;
													end
													if (v575 == 4) then
														v70 = v70 + 1;
														v78 = v66[v70];
														v577 = v78[2];
														v575 = 5;
													end
													if (1 == v575) then
														v70 = v70 + 1;
														v78 = v66[v70];
														v577 = v78[2];
														v575 = 2;
													end
													if (v575 == 5) then
														v76[v577] = v76[v577](v13(v76, v577 + 1, v78[3]));
														v70 = v70 + 1;
														v78 = v66[v70];
														v575 = 6;
													end
													if (v575 == 3) then
														v70 = v70 + 1;
														v78 = v66[v70];
														v76[v78[2]] = v78[3];
														v575 = 4;
													end
													if (v575 == 6) then
														v76[v78[2]] = v76[v78[3]];
														v70 = v70 + 1;
														v78 = v66[v70];
														v575 = 7;
													end
												end
											else
												local v578 = 0;
												local v579;
												local v580;
												while true do
													if (v578 == 5) then
														v580 = v78[2];
														v76[v580](v76[v580 + 1]);
														v70 = v70 + 1;
														v78 = v66[v70];
														v578 = 6;
													end
													if (v578 == 1) then
														v78 = v66[v70];
														v76[v78[2]]();
														v70 = v70 + 1;
														v78 = v66[v70];
														v578 = 2;
													end
													if (v578 == 4) then
														v76[v580 + 1] = v579;
														v76[v580] = v579[v78[4]];
														v70 = v70 + 1;
														v78 = v66[v70];
														v578 = 5;
													end
													if (3 == v578) then
														v70 = v70 + 1;
														v78 = v66[v70];
														v580 = v78[2];
														v579 = v76[v78[3]];
														v578 = 4;
													end
													if (v578 == 6) then
														v70 = v78[3];
														break;
													end
													if (v578 == 2) then
														v76[v78[2]] = v76[v78[3]][v78[4]];
														v70 = v70 + 1;
														v78 = v66[v70];
														v76[v78[2]] = v76[v78[3]][v78[4]];
														v578 = 3;
													end
													if (v578 == 0) then
														v579 = nil;
														v580 = nil;
														v76[v78[2]] = v76[v78[3]][v78[4]];
														v70 = v70 + 1;
														v578 = 1;
													end
												end
											end
										elseif (v79 <= 39) then
											v62[v78[3]] = v76[v78[2]];
										elseif (v79 > 40) then
											local v581 = 0;
											local v582;
											local v583;
											local v584;
											local v585;
											local v586;
											while true do
												if (1 == v581) then
													v585 = nil;
													v586 = nil;
													v76[v78[2]] = v76[v78[3]][v78[4]];
													v581 = 2;
												end
												if (7 == v581) then
													v586 = v78[2];
													v582 = {v76[v586](v13(v76, v586 + 1, v71))};
													v583 = 0;
													v581 = 8;
												end
												if (v581 == 4) then
													v70 = v70 + 1;
													v78 = v66[v70];
													v586 = v78[2];
													v581 = 5;
												end
												if (6 == v581) then
													for v2780 = v586, v71 do
														local v2781 = 0;
														while true do
															if (v2781 == 0) then
																v583 = v583 + 1;
																v76[v2780] = v582[v583];
																break;
															end
														end
													end
													v70 = v70 + 1;
													v78 = v66[v70];
													v581 = 7;
												end
												if (v581 == 0) then
													v582 = nil;
													v583 = nil;
													v582, v584 = nil;
													v581 = 1;
												end
												if (v581 == 3) then
													v585 = v76[v78[3]];
													v76[v586 + 1] = v585;
													v76[v586] = v585[v78[4]];
													v581 = 4;
												end
												if (v581 == 5) then
													v582, v584 = v69(v76[v586](v76[v586 + 1]));
													v71 = (v584 + v586) - 1;
													v583 = 0;
													v581 = 6;
												end
												if (2 == v581) then
													v70 = v70 + 1;
													v78 = v66[v70];
													v586 = v78[2];
													v581 = 3;
												end
												if (v581 == 8) then
													for v2782 = v586, v78[4] do
														v583 = v583 + 1;
														v76[v2782] = v582[v583];
													end
													v70 = v70 + 1;
													v78 = v66[v70];
													v581 = 9;
												end
												if (v581 == 9) then
													v70 = v78[3];
													break;
												end
											end
										else
											local v587 = 0;
											local v588;
											local v589;
											local v590;
											local v591;
											local v592;
											while true do
												if (2 == v587) then
													v78 = v66[v70];
													v76[v78[2]] = v76[v78[3]][v78[4]];
													v70 = v70 + 1;
													v78 = v66[v70];
													v592 = v78[2];
													v587 = 3;
												end
												if (v587 == 6) then
													for v2785 = v592, v78[4] do
														v589 = v589 + 1;
														v76[v2785] = v588[v589];
													end
													v70 = v70 + 1;
													v78 = v66[v70];
													v70 = v78[3];
													break;
												end
												if (0 == v587) then
													v588 = nil;
													v589 = nil;
													v588, v590 = nil;
													v591 = nil;
													v592 = nil;
													v587 = 1;
												end
												if (v587 == 3) then
													v591 = v76[v78[3]];
													v76[v592 + 1] = v591;
													v76[v592] = v591[v78[4]];
													v70 = v70 + 1;
													v78 = v66[v70];
													v587 = 4;
												end
												if (v587 == 5) then
													v70 = v70 + 1;
													v78 = v66[v70];
													v592 = v78[2];
													v588 = {v76[v592](v13(v76, v592 + 1, v71))};
													v589 = 0;
													v587 = 6;
												end
												if (v587 == 1) then
													v76[v78[2]]();
													v70 = v70 + 1;
													v78 = v66[v70];
													v76[v78[2]] = v62[v78[3]];
													v70 = v70 + 1;
													v587 = 2;
												end
												if (v587 == 4) then
													v592 = v78[2];
													v588, v590 = v69(v76[v592](v76[v592 + 1]));
													v71 = (v590 + v592) - 1;
													v589 = 0;
													for v2788 = v592, v71 do
														local v2789 = 0;
														while true do
															if (v2789 == 0) then
																v589 = v589 + 1;
																v76[v2788] = v588[v589];
																break;
															end
														end
													end
													v587 = 5;
												end
											end
										end
									elseif (v79 <= 44) then
										if (v79 <= 42) then
											local v189 = 0;
											local v190;
											local v191;
											while true do
												if (v189 == 6) then
													v76[v191] = v190[v78[4]];
													v70 = v70 + 1;
													v78 = v66[v70];
													v189 = 7;
												end
												if (v189 == 7) then
													v76[v78[2]] = v78[3];
													v70 = v70 + 1;
													v78 = v66[v70];
													v189 = 8;
												end
												if (2 == v189) then
													v70 = v70 + 1;
													v78 = v66[v70];
													v76[v78[2]] = v78[3];
													v189 = 3;
												end
												if (v189 == 0) then
													v190 = nil;
													v191 = nil;
													v191 = v78[2];
													v189 = 1;
												end
												if (v189 == 4) then
													v76[v191] = v76[v191](v13(v76, v191 + 1, v78[3]));
													v70 = v70 + 1;
													v78 = v66[v70];
													v189 = 5;
												end
												if (v189 == 1) then
													v190 = v76[v78[3]];
													v76[v191 + 1] = v190;
													v76[v191] = v190[v78[4]];
													v189 = 2;
												end
												if (5 == v189) then
													v191 = v78[2];
													v190 = v76[v78[3]];
													v76[v191 + 1] = v190;
													v189 = 6;
												end
												if (v189 == 9) then
													v78 = v66[v70];
													v70 = v78[3];
													break;
												end
												if (v189 == 8) then
													v191 = v78[2];
													v76[v191](v13(v76, v191 + 1, v78[3]));
													v70 = v70 + 1;
													v189 = 9;
												end
												if (v189 == 3) then
													v70 = v70 + 1;
													v78 = v66[v70];
													v191 = v78[2];
													v189 = 4;
												end
											end
										elseif (v79 == 43) then
											local v593;
											local v594;
											v76[v78[2]] = v61[v78[3]];
											v70 = v70 + 1;
											v78 = v66[v70];
											v76[v78[2]] = v76[v78[3]][v78[4]];
											v70 = v70 + 1;
											v78 = v66[v70];
											v594 = v78[2];
											v593 = v76[v78[3]];
											v76[v594 + 1] = v593;
											v76[v594] = v593[v78[4]];
											v70 = v70 + 1;
											v78 = v66[v70];
											v76[v78[2]] = v78[3];
											v70 = v70 + 1;
											v78 = v66[v70];
											v594 = v78[2];
											v76[v594] = v76[v594](v13(v76, v594 + 1, v78[3]));
											v70 = v70 + 1;
											v78 = v66[v70];
											v76[v78[2]] = v76[v78[3]][v78[4]];
											v70 = v70 + 1;
											v78 = v66[v70];
											v76[v78[2]] = v76[v78[3]][v78[4]];
											v70 = v70 + 1;
											v78 = v66[v70];
											v76[v78[2]] = v76[v78[3]][v78[4]];
											v70 = v70 + 1;
											v78 = v66[v70];
											v76[v78[2]] = v76[v78[3]][v78[4]];
											v70 = v70 + 1;
											v78 = v66[v70];
											v76[v78[2]] = v76[v78[3]][v78[4]];
											v70 = v70 + 1;
											v78 = v66[v70];
											v594 = v78[2];
											v76[v594](v76[v594 + 1]);
											v70 = v70 + 1;
											v78 = v66[v70];
											v70 = v78[3];
										else
											local v605 = 0;
											while true do
												if (v605 == 2) then
													v76[v78[2]][v78[3]] = v76[v78[4]];
													v70 = v70 + 1;
													v78 = v66[v70];
													v605 = 3;
												end
												if (v605 == 5) then
													v70 = v78[3];
													break;
												end
												if (v605 == 3) then
													v76[v78[2]][v78[3]] = v78[4];
													v70 = v70 + 1;
													v78 = v66[v70];
													v605 = 4;
												end
												if (0 == v605) then
													v76[v78[2]] = v76[v78[3]][v78[4]];
													v70 = v70 + 1;
													v78 = v66[v70];
													v605 = 1;
												end
												if (v605 == 4) then
													v76[v78[2]] = v78[3];
													v70 = v70 + 1;
													v78 = v66[v70];
													v605 = 5;
												end
												if (v605 == 1) then
													v76[v78[2]] = v76[v78[3]][v78[4]];
													v70 = v70 + 1;
													v78 = v66[v70];
													v605 = 2;
												end
											end
										end
									elseif (v79 <= 45) then
										if (v76[v78[2]] ~= v76[v78[4]]) then
											v70 = v70 + 1;
										else
											v70 = v78[3];
										end
									elseif (v79 == 46) then
										local v607 = 0;
										local v608;
										local v609;
										while true do
											if (v607 == 1) then
												for v2790 = v608 + 1, v78[4] do
													v609 = v609 .. v76[v2790];
												end
												v76[v78[2]] = v609;
												break;
											end
											if (v607 == 0) then
												v608 = v78[3];
												v609 = v76[v608];
												v607 = 1;
											end
										end
									else
										v76[v78[2]] = v76[v78[3]][v78[4]];
										v70 = v70 + 1;
										v78 = v66[v70];
										v76[v78[2]] = v76[v78[3]][v78[4]];
										v70 = v70 + 1;
										v78 = v66[v70];
										v76[v78[2]] = v76[v78[3]][v78[4]];
										v70 = v70 + 1;
										v78 = v66[v70];
										v76[v78[2]] = v76[v78[3]][v78[4]];
										v70 = v70 + 1;
										v78 = v66[v70];
										v76[v78[2]] = v76[v78[3]][v78[4]];
										v70 = v70 + 1;
										v78 = v66[v70];
										v76[v78[2]] = v76[v78[3]][v78[4]];
										v70 = v70 + 1;
										v78 = v66[v70];
										v76[v78[2]] = v62[v78[3]];
										v70 = v70 + 1;
										v78 = v66[v70];
										v76[v78[2]] = v76[v78[3]][v78[4]];
										v70 = v70 + 1;
										v78 = v66[v70];
										v76[v78[2]] = v78[3];
										v70 = v70 + 1;
										v78 = v66[v70];
										v76[v78[2]] = v78[3];
									end
								elseif (v79 <= 71) then
									if (v79 <= 59) then
										if (v79 <= 53) then
											if (v79 <= 50) then
												if (v79 <= 48) then
													v76[v78[2]] = v61[v78[3]];
												elseif (v79 == 49) then
													local v615;
													v76[v78[2]] = v76[v78[3]][v78[4]];
													v70 = v70 + 1;
													v78 = v66[v70];
													v76[v78[2]] = v76[v78[3]][v78[4]];
													v70 = v70 + 1;
													v78 = v66[v70];
													v76[v78[2]] = v78[3];
													v70 = v70 + 1;
													v78 = v66[v70];
													v615 = v78[2];
													v76[v615] = v76[v615](v13(v76, v615 + 1, v78[3]));
													v70 = v70 + 1;
													v78 = v66[v70];
													if v76[v78[2]] then
														v70 = v70 + 1;
													else
														v70 = v78[3];
													end
												else
													local v622;
													local v623;
													v623 = v78[2];
													v622 = v76[v78[3]];
													v76[v623 + 1] = v622;
													v76[v623] = v622[v78[4]];
													v70 = v70 + 1;
													v78 = v66[v70];
													v76[v78[2]] = v78[3];
													v70 = v70 + 1;
													v78 = v66[v70];
													v623 = v78[2];
													v76[v623] = v76[v623](v13(v76, v623 + 1, v78[3]));
													v70 = v70 + 1;
													v78 = v66[v70];
													v623 = v78[2];
													v622 = v76[v78[3]];
													v76[v623 + 1] = v622;
													v76[v623] = v622[v78[4]];
													v70 = v70 + 1;
													v78 = v66[v70];
													v76[v78[2]] = v76[v78[3]];
													v70 = v70 + 1;
													v78 = v66[v70];
													v623 = v78[2];
													v76[v623] = v76[v623](v13(v76, v623 + 1, v78[3]));
													v70 = v70 + 1;
													v78 = v66[v70];
													v76[v78[2]] = v76[v78[3]];
													v70 = v70 + 1;
													v78 = v66[v70];
													v76[v78[2]] = {};
													v70 = v70 + 1;
													v78 = v66[v70];
													v76[v78[2]][v78[3]] = v78[4];
													v70 = v70 + 1;
													v78 = v66[v70];
													v76[v78[2]] = v76[v78[3]];
													v70 = v70 + 1;
													v78 = v66[v70];
													v76[v78[2]] = v78[3];
												end
											elseif (v79 <= 51) then
												local v194 = 0;
												local v195;
												local v196;
												local v197;
												while true do
													if (v194 == 1) then
														v70 = v70 + 1;
														v78 = v66[v70];
														v76[v78[2]] = v76[v78[3]][v78[4]];
														v70 = v70 + 1;
														v194 = 2;
													end
													if (v194 == 5) then
														v70 = v70 + 1;
														v78 = v66[v70];
														v70 = v78[3];
														break;
													end
													if (v194 == 0) then
														v195 = nil;
														v196 = nil;
														v197 = nil;
														v76[v78[2]] = v78[3];
														v194 = 1;
													end
													if (v194 == 2) then
														v78 = v66[v70];
														v76[v78[2]] = v76[v78[3]][v78[4]];
														v70 = v70 + 1;
														v78 = v66[v70];
														v194 = 3;
													end
													if (v194 == 3) then
														v197 = v78[3];
														v196 = v76[v197];
														for v1743 = v197 + 1, v78[4] do
															v196 = v196 .. v76[v1743];
														end
														v76[v78[2]] = v196;
														v194 = 4;
													end
													if (v194 == 4) then
														v70 = v70 + 1;
														v78 = v66[v70];
														v195 = v78[2];
														v76[v195](v76[v195 + 1]);
														v194 = 5;
													end
												end
											elseif (v79 > 52) then
												local v634;
												local v635;
												local v636;
												v76[v78[2]] = v62[v78[3]];
												v70 = v70 + 1;
												v78 = v66[v70];
												v636 = v78[2];
												v76[v636] = v76[v636]();
												v70 = v70 + 1;
												v78 = v66[v70];
												v76[v78[2]] = v76[v78[3]][v78[4]];
												v70 = v70 + 1;
												v78 = v66[v70];
												v76[v78[2]] = v78[3];
												v70 = v70 + 1;
												v78 = v66[v70];
												v635 = v78[3];
												v634 = v76[v635];
												for v1383 = v635 + 1, v78[4] do
													v634 = v634 .. v76[v1383];
												end
												v76[v78[2]] = v634;
											else
												local v645 = 0;
												local v646;
												while true do
													if (v645 == 2) then
														v70 = v70 + 1;
														v78 = v66[v70];
														v76[v78[2]] = v62[v78[3]];
														v70 = v70 + 1;
														v645 = 3;
													end
													if (v645 == 3) then
														v78 = v66[v70];
														v646 = v78[2];
														v76[v646](v13(v76, v646 + 1, v78[3]));
														v70 = v70 + 1;
														v645 = 4;
													end
													if (v645 == 4) then
														v78 = v66[v70];
														v70 = v78[3];
														break;
													end
													if (v645 == 1) then
														v76[v78[2]] = v78[3];
														v70 = v70 + 1;
														v78 = v66[v70];
														v76[v78[2]] = v78[3] ~= 0;
														v645 = 2;
													end
													if (v645 == 0) then
														v646 = nil;
														v76[v78[2]] = v78[3] ~= 0;
														v70 = v70 + 1;
														v78 = v66[v70];
														v645 = 1;
													end
												end
											end
										elseif (v79 <= 56) then
											if (v79 <= 54) then
												local v198 = 0;
												local v199;
												while true do
													if (3 == v198) then
														v78 = v66[v70];
														v76[v78[2]] = v62[v78[3]];
														v70 = v70 + 1;
														v198 = 4;
													end
													if (2 == v198) then
														v78 = v66[v70];
														v76[v78[2]] = v78[3] ~= 0;
														v70 = v70 + 1;
														v198 = 3;
													end
													if (v198 == 1) then
														v78 = v66[v70];
														v76[v78[2]] = v78[3];
														v70 = v70 + 1;
														v198 = 2;
													end
													if (v198 == 0) then
														v199 = nil;
														v76[v78[2]] = v78[3] ~= 0;
														v70 = v70 + 1;
														v198 = 1;
													end
													if (v198 == 4) then
														v78 = v66[v70];
														v199 = v78[2];
														v76[v199](v13(v76, v199 + 1, v78[3]));
														break;
													end
												end
											elseif (v79 == 55) then
												v76[v78[2]] = v76[v78[3]][v78[4]];
												v70 = v70 + 1;
												v78 = v66[v70];
												v76[v78[2]]();
												v70 = v70 + 1;
												v78 = v66[v70];
												v76[v78[2]] = v62[v78[3]];
												v70 = v70 + 1;
												v78 = v66[v70];
												v76[v78[2]] = v76[v78[3]][v78[4]];
												v70 = v70 + 1;
												v78 = v66[v70];
												v76[v78[2]] = v76[v78[3]][v78[4]];
												v70 = v70 + 1;
												v78 = v66[v70];
												v76[v78[2]] = v76[v78[3]][v78[4]];
												v70 = v70 + 1;
												v78 = v66[v70];
												if v76[v78[2]] then
													v70 = v70 + 1;
												else
													v70 = v78[3];
												end
											else
												local v651;
												local v652;
												local v653;
												v76[v78[2]] = v78[3];
												v70 = v70 + 1;
												v78 = v66[v70];
												v76[v78[2]] = v76[v78[3]];
												v70 = v70 + 1;
												v78 = v66[v70];
												v653 = v78[3];
												v652 = v76[v653];
												for v1395 = v653 + 1, v78[4] do
													v652 = v652 .. v76[v1395];
												end
												v76[v78[2]] = v652;
												v70 = v70 + 1;
												v78 = v66[v70];
												v651 = v78[2];
												v76[v651](v76[v651 + 1]);
												v70 = v70 + 1;
												v78 = v66[v70];
												v70 = v78[3];
											end
										elseif (v79 <= 57) then
											for v432 = v78[2], v78[3] do
												v76[v432] = nil;
											end
										elseif (v79 > 58) then
											local v660 = 0;
											local v661;
											while true do
												if (2 == v660) then
													v70 = v70 + 1;
													v78 = v66[v70];
													v76[v78[2]] = v76[v78[3]];
													v70 = v70 + 1;
													v660 = 3;
												end
												if (v660 == 0) then
													v661 = nil;
													v76[v78[2]] = v76[v78[3]][v78[4]];
													v70 = v70 + 1;
													v78 = v66[v70];
													v660 = 1;
												end
												if (v660 == 3) then
													v78 = v66[v70];
													v661 = v78[2];
													v76[v661] = v76[v661](v13(v76, v661 + 1, v78[3]));
													v70 = v70 + 1;
													v660 = 4;
												end
												if (v660 == 4) then
													v78 = v66[v70];
													if v76[v78[2]] then
														v70 = v70 + 1;
													else
														v70 = v78[3];
													end
													break;
												end
												if (v660 == 1) then
													v76[v78[2]] = v76[v78[3]][v78[4]];
													v70 = v70 + 1;
													v78 = v66[v70];
													v76[v78[2]] = v76[v78[3]][v78[4]];
													v660 = 2;
												end
											end
										else
											local v662;
											v76[v78[2]] = v76[v78[3]][v78[4]];
											v70 = v70 + 1;
											v78 = v66[v70];
											v76[v78[2]] = v78[3];
											v70 = v70 + 1;
											v78 = v66[v70];
											v662 = v78[2];
											v76[v662](v76[v662 + 1]);
											v70 = v70 + 1;
											v78 = v66[v70];
											v76[v78[2]] = v76[v78[3]][v78[4]];
											v70 = v70 + 1;
											v78 = v66[v70];
											v76[v78[2]] = v76[v78[3]][v78[4]];
											v70 = v70 + 1;
											v78 = v66[v70];
											v76[v78[2]] = v62[v78[3]];
											v70 = v70 + 1;
											v78 = v66[v70];
											v76[v78[2]] = v76[v78[3]][v78[4]];
											v70 = v70 + 1;
											v78 = v66[v70];
											v76[v78[2]] = v78[3];
											v70 = v70 + 1;
											v78 = v66[v70];
											v76[v78[2]] = v78[3];
											v70 = v70 + 1;
											v78 = v66[v70];
											v76[v78[2]] = v78[3];
										end
									elseif (v79 <= 65) then
										if (v79 <= 62) then
											if (v79 <= 60) then
												local v200 = 0;
												local v201;
												local v202;
												local v203;
												while true do
													if (v200 == 0) then
														v201 = nil;
														v202 = nil;
														v203 = nil;
														v76[v78[2]] = v78[3];
														v200 = 1;
													end
													if (v200 == 4) then
														v70 = v70 + 1;
														v78 = v66[v70];
														v201 = v78[2];
														v76[v201](v76[v201 + 1]);
														v200 = 5;
													end
													if (v200 == 1) then
														v70 = v70 + 1;
														v78 = v66[v70];
														v76[v78[2]] = v76[v78[3]][v78[4]];
														v70 = v70 + 1;
														v200 = 2;
													end
													if (v200 == 5) then
														v70 = v70 + 1;
														v78 = v66[v70];
														v70 = v78[3];
														break;
													end
													if (v200 == 2) then
														v78 = v66[v70];
														v76[v78[2]] = v76[v78[3]][v78[4]];
														v70 = v70 + 1;
														v78 = v66[v70];
														v200 = 3;
													end
													if (v200 == 3) then
														v203 = v78[3];
														v202 = v76[v203];
														for v1745 = v203 + 1, v78[4] do
															v202 = v202 .. v76[v1745];
														end
														v76[v78[2]] = v202;
														v200 = 4;
													end
												end
											elseif (v79 > 61) then
												v61[v78[3]] = v76[v78[2]];
											elseif v76[v78[2]] then
												v70 = v70 + 1;
											else
												v70 = v78[3];
											end
										elseif (v79 <= 63) then
											local v204 = 0;
											local v205;
											while true do
												if (v204 == 3) then
													v78 = v66[v70];
													v76[v78[2]] = v76[v78[3]][v78[4]];
													v70 = v70 + 1;
													v204 = 4;
												end
												if (v204 == 4) then
													v78 = v66[v70];
													v76[v78[2]] = v76[v78[3]][v78[4]];
													v70 = v70 + 1;
													v204 = 5;
												end
												if (v204 == 6) then
													v78 = v66[v70];
													v76[v78[2]] = v76[v78[3]][v78[4]];
													v70 = v70 + 1;
													v204 = 7;
												end
												if (1 == v204) then
													v78 = v66[v70];
													v76[v78[2]] = v76[v78[3]][v78[4]];
													v70 = v70 + 1;
													v204 = 2;
												end
												if (v204 == 8) then
													v78 = v66[v70];
													v205 = v78[2];
													v76[v205](v76[v205 + 1]);
													v204 = 9;
												end
												if (v204 == 5) then
													v78 = v66[v70];
													v76[v78[2]] = v76[v78[3]][v78[4]];
													v70 = v70 + 1;
													v204 = 6;
												end
												if (9 == v204) then
													v70 = v70 + 1;
													v78 = v66[v70];
													v70 = v78[3];
													break;
												end
												if (v204 == 7) then
													v78 = v66[v70];
													v76[v78[2]] = v76[v78[3]][v78[4]];
													v70 = v70 + 1;
													v204 = 8;
												end
												if (v204 == 0) then
													v205 = nil;
													v76[v78[2]] = v61[v78[3]];
													v70 = v70 + 1;
													v204 = 1;
												end
												if (v204 == 2) then
													v78 = v66[v70];
													v76[v78[2]] = v76[v78[3]][v78[4]];
													v70 = v70 + 1;
													v204 = 3;
												end
											end
										elseif (v79 == 64) then
											local v671 = v78[2];
											v76[v671](v13(v76, v671 + 1, v71));
										else
											local v672 = 0;
											while true do
												if (v672 == 2) then
													v78 = v66[v70];
													v76[v78[2]] = v76[v78[3]][v78[4]];
													v70 = v70 + 1;
													v78 = v66[v70];
													v672 = 3;
												end
												if (3 == v672) then
													v76[v78[2]] = v76[v78[3]][v78[4]];
													v70 = v70 + 1;
													v78 = v66[v70];
													v76[v78[2]] = v62[v78[3]];
													v672 = 4;
												end
												if (v672 == 1) then
													v70 = v70 + 1;
													v78 = v66[v70];
													v76[v78[2]] = v76[v78[3]][v78[4]];
													v70 = v70 + 1;
													v672 = 2;
												end
												if (v672 == 4) then
													v70 = v70 + 1;
													v78 = v66[v70];
													v76[v78[2]] = v76[v78[3]][v78[4]];
													v70 = v70 + 1;
													v672 = 5;
												end
												if (v672 == 5) then
													v78 = v66[v70];
													v76[v78[2]] = v78[3];
													v70 = v70 + 1;
													v78 = v66[v70];
													v672 = 6;
												end
												if (v672 == 6) then
													v76[v78[2]] = v78[3];
													v70 = v70 + 1;
													v78 = v66[v70];
													v76[v78[2]] = v78[3];
													break;
												end
												if (v672 == 0) then
													v76[v78[2]] = v76[v78[3]][v78[4]];
													v70 = v70 + 1;
													v78 = v66[v70];
													v76[v78[2]] = v76[v78[3]][v78[4]];
													v672 = 1;
												end
											end
										end
									elseif (v79 <= 68) then
										if (v79 <= 66) then
											local v206 = 0;
											local v207;
											while true do
												if (0 == v206) then
													v207 = nil;
													v76[v78[2]] = v76[v78[3]][v78[4]];
													v70 = v70 + 1;
													v78 = v66[v70];
													v206 = 1;
												end
												if (6 == v206) then
													v70 = v70 + 1;
													v78 = v66[v70];
													v76[v78[2]] = v62[v78[3]];
													v70 = v70 + 1;
													v206 = 7;
												end
												if (v206 == 2) then
													v70 = v70 + 1;
													v78 = v66[v70];
													v76[v78[2]] = v78[3];
													v70 = v70 + 1;
													v206 = 3;
												end
												if (v206 == 7) then
													v78 = v66[v70];
													v76[v78[2]] = v76[v78[3]][v78[4]];
													break;
												end
												if (v206 == 4) then
													v76[v78[2]] = v78[3];
													v70 = v70 + 1;
													v78 = v66[v70];
													v207 = v78[2];
													v206 = 5;
												end
												if (v206 == 3) then
													v78 = v66[v70];
													v76[v78[2]] = v78[3];
													v70 = v70 + 1;
													v78 = v66[v70];
													v206 = 4;
												end
												if (v206 == 1) then
													v76[v78[2]] = v62[v78[3]];
													v70 = v70 + 1;
													v78 = v66[v70];
													v76[v78[2]] = v76[v78[3]][v78[4]];
													v206 = 2;
												end
												if (v206 == 5) then
													v76[v207] = v76[v207](v13(v76, v207 + 1, v78[3]));
													v70 = v70 + 1;
													v78 = v66[v70];
													v76[v78[2]][v78[3]] = v76[v78[4]];
													v206 = 6;
												end
											end
										elseif (v79 > 67) then
											if (v76[v78[2]] <= v78[4]) then
												v70 = v70 + 1;
											else
												v70 = v78[3];
											end
										else
											local v673 = v78[2];
											local v674 = v76[v673];
											for v1465 = v673 + 1, v78[3] do
												v7(v674, v76[v1465]);
											end
										end
									elseif (v79 <= 69) then
										v76[v78[2]] = {};
									elseif (v79 > 70) then
										local v675 = 0;
										local v676;
										local v677;
										while true do
											if (v675 == 1) then
												v78 = v66[v70];
												v76[v78[2]] = v78[3];
												v70 = v70 + 1;
												v78 = v66[v70];
												v675 = 2;
											end
											if (v675 == 7) then
												v76[v78[2]] = v76[v78[3]];
												v70 = v70 + 1;
												v78 = v66[v70];
												v76[v78[2]] = v78[3];
												v675 = 8;
											end
											if (v675 == 3) then
												v76[v78[2]] = v62[v78[3]];
												v70 = v70 + 1;
												v78 = v66[v70];
												v677 = v78[2];
												v675 = 4;
											end
											if (v675 == 6) then
												v677 = v78[2];
												v76[v677] = v76[v677](v13(v76, v677 + 1, v78[3]));
												v70 = v70 + 1;
												v78 = v66[v70];
												v675 = 7;
											end
											if (v675 == 5) then
												v78 = v66[v70];
												v76[v78[2]] = v78[3];
												v70 = v70 + 1;
												v78 = v66[v70];
												v675 = 6;
											end
											if (v675 == 0) then
												v676 = nil;
												v677 = nil;
												v76[v78[2]] = v76[v78[3]][v78[4]];
												v70 = v70 + 1;
												v675 = 1;
											end
											if (v675 == 8) then
												v70 = v70 + 1;
												v78 = v66[v70];
												v70 = v78[3];
												break;
											end
											if (v675 == 4) then
												v676 = v76[v78[3]];
												v76[v677 + 1] = v676;
												v76[v677] = v676[v78[4]];
												v70 = v70 + 1;
												v675 = 5;
											end
											if (v675 == 2) then
												v677 = v78[2];
												v76[v677](v76[v677 + 1]);
												v70 = v70 + 1;
												v78 = v66[v70];
												v675 = 3;
											end
										end
									else
										local v678 = v78[2];
										do
											return v76[v678](v13(v76, v678 + 1, v71));
										end
									end
								elseif (v79 <= 83) then
									if (v79 <= 77) then
										if (v79 <= 74) then
											if (v79 <= 72) then
												local v209 = 0;
												local v210;
												local v211;
												local v212;
												while true do
													if (v209 == 0) then
														v210 = v78[2];
														v211 = {v76[v210](v13(v76, v210 + 1, v71))};
														v209 = 1;
													end
													if (1 == v209) then
														v212 = 0;
														for v1748 = v210, v78[4] do
															v212 = v212 + 1;
															v76[v1748] = v211[v212];
														end
														break;
													end
												end
											elseif (v79 > 73) then
												local v679 = 0;
												local v680;
												local v681;
												while true do
													if (v679 == 0) then
														v680 = nil;
														v681 = nil;
														v76[v78[2]] = v76[v78[3]][v78[4]];
														v679 = 1;
													end
													if (1 == v679) then
														v70 = v70 + 1;
														v78 = v66[v70];
														v681 = v78[2];
														v679 = 2;
													end
													if (v679 == 7) then
														v76[v681] = v680[v78[4]];
														v70 = v70 + 1;
														v78 = v66[v70];
														v679 = 8;
													end
													if (2 == v679) then
														v680 = v76[v78[3]];
														v76[v681 + 1] = v680;
														v76[v681] = v680[v78[4]];
														v679 = 3;
													end
													if (v679 == 5) then
														v76[v681] = v76[v681](v13(v76, v681 + 1, v78[3]));
														v70 = v70 + 1;
														v78 = v66[v70];
														v679 = 6;
													end
													if (v679 == 8) then
														v681 = v78[2];
														v76[v681](v76[v681 + 1]);
														v70 = v70 + 1;
														v679 = 9;
													end
													if (v679 == 3) then
														v70 = v70 + 1;
														v78 = v66[v70];
														v76[v78[2]] = v78[3];
														v679 = 4;
													end
													if (v679 == 9) then
														v78 = v66[v70];
														v70 = v78[3];
														break;
													end
													if (v679 == 6) then
														v681 = v78[2];
														v680 = v76[v78[3]];
														v76[v681 + 1] = v680;
														v679 = 7;
													end
													if (4 == v679) then
														v70 = v70 + 1;
														v78 = v66[v70];
														v681 = v78[2];
														v679 = 5;
													end
												end
											else
												local v682;
												v76[v78[2]] = v76[v78[3]][v78[4]];
												v70 = v70 + 1;
												v78 = v66[v70];
												v76[v78[2]] = v78[3];
												v70 = v70 + 1;
												v78 = v66[v70];
												v76[v78[2]] = v78[3];
												v70 = v70 + 1;
												v78 = v66[v70];
												v76[v78[2]] = v78[3];
												v70 = v70 + 1;
												v78 = v66[v70];
												v682 = v78[2];
												v76[v682] = v76[v682](v13(v76, v682 + 1, v78[3]));
												v70 = v70 + 1;
												v78 = v66[v70];
												v76[v78[2]][v78[3]] = v76[v78[4]];
												v70 = v70 + 1;
												v78 = v66[v70];
												v76[v78[2]][v78[3]] = v78[4];
												v70 = v70 + 1;
												v78 = v66[v70];
												v76[v78[2]] = v78[3];
												v70 = v70 + 1;
												v78 = v66[v70];
												v70 = v78[3];
											end
										elseif (v79 <= 75) then
											local v213;
											v76[v78[2]] = v76[v78[3]][v78[4]];
											v70 = v70 + 1;
											v78 = v66[v70];
											v76[v78[2]] = v78[3];
											v70 = v70 + 1;
											v78 = v66[v70];
											v213 = v78[2];
											v76[v213](v76[v213 + 1]);
											v70 = v70 + 1;
											v78 = v66[v70];
											v76[v78[2]] = v62[v78[3]];
											v70 = v70 + 1;
											v78 = v66[v70];
											v76[v78[2]] = v76[v78[3]][v78[4]];
											v70 = v70 + 1;
											v78 = v66[v70];
											v76[v78[2]] = v78[3];
											v70 = v70 + 1;
											v78 = v66[v70];
											v76[v78[2]] = v78[3];
											v70 = v70 + 1;
											v78 = v66[v70];
											v76[v78[2]] = v78[3];
											v70 = v70 + 1;
											v78 = v66[v70];
											v213 = v78[2];
											v76[v213] = v76[v213](v13(v76, v213 + 1, v78[3]));
											v70 = v70 + 1;
											v78 = v66[v70];
											v76[v78[2]] = v76[v78[3]];
										elseif (v79 > 76) then
											local v692;
											local v693, v694;
											local v695;
											v76[v78[2]] = v76[v78[3]][v78[4]];
											v70 = v70 + 1;
											v78 = v66[v70];
											v76[v78[2]] = v62[v78[3]];
											v70 = v70 + 1;
											v78 = v66[v70];
											v76[v78[2]] = v76[v78[3]][v78[4]];
											v70 = v70 + 1;
											v78 = v66[v70];
											v76[v78[2]] = v78[3];
											v70 = v70 + 1;
											v78 = v66[v70];
											v76[v78[2]] = v78[3];
											v70 = v70 + 1;
											v78 = v66[v70];
											v695 = v78[2];
											v693, v694 = v69(v76[v695](v13(v76, v695 + 1, v78[3])));
											v71 = (v694 + v695) - 1;
											v692 = 0;
											for v1467 = v695, v71 do
												v692 = v692 + 1;
												v76[v1467] = v693[v692];
											end
											v70 = v70 + 1;
											v78 = v66[v70];
											v695 = v78[2];
											v76[v695](v13(v76, v695 + 1, v71));
											v70 = v70 + 1;
											v78 = v66[v70];
											v76[v78[2]] = v76[v78[3]][v78[4]];
											v70 = v70 + 1;
											v78 = v66[v70];
											v76[v78[2]] = v76[v78[3]][v78[4]];
											v70 = v70 + 1;
											v78 = v66[v70];
											v76[v78[2]] = v76[v78[3]][v78[4]];
										else
											local v702 = 0;
											local v703;
											local v704;
											local v705;
											while true do
												if (v702 == 3) then
													v78 = v66[v70];
													v76[v78[2]] = v76[v78[3]][v78[4]];
													v70 = v70 + 1;
													v702 = 4;
												end
												if (v702 == 5) then
													v78 = v66[v70];
													v704 = v78[3];
													v703 = v76[v704];
													v702 = 6;
												end
												if (v702 == 2) then
													v705 = v78[2];
													v76[v705] = v76[v705]();
													v70 = v70 + 1;
													v702 = 3;
												end
												if (v702 == 1) then
													v76[v78[2]] = v62[v78[3]];
													v70 = v70 + 1;
													v78 = v66[v70];
													v702 = 2;
												end
												if (v702 == 6) then
													for v2791 = v704 + 1, v78[4] do
														v703 = v703 .. v76[v2791];
													end
													v76[v78[2]] = v703;
													break;
												end
												if (v702 == 4) then
													v78 = v66[v70];
													v76[v78[2]] = v78[3];
													v70 = v70 + 1;
													v702 = 5;
												end
												if (v702 == 0) then
													v703 = nil;
													v704 = nil;
													v705 = nil;
													v702 = 1;
												end
											end
										end
									elseif (v79 <= 80) then
										if (v79 <= 78) then
											if (v76[v78[2]] == v78[4]) then
												v70 = v70 + 1;
											else
												v70 = v78[3];
											end
										elseif (v79 > 79) then
											local v707;
											v76[v78[2]] = v78[3];
											v70 = v70 + 1;
											v78 = v66[v70];
											v76[v78[2]] = {};
											v70 = v70 + 1;
											v78 = v66[v70];
											v76[v78[2]] = v62[v78[3]];
											v70 = v70 + 1;
											v78 = v66[v70];
											v76[v78[2]] = v76[v78[3]][v78[4]];
											v70 = v70 + 1;
											v78 = v66[v70];
											v76[v78[2]] = v76[v78[3]][v78[4]];
											v70 = v70 + 1;
											v78 = v66[v70];
											v76[v78[2]][v78[3]] = v76[v78[4]];
											v70 = v70 + 1;
											v78 = v66[v70];
											v707 = v78[2];
											v76[v707](v13(v76, v707 + 1, v78[3]));
											v70 = v70 + 1;
											v78 = v66[v70];
											v76[v78[2]] = v76[v78[3]];
											v70 = v70 + 1;
											v78 = v66[v70];
											v76[v78[2]]();
											v70 = v70 + 1;
											v78 = v66[v70];
											v76[v78[2]] = v76[v78[3]][v78[4]];
										else
											local v717 = 0;
											local v718;
											while true do
												if (v717 == 4) then
													v78 = v66[v70];
													v70 = v78[3];
													break;
												end
												if (0 == v717) then
													v718 = nil;
													v76[v78[2]] = v62[v78[3]];
													v70 = v70 + 1;
													v78 = v66[v70];
													v717 = 1;
												end
												if (v717 == 3) then
													v70 = v70 + 1;
													v78 = v66[v70];
													v76[v78[2]] = v78[3];
													v70 = v70 + 1;
													v717 = 4;
												end
												if (v717 == 1) then
													v76[v78[2]] = v76[v78[3]][v78[4]];
													v70 = v70 + 1;
													v78 = v66[v70];
													v76[v78[2]] = v78[3];
													v717 = 2;
												end
												if (v717 == 2) then
													v70 = v70 + 1;
													v78 = v66[v70];
													v718 = v78[2];
													v76[v718](v76[v718 + 1]);
													v717 = 3;
												end
											end
										end
									elseif (v79 <= 81) then
										local v222;
										v76[v78[2]] = v76[v78[3]][v78[4]];
										v70 = v70 + 1;
										v78 = v66[v70];
										v76[v78[2]] = v62[v78[3]];
										v70 = v70 + 1;
										v78 = v66[v70];
										v76[v78[2]] = v76[v78[3]][v78[4]];
										v70 = v70 + 1;
										v78 = v66[v70];
										v76[v78[2]] = v78[3];
										v70 = v70 + 1;
										v78 = v66[v70];
										v76[v78[2]] = v78[3];
										v70 = v70 + 1;
										v78 = v66[v70];
										v76[v78[2]] = v78[3];
										v70 = v70 + 1;
										v78 = v66[v70];
										v222 = v78[2];
										v76[v222] = v76[v222](v13(v76, v222 + 1, v78[3]));
										v70 = v70 + 1;
										v78 = v66[v70];
										v76[v78[2]][v78[3]] = v76[v78[4]];
										v70 = v70 + 1;
										v78 = v66[v70];
										v76[v78[2]] = v76[v78[3]];
										v70 = v70 + 1;
										v78 = v66[v70];
										v76[v78[2]]();
									elseif (v79 > 82) then
										local v719;
										local v720;
										v76[v78[2]] = v76[v78[3]][v78[4]];
										v70 = v70 + 1;
										v78 = v66[v70];
										v720 = v78[2];
										v719 = v76[v78[3]];
										v76[v720 + 1] = v719;
										v76[v720] = v719[v78[4]];
										v70 = v70 + 1;
										v78 = v66[v70];
										v76[v78[2]] = v78[3];
										v70 = v70 + 1;
										v78 = v66[v70];
										v720 = v78[2];
										v76[v720] = v76[v720](v13(v76, v720 + 1, v78[3]));
										v70 = v70 + 1;
										v78 = v66[v70];
										v720 = v78[2];
										v719 = v76[v78[3]];
										v76[v720 + 1] = v719;
										v76[v720] = v719[v78[4]];
										v70 = v70 + 1;
										v78 = v66[v70];
										v720 = v78[2];
										v76[v720](v76[v720 + 1]);
									else
										local v730;
										local v731, v732;
										local v733;
										local v734;
										v734 = v78[2];
										v733 = v76[v78[3]];
										v76[v734 + 1] = v733;
										v76[v734] = v733[v78[4]];
										v70 = v70 + 1;
										v78 = v66[v70];
										v76[v78[2]] = v78[3];
										v70 = v70 + 1;
										v78 = v66[v70];
										v734 = v78[2];
										v76[v734] = v76[v734](v13(v76, v734 + 1, v78[3]));
										v70 = v70 + 1;
										v78 = v66[v70];
										v76[v78[2]] = v76[v78[3]][v78[4]];
										v70 = v70 + 1;
										v78 = v66[v70];
										v76[v78[2]] = v76[v78[3]][v78[4]];
										v70 = v70 + 1;
										v78 = v66[v70];
										v76[v78[2]] = v76[v78[3]][v78[4]];
										v70 = v70 + 1;
										v78 = v66[v70];
										v734 = v78[2];
										v733 = v76[v78[3]];
										v76[v734 + 1] = v733;
										v76[v734] = v733[v78[4]];
										v70 = v70 + 1;
										v78 = v66[v70];
										v76[v78[2]] = v62[v78[3]];
										v70 = v70 + 1;
										v78 = v66[v70];
										v76[v78[2]] = v76[v78[3]];
										v70 = v70 + 1;
										v78 = v66[v70];
										v734 = v78[2];
										v731, v732 = v69(v76[v734](v76[v734 + 1]));
										v71 = (v732 + v734) - 1;
										v730 = 0;
										for v1470 = v734, v71 do
											v730 = v730 + 1;
											v76[v1470] = v731[v730];
										end
										v70 = v70 + 1;
										v78 = v66[v70];
										v734 = v78[2];
										v76[v734](v13(v76, v734 + 1, v71));
										v70 = v70 + 1;
										v78 = v66[v70];
										v70 = v78[3];
									end
								elseif (v79 <= 89) then
									if (v79 <= 86) then
										if (v79 <= 84) then
											v76[v78[2]] = v76[v78[3]][v78[4]];
										elseif (v79 > 85) then
											local v745;
											v76[v78[2]] = v78[3];
											v70 = v70 + 1;
											v78 = v66[v70];
											v76[v78[2]] = v78[3];
											v70 = v70 + 1;
											v78 = v66[v70];
											v745 = v78[2];
											v76[v745] = v76[v745](v13(v76, v745 + 1, v78[3]));
											v70 = v70 + 1;
											v78 = v66[v70];
											v76[v78[2]][v78[3]] = v76[v78[4]];
											v70 = v70 + 1;
											v78 = v66[v70];
											v76[v78[2]] = v62[v78[3]];
											v70 = v70 + 1;
											v78 = v66[v70];
											v76[v78[2]] = v76[v78[3]][v78[4]];
											v70 = v70 + 1;
											v78 = v66[v70];
											v76[v78[2]] = v78[3];
											v70 = v70 + 1;
											v78 = v66[v70];
											v76[v78[2]] = v78[3];
											v70 = v70 + 1;
											v78 = v66[v70];
											v76[v78[2]] = v78[3];
											v70 = v70 + 1;
											v78 = v66[v70];
											v745 = v78[2];
											v76[v745] = v76[v745](v13(v76, v745 + 1, v78[3]));
										else
											local v755;
											local v756;
											local v755, v757;
											local v758;
											local v759;
											v76[v78[2]] = v61[v78[3]];
											v70 = v70 + 1;
											v78 = v66[v70];
											v76[v78[2]] = v76[v78[3]][v78[4]];
											v70 = v70 + 1;
											v78 = v66[v70];
											v76[v78[2]] = v76[v78[3]][v78[4]];
											v70 = v70 + 1;
											v78 = v66[v70];
											v76[v78[2]] = v76[v78[3]][v78[4]];
											v70 = v70 + 1;
											v78 = v66[v70];
											v76[v78[2]] = v76[v78[3]][v78[4]];
											v70 = v70 + 1;
											v78 = v66[v70];
											v76[v78[2]] = v76[v78[3]][v78[4]];
											v70 = v70 + 1;
											v78 = v66[v70];
											v76[v78[2]] = v76[v78[3]][v78[4]];
											v70 = v70 + 1;
											v78 = v66[v70];
											v759 = v78[2];
											v758 = v76[v78[3]];
											v76[v759 + 1] = v758;
											v76[v759] = v758[v78[4]];
											v70 = v70 + 1;
											v78 = v66[v70];
											v759 = v78[2];
											v755, v757 = v69(v76[v759](v76[v759 + 1]));
											v71 = (v757 + v759) - 1;
											v756 = 0;
											for v1473 = v759, v71 do
												local v1474 = 0;
												while true do
													if (v1474 == 0) then
														v756 = v756 + 1;
														v76[v1473] = v755[v756];
														break;
													end
												end
											end
											v70 = v70 + 1;
											v78 = v66[v70];
											v759 = v78[2];
											v755 = {v76[v759](v13(v76, v759 + 1, v71))};
											v756 = 0;
											for v1475 = v759, v78[4] do
												v756 = v756 + 1;
												v76[v1475] = v755[v756];
											end
											v70 = v70 + 1;
											v78 = v66[v70];
											v70 = v78[3];
										end
									elseif (v79 <= 87) then
										local v235 = 0;
										local v236;
										local v237;
										while true do
											if (v235 == 3) then
												v70 = v70 + 1;
												v78 = v66[v70];
												v76[v78[2]] = v78[3];
												v70 = v70 + 1;
												v235 = 4;
											end
											if (v235 == 0) then
												v236 = nil;
												v237 = nil;
												v76[v78[2]]();
												v70 = v70 + 1;
												v235 = 1;
											end
											if (v235 == 2) then
												v76[v237] = v236[v78[4]];
												v70 = v70 + 1;
												v78 = v66[v70];
												v76[v78[2]] = v78[3] ~= 0;
												v235 = 3;
											end
											if (1 == v235) then
												v78 = v66[v70];
												v237 = v78[2];
												v236 = v76[v78[3]];
												v76[v237 + 1] = v236;
												v235 = 2;
											end
											if (v235 == 6) then
												v76[v237](v13(v76, v237 + 1, v78[3]));
												v70 = v70 + 1;
												v78 = v66[v70];
												v76[v78[2]] = v78[3];
												break;
											end
											if (v235 == 5) then
												v76[v78[2]] = v62[v78[3]];
												v70 = v70 + 1;
												v78 = v66[v70];
												v237 = v78[2];
												v235 = 6;
											end
											if (v235 == 4) then
												v78 = v66[v70];
												v76[v78[2]] = v78[3] ~= 0;
												v70 = v70 + 1;
												v78 = v66[v70];
												v235 = 5;
											end
										end
									elseif (v79 == 88) then
										local v770 = v78[2];
										v76[v770](v13(v76, v770 + 1, v78[3]));
									else
										local v771 = 0;
										local v772;
										local v773;
										while true do
											if (v771 == 3) then
												v70 = v70 + 1;
												v78 = v66[v70];
												v76[v78[2]] = v76[v78[3]][v78[4]];
												v70 = v70 + 1;
												v771 = 4;
											end
											if (v771 == 4) then
												v78 = v66[v70];
												v773 = v78[3];
												v772 = v76[v773];
												for v2794 = v773 + 1, v78[4] do
													v772 = v772 .. v76[v2794];
												end
												v771 = 5;
											end
											if (v771 == 0) then
												v772 = nil;
												v773 = nil;
												v76[v78[2]] = v76[v78[3]][v78[4]];
												v70 = v70 + 1;
												v771 = 1;
											end
											if (v771 == 6) then
												v70 = v70 + 1;
												v78 = v66[v70];
												v76[v78[2]] = v78[3];
												break;
											end
											if (v771 == 5) then
												v76[v78[2]] = v772;
												v70 = v70 + 1;
												v78 = v66[v70];
												v76[v78[2]][v78[3]] = v76[v78[4]];
												v771 = 6;
											end
											if (v771 == 1) then
												v78 = v66[v70];
												v76[v78[2]] = v76[v78[3]][v78[4]];
												v70 = v70 + 1;
												v78 = v66[v70];
												v771 = 2;
											end
											if (v771 == 2) then
												v76[v78[2]][v78[3]] = v76[v78[4]];
												v70 = v70 + 1;
												v78 = v66[v70];
												v76[v78[2]] = v78[3];
												v771 = 3;
											end
										end
									end
								elseif (v79 <= 92) then
									if (v79 <= 90) then
										local v238 = v78[2];
										v71 = (v238 + v77) - 1;
										for v434 = v238, v71 do
											local v435 = v72[v434 - v238];
											v76[v434] = v435;
										end
									elseif (v79 > 91) then
										local v774;
										v76[v78[2]] = v78[3];
										v70 = v70 + 1;
										v78 = v66[v70];
										v774 = v78[2];
										v76[v774](v76[v774 + 1]);
										v70 = v70 + 1;
										v78 = v66[v70];
										v76[v78[2]] = v62[v78[3]];
										v70 = v70 + 1;
										v78 = v66[v70];
										v76[v78[2]] = v76[v78[3]][v78[4]];
										v70 = v70 + 1;
										v78 = v66[v70];
										v76[v78[2]] = v78[3];
										v70 = v70 + 1;
										v78 = v66[v70];
										v774 = v78[2];
										v76[v774](v76[v774 + 1]);
										v70 = v70 + 1;
										v78 = v66[v70];
										v76[v78[2]] = v78[3];
										v70 = v70 + 1;
										v78 = v66[v70];
										v70 = v78[3];
									else
										local v781 = 0;
										local v782;
										local v783;
										local v784;
										local v785;
										while true do
											if (1 == v781) then
												v71 = (v784 + v782) - 1;
												v785 = 0;
												v781 = 2;
											end
											if (v781 == 2) then
												for v2795 = v782, v71 do
													v785 = v785 + 1;
													v76[v2795] = v783[v785];
												end
												break;
											end
											if (0 == v781) then
												v782 = v78[2];
												v783, v784 = v69(v76[v782](v76[v782 + 1]));
												v781 = 1;
											end
										end
									end
								elseif (v79 <= 94) then
									if (v79 > 93) then
										local v786;
										local v787;
										v76[v78[2]] = v76[v78[3]][v78[4]];
										v70 = v70 + 1;
										v78 = v66[v70];
										v76[v78[2]] = v76[v78[3]][v78[4]];
										v70 = v70 + 1;
										v78 = v66[v70];
										v787 = v78[2];
										v786 = v76[v78[3]];
										v76[v787 + 1] = v786;
										v76[v787] = v786[v78[4]];
										v70 = v70 + 1;
										v78 = v66[v70];
										v76[v78[2]] = v78[3];
										v70 = v70 + 1;
										v78 = v66[v70];
										v76[v78[2]] = {};
										v70 = v70 + 1;
										v78 = v66[v70];
										v76[v78[2]][v78[3]] = v78[4];
										v70 = v70 + 1;
										v78 = v66[v70];
										v76[v78[2]][v78[3]] = v78[4];
										v70 = v70 + 1;
										v78 = v66[v70];
										v787 = v78[2];
										v76[v787](v13(v76, v787 + 1, v78[3]));
										v70 = v70 + 1;
										v78 = v66[v70];
										v76[v78[2]] = v61[v78[3]];
										v70 = v70 + 1;
										v78 = v66[v70];
										v76[v78[2]] = v76[v78[3]][v78[4]];
										v70 = v70 + 1;
										v78 = v66[v70];
										v76[v78[2]] = v76[v78[3]][v78[4]];
										v70 = v70 + 1;
										v78 = v66[v70];
										v787 = v78[2];
										v786 = v76[v78[3]];
										v76[v787 + 1] = v786;
										v76[v787] = v786[v78[4]];
										v70 = v70 + 1;
										v78 = v66[v70];
										v76[v78[2]] = v78[3];
										v70 = v70 + 1;
										v78 = v66[v70];
										v76[v78[2]] = {};
										v70 = v70 + 1;
										v78 = v66[v70];
										v76[v78[2]][v78[3]] = v78[4];
										v70 = v70 + 1;
										v78 = v66[v70];
										v76[v78[2]][v78[3]] = v78[4];
										v70 = v70 + 1;
										v78 = v66[v70];
										v787 = v78[2];
										v76[v787](v13(v76, v787 + 1, v78[3]));
										v70 = v70 + 1;
										v78 = v66[v70];
										v76[v78[2]] = v61[v78[3]];
										v70 = v70 + 1;
										v78 = v66[v70];
										v76[v78[2]] = v76[v78[3]][v78[4]];
										v70 = v70 + 1;
										v78 = v66[v70];
										v76[v78[2]] = v76[v78[3]][v78[4]];
										v70 = v70 + 1;
										v78 = v66[v70];
										v787 = v78[2];
										v786 = v76[v78[3]];
										v76[v787 + 1] = v786;
										v76[v787] = v786[v78[4]];
										v70 = v70 + 1;
										v78 = v66[v70];
										v76[v78[2]] = v78[3];
										v70 = v70 + 1;
										v78 = v66[v70];
										v76[v78[2]] = {};
										v70 = v70 + 1;
										v78 = v66[v70];
										v76[v78[2]][v78[3]] = v78[4];
										v70 = v70 + 1;
										v78 = v66[v70];
										v76[v78[2]][v78[3]] = v78[4];
										v70 = v70 + 1;
										v78 = v66[v70];
										v787 = v78[2];
										v76[v787](v13(v76, v787 + 1, v78[3]));
										v70 = v70 + 1;
										v78 = v66[v70];
										v76[v78[2]] = v61[v78[3]];
										v70 = v70 + 1;
										v78 = v66[v70];
										v76[v78[2]] = v76[v78[3]][v78[4]];
										v70 = v70 + 1;
										v78 = v66[v70];
										v76[v78[2]] = v76[v78[3]][v78[4]];
										v70 = v70 + 1;
										v78 = v66[v70];
										v787 = v78[2];
										v786 = v76[v78[3]];
										v76[v787 + 1] = v786;
										v76[v787] = v786[v78[4]];
										v70 = v70 + 1;
										v78 = v66[v70];
										v76[v78[2]] = v78[3];
										v70 = v70 + 1;
										v78 = v66[v70];
										v76[v78[2]] = {};
										v70 = v70 + 1;
										v78 = v66[v70];
										v76[v78[2]][v78[3]] = v78[4];
										v70 = v70 + 1;
										v78 = v66[v70];
										v76[v78[2]][v78[3]] = v78[4];
										v70 = v70 + 1;
										v78 = v66[v70];
										v787 = v78[2];
										v76[v787](v13(v76, v787 + 1, v78[3]));
										v70 = v70 + 1;
										v78 = v66[v70];
										v76[v78[2]] = v78[3];
										v70 = v70 + 1;
										v78 = v66[v70];
										v70 = v78[3];
									else
										v76[v78[2]] = v76[v78[3]][v78[4]];
										v70 = v70 + 1;
										v78 = v66[v70];
										v76[v78[2]] = v76[v78[3]][v78[4]];
										v70 = v70 + 1;
										v78 = v66[v70];
										v76[v78[2]][v78[3]] = v76[v78[4]];
										v70 = v70 + 1;
										v78 = v66[v70];
										v76[v78[2]][v78[3]] = v78[4];
										v70 = v70 + 1;
										v78 = v66[v70];
										v76[v78[2]] = v78[3];
									end
								elseif (v79 > 95) then
									local v807;
									local v808;
									v76[v78[2]] = v76[v78[3]][v78[4]];
									v70 = v70 + 1;
									v78 = v66[v70];
									v76[v78[2]] = v76[v78[3]][v78[4]];
									v70 = v70 + 1;
									v78 = v66[v70];
									v808 = v78[2];
									v807 = v76[v78[3]];
									v76[v808 + 1] = v807;
									v76[v808] = v807[v78[4]];
									v70 = v70 + 1;
									v78 = v66[v70];
									v76[v78[2]] = v78[3];
									v70 = v70 + 1;
									v78 = v66[v70];
									v76[v78[2]] = {};
									v70 = v70 + 1;
									v78 = v66[v70];
									v76[v78[2]][v78[3]] = v78[4];
									v70 = v70 + 1;
									v78 = v66[v70];
									v76[v78[2]][v78[3]] = v78[4];
									v70 = v70 + 1;
									v78 = v66[v70];
									v808 = v78[2];
									v76[v808](v13(v76, v808 + 1, v78[3]));
									v70 = v70 + 1;
									v78 = v66[v70];
									v76[v78[2]] = v61[v78[3]];
									v70 = v70 + 1;
									v78 = v66[v70];
									v76[v78[2]] = v76[v78[3]][v78[4]];
									v70 = v70 + 1;
									v78 = v66[v70];
									v76[v78[2]] = v76[v78[3]][v78[4]];
									v70 = v70 + 1;
									v78 = v66[v70];
									v808 = v78[2];
									v807 = v76[v78[3]];
									v76[v808 + 1] = v807;
									v76[v808] = v807[v78[4]];
									v70 = v70 + 1;
									v78 = v66[v70];
									v76[v78[2]] = v78[3];
									v70 = v70 + 1;
									v78 = v66[v70];
									v76[v78[2]] = {};
									v70 = v70 + 1;
									v78 = v66[v70];
									v76[v78[2]][v78[3]] = v78[4];
									v70 = v70 + 1;
									v78 = v66[v70];
									v76[v78[2]][v78[3]] = v78[4];
									v70 = v70 + 1;
									v78 = v66[v70];
									v808 = v78[2];
									v76[v808](v13(v76, v808 + 1, v78[3]));
									v70 = v70 + 1;
									v78 = v66[v70];
									v76[v78[2]] = v61[v78[3]];
									v70 = v70 + 1;
									v78 = v66[v70];
									v76[v78[2]] = v76[v78[3]][v78[4]];
									v70 = v70 + 1;
									v78 = v66[v70];
									v76[v78[2]] = v76[v78[3]][v78[4]];
									v70 = v70 + 1;
									v78 = v66[v70];
									v808 = v78[2];
									v807 = v76[v78[3]];
									v76[v808 + 1] = v807;
									v76[v808] = v807[v78[4]];
									v70 = v70 + 1;
									v78 = v66[v70];
									v76[v78[2]] = v78[3];
									v70 = v70 + 1;
									v78 = v66[v70];
									v76[v78[2]] = {};
									v70 = v70 + 1;
									v78 = v66[v70];
									v76[v78[2]][v78[3]] = v78[4];
									v70 = v70 + 1;
									v78 = v66[v70];
									v76[v78[2]][v78[3]] = v78[4];
									v70 = v70 + 1;
									v78 = v66[v70];
									v808 = v78[2];
									v76[v808](v13(v76, v808 + 1, v78[3]));
									v70 = v70 + 1;
									v78 = v66[v70];
									v70 = v78[3];
								else
									local v821 = v78[2];
									local v822 = v76[v821];
									local v823 = v78[3];
									for v1498 = 1, v823 do
										v822[v1498] = v76[v821 + v1498];
									end
								end
							elseif (v79 <= 144) then
								if (v79 <= 120) then
									if (v79 <= 108) then
										if (v79 <= 102) then
											if (v79 <= 99) then
												if (v79 <= 97) then
													local v239 = 0;
													local v240;
													local v241;
													while true do
														if (v239 == 7) then
															if (v76[v78[2]] == v78[4]) then
																v70 = v70 + 1;
															else
																v70 = v78[3];
															end
															break;
														end
														if (v239 == 2) then
															v70 = v70 + 1;
															v78 = v66[v70];
															v76[v78[2]] = v78[3];
															v239 = 3;
														end
														if (v239 == 6) then
															v76[v78[2]] = v76[v78[3]][v78[4]];
															v70 = v70 + 1;
															v78 = v66[v70];
															v239 = 7;
														end
														if (v239 == 5) then
															v76[v78[2]] = v76[v78[3]][v78[4]];
															v70 = v70 + 1;
															v78 = v66[v70];
															v239 = 6;
														end
														if (v239 == 0) then
															v240 = nil;
															v241 = nil;
															v241 = v78[2];
															v239 = 1;
														end
														if (3 == v239) then
															v70 = v70 + 1;
															v78 = v66[v70];
															v241 = v78[2];
															v239 = 4;
														end
														if (v239 == 4) then
															v76[v241] = v76[v241](v13(v76, v241 + 1, v78[3]));
															v70 = v70 + 1;
															v78 = v66[v70];
															v239 = 5;
														end
														if (1 == v239) then
															v240 = v76[v78[3]];
															v76[v241 + 1] = v240;
															v76[v241] = v240[v78[4]];
															v239 = 2;
														end
													end
												elseif (v79 == 98) then
													local v824 = 0;
													local v825;
													while true do
														if (v824 == 0) then
															v825 = nil;
															v76[v78[2]] = v61[v78[3]];
															v70 = v70 + 1;
															v78 = v66[v70];
															v76[v78[2]] = v76[v78[3]][v78[4]];
															v70 = v70 + 1;
															v824 = 1;
														end
														if (v824 == 2) then
															v78 = v66[v70];
															v76[v78[2]] = v76[v78[3]][v78[4]];
															v70 = v70 + 1;
															v78 = v66[v70];
															v76[v78[2]] = v76[v78[3]][v78[4]];
															v70 = v70 + 1;
															v824 = 3;
														end
														if (v824 == 3) then
															v78 = v66[v70];
															v76[v78[2]] = v76[v78[3]][v78[4]];
															v70 = v70 + 1;
															v78 = v66[v70];
															v76[v78[2]] = v76[v78[3]][v78[4]];
															v70 = v70 + 1;
															v824 = 4;
														end
														if (v824 == 5) then
															v70 = v70 + 1;
															v78 = v66[v70];
															v76[v78[2]] = v76[v78[3]][v78[4]];
															v70 = v70 + 1;
															v78 = v66[v70];
															v76[v78[2]] = v78[3];
															v824 = 6;
														end
														if (v824 == 4) then
															v78 = v66[v70];
															v825 = v78[2];
															v76[v825](v76[v825 + 1]);
															v70 = v70 + 1;
															v78 = v66[v70];
															v76[v78[2]] = v62[v78[3]];
															v824 = 5;
														end
														if (v824 == 7) then
															v70 = v78[3];
															break;
														end
														if (v824 == 6) then
															v70 = v70 + 1;
															v78 = v66[v70];
															v825 = v78[2];
															v76[v825](v76[v825 + 1]);
															v70 = v70 + 1;
															v78 = v66[v70];
															v824 = 7;
														end
														if (v824 == 1) then
															v78 = v66[v70];
															v76[v78[2]] = v76[v78[3]][v78[4]];
															v70 = v70 + 1;
															v78 = v66[v70];
															v76[v78[2]] = v76[v78[3]][v78[4]];
															v70 = v70 + 1;
															v824 = 2;
														end
													end
												else
													local v826;
													v76[v78[2]][v78[3]] = v76[v78[4]];
													v70 = v70 + 1;
													v78 = v66[v70];
													v76[v78[2]][v78[3]] = v78[4];
													v70 = v70 + 1;
													v78 = v66[v70];
													v76[v78[2]] = v62[v78[3]];
													v70 = v70 + 1;
													v78 = v66[v70];
													v76[v78[2]] = v76[v78[3]][v78[4]];
													v70 = v70 + 1;
													v78 = v66[v70];
													v76[v78[2]] = v78[3];
													v70 = v70 + 1;
													v78 = v66[v70];
													v76[v78[2]] = v78[3];
													v70 = v70 + 1;
													v78 = v66[v70];
													v76[v78[2]] = v78[3];
													v70 = v70 + 1;
													v78 = v66[v70];
													v826 = v78[2];
													v76[v826] = v76[v826](v13(v76, v826 + 1, v78[3]));
													v70 = v70 + 1;
													v78 = v66[v70];
													v76[v78[2]][v78[3]] = v76[v78[4]];
													v70 = v70 + 1;
													v78 = v66[v70];
													v76[v78[2]][v78[3]] = v78[4];
												end
											elseif (v79 <= 100) then
												local v242;
												v76[v78[2]] = v78[3] ~= 0;
												v70 = v70 + 1;
												v78 = v66[v70];
												v76[v78[2]] = v78[3];
												v70 = v70 + 1;
												v78 = v66[v70];
												v76[v78[2]] = v78[3] ~= 0;
												v70 = v70 + 1;
												v78 = v66[v70];
												v76[v78[2]] = v62[v78[3]];
												v70 = v70 + 1;
												v78 = v66[v70];
												v242 = v78[2];
												v76[v242](v13(v76, v242 + 1, v78[3]));
												v70 = v70 + 1;
												v78 = v66[v70];
												v76[v78[2]] = v62[v78[3]];
												v70 = v70 + 1;
												v78 = v66[v70];
												v76[v78[2]] = v76[v78[3]][v78[4]];
												v70 = v70 + 1;
												v78 = v66[v70];
												v76[v78[2]] = v78[3];
												v70 = v70 + 1;
												v78 = v66[v70];
												v242 = v78[2];
												v76[v242](v76[v242 + 1]);
												v70 = v70 + 1;
												v78 = v66[v70];
												v76[v78[2]] = v78[3];
											elseif (v79 == 101) then
												local v837;
												v76[v78[2]] = v76[v78[3]][v78[4]];
												v70 = v70 + 1;
												v78 = v66[v70];
												v76[v78[2]] = v78[3];
												v70 = v70 + 1;
												v78 = v66[v70];
												v837 = v78[2];
												v76[v837](v76[v837 + 1]);
												v70 = v70 + 1;
												v78 = v66[v70];
												v76[v78[2]] = v76[v78[3]][v78[4]];
												v70 = v70 + 1;
												v78 = v66[v70];
												v76[v78[2]] = v76[v78[3]][v78[4]];
												v70 = v70 + 1;
												v78 = v66[v70];
												v76[v78[2]] = v62[v78[3]];
												v70 = v70 + 1;
												v78 = v66[v70];
												v76[v78[2]] = v76[v78[3]][v78[4]];
												v70 = v70 + 1;
												v78 = v66[v70];
												v76[v78[2]] = v78[3];
												v70 = v70 + 1;
												v78 = v66[v70];
												v76[v78[2]] = v78[3];
												v70 = v70 + 1;
												v78 = v66[v70];
												v76[v78[2]] = v78[3];
											else
												local v844 = v78[2];
												local v845 = {};
												for v1519 = 1, #v75 do
													local v1520 = v75[v1519];
													for v1751 = 0, #v1520 do
														local v1752 = v1520[v1751];
														local v1753 = v1752[1];
														local v1754 = v1752[2];
														if ((v1753 == v76) and (v1754 >= v844)) then
															local v2798 = 0;
															while true do
																if (v2798 == 0) then
																	v845[v1754] = v1753[v1754];
																	v1752[1] = v845;
																	break;
																end
															end
														end
													end
												end
											end
										elseif (v79 <= 105) then
											if (v79 <= 103) then
												local v249 = 0;
												local v250;
												local v251;
												while true do
													if (v249 == 4) then
														v251 = v78[2];
														v250 = v76[v78[3]];
														v76[v251 + 1] = v250;
														v249 = 5;
													end
													if (v249 == 6) then
														v76[v78[2]] = v78[3];
														v70 = v70 + 1;
														v78 = v66[v70];
														v249 = 7;
													end
													if (5 == v249) then
														v76[v251] = v250[v78[4]];
														v70 = v70 + 1;
														v78 = v66[v70];
														v249 = 6;
													end
													if (v249 == 3) then
														v76[v251](v76[v251 + 1]);
														v70 = v70 + 1;
														v78 = v66[v70];
														v249 = 4;
													end
													if (v249 == 2) then
														v70 = v70 + 1;
														v78 = v66[v70];
														v251 = v78[2];
														v249 = 3;
													end
													if (v249 == 7) then
														v251 = v78[2];
														v76[v251] = v76[v251](v13(v76, v251 + 1, v78[3]));
														v70 = v70 + 1;
														v249 = 8;
													end
													if (v249 == 8) then
														v78 = v66[v70];
														if not v76[v78[2]] then
															v70 = v70 + 1;
														else
															v70 = v78[3];
														end
														break;
													end
													if (v249 == 1) then
														v70 = v70 + 1;
														v78 = v66[v70];
														v76[v78[2]] = v78[3];
														v249 = 2;
													end
													if (0 == v249) then
														v250 = nil;
														v251 = nil;
														v76[v78[2]] = v76[v78[3]][v78[4]];
														v249 = 1;
													end
												end
											elseif (v79 > 104) then
												local v846;
												v76[v78[2]] = v76[v78[3]][v78[4]];
												v70 = v70 + 1;
												v78 = v66[v70];
												v76[v78[2]] = v78[3];
												v70 = v70 + 1;
												v78 = v66[v70];
												v76[v78[2]] = v78[3];
												v70 = v70 + 1;
												v78 = v66[v70];
												v76[v78[2]] = v78[3];
												v70 = v70 + 1;
												v78 = v66[v70];
												v846 = v78[2];
												v76[v846] = v76[v846](v13(v76, v846 + 1, v78[3]));
												v70 = v70 + 1;
												v78 = v66[v70];
												v76[v78[2]][v78[3]] = v76[v78[4]];
												v70 = v70 + 1;
												v78 = v66[v70];
												v76[v78[2]][v78[3]] = v78[4];
												v70 = v70 + 1;
												v78 = v66[v70];
												v76[v78[2]] = v78[3];
												v70 = v70 + 1;
												v78 = v66[v70];
												v70 = v78[3];
											else
												local v856 = 0;
												local v857;
												while true do
													if (v856 == 1) then
														v76[v78[2]] = v78[3];
														v70 = v70 + 1;
														v78 = v66[v70];
														v76[v78[2]] = v78[3];
														v856 = 2;
													end
													if (v856 == 0) then
														v857 = nil;
														v76[v78[2]] = v76[v78[3]][v78[4]];
														v70 = v70 + 1;
														v78 = v66[v70];
														v856 = 1;
													end
													if (v856 == 5) then
														v76[v78[2]] = v78[3];
														break;
													end
													if (v856 == 2) then
														v70 = v70 + 1;
														v78 = v66[v70];
														v76[v78[2]] = v78[3];
														v70 = v70 + 1;
														v856 = 3;
													end
													if (v856 == 4) then
														v78 = v66[v70];
														v76[v78[2]][v78[3]] = v76[v78[4]];
														v70 = v70 + 1;
														v78 = v66[v70];
														v856 = 5;
													end
													if (v856 == 3) then
														v78 = v66[v70];
														v857 = v78[2];
														v76[v857] = v76[v857](v13(v76, v857 + 1, v78[3]));
														v70 = v70 + 1;
														v856 = 4;
													end
												end
											end
										elseif (v79 <= 106) then
											local v252 = 0;
											local v253;
											local v254;
											while true do
												if (v252 == 2) then
													v76[v78[2]][v78[3]] = v76[v78[4]];
													v70 = v70 + 1;
													v78 = v66[v70];
													v76[v78[2]] = v78[3];
													v252 = 3;
												end
												if (v252 == 0) then
													v253 = nil;
													v254 = nil;
													v76[v78[2]] = v76[v78[3]][v78[4]];
													v70 = v70 + 1;
													v252 = 1;
												end
												if (v252 == 6) then
													v70 = v70 + 1;
													v78 = v66[v70];
													v76[v78[2]] = v78[3];
													v70 = v70 + 1;
													v252 = 7;
												end
												if (7 == v252) then
													v78 = v66[v70];
													v70 = v78[3];
													break;
												end
												if (v252 == 5) then
													v76[v78[2]] = v253;
													v70 = v70 + 1;
													v78 = v66[v70];
													v76[v78[2]][v78[3]] = v76[v78[4]];
													v252 = 6;
												end
												if (v252 == 3) then
													v70 = v70 + 1;
													v78 = v66[v70];
													v76[v78[2]] = v76[v78[3]][v78[4]];
													v70 = v70 + 1;
													v252 = 4;
												end
												if (1 == v252) then
													v78 = v66[v70];
													v76[v78[2]] = v76[v78[3]][v78[4]];
													v70 = v70 + 1;
													v78 = v66[v70];
													v252 = 2;
												end
												if (v252 == 4) then
													v78 = v66[v70];
													v254 = v78[3];
													v253 = v76[v254];
													for v1755 = v254 + 1, v78[4] do
														v253 = v253 .. v76[v1755];
													end
													v252 = 5;
												end
											end
										elseif (v79 > 107) then
											local v858 = 0;
											while true do
												if (v858 == 3) then
													v76[v78[2]] = v78[3];
													v70 = v70 + 1;
													v78 = v66[v70];
													v858 = 4;
												end
												if (v858 == 4) then
													v70 = v78[3];
													break;
												end
												if (v858 == 2) then
													v76[v78[2]][v78[3]] = v76[v78[4]];
													v70 = v70 + 1;
													v78 = v66[v70];
													v858 = 3;
												end
												if (v858 == 1) then
													v76[v78[2]] = v76[v78[3]] + v76[v78[4]];
													v70 = v70 + 1;
													v78 = v66[v70];
													v858 = 2;
												end
												if (v858 == 0) then
													v76[v78[2]] = v76[v78[3]][v78[4]];
													v70 = v70 + 1;
													v78 = v66[v70];
													v858 = 1;
												end
											end
										else
											local v859;
											v76[v78[2]] = v78[3];
											v70 = v70 + 1;
											v78 = v66[v70];
											v76[v78[2]] = {};
											v70 = v70 + 1;
											v78 = v66[v70];
											v76[v78[2]] = v62[v78[3]];
											v70 = v70 + 1;
											v78 = v66[v70];
											v76[v78[2]] = v76[v78[3]][v78[4]];
											v70 = v70 + 1;
											v78 = v66[v70];
											v76[v78[2]] = v76[v78[3]][v78[4]];
											v70 = v70 + 1;
											v78 = v66[v70];
											v76[v78[2]][v78[3]] = v76[v78[4]];
											v70 = v70 + 1;
											v78 = v66[v70];
											v859 = v78[2];
											v76[v859](v13(v76, v859 + 1, v78[3]));
											v70 = v70 + 1;
											v78 = v66[v70];
											v76[v78[2]] = v62[v78[3]];
											v70 = v70 + 1;
											v78 = v66[v70];
											v76[v78[2]] = v76[v78[3]][v78[4]];
											v70 = v70 + 1;
											v78 = v66[v70];
											v76[v78[2]] = v76[v78[3]][v78[4]];
										end
									elseif (v79 <= 114) then
										if (v79 <= 111) then
											if (v79 <= 109) then
												local v255 = 0;
												while true do
													if (v255 == 4) then
														v76[v78[2]] = v76[v78[3]] + v76[v78[4]];
														v70 = v70 + 1;
														v78 = v66[v70];
														v255 = 5;
													end
													if (v255 == 3) then
														v76[v78[2]] = v76[v78[3]][v78[4]];
														v70 = v70 + 1;
														v78 = v66[v70];
														v255 = 4;
													end
													if (v255 == 1) then
														v76[v78[2]] = v76[v78[3]][v78[4]];
														v70 = v70 + 1;
														v78 = v66[v70];
														v255 = 2;
													end
													if (2 == v255) then
														v76[v78[2]] = v76[v78[3]][v78[4]];
														v70 = v70 + 1;
														v78 = v66[v70];
														v255 = 3;
													end
													if (v255 == 0) then
														v76[v78[2]] = v76[v78[3]][v78[4]];
														v70 = v70 + 1;
														v78 = v66[v70];
														v255 = 1;
													end
													if (v255 == 5) then
														v76[v78[2]][v78[3]] = v76[v78[4]];
														v70 = v70 + 1;
														v78 = v66[v70];
														v255 = 6;
													end
													if (v255 == 6) then
														v70 = v78[3];
														break;
													end
												end
											elseif (v79 == 110) then
												local v868;
												local v869;
												v76[v78[2]] = v76[v78[3]][v78[4]];
												v70 = v70 + 1;
												v78 = v66[v70];
												v76[v78[2]] = v76[v78[3]][v78[4]];
												v70 = v70 + 1;
												v78 = v66[v70];
												v869 = v78[2];
												v868 = v76[v78[3]];
												v76[v869 + 1] = v868;
												v76[v869] = v868[v78[4]];
												v70 = v70 + 1;
												v78 = v66[v70];
												v76[v78[2]] = v78[3];
												v70 = v70 + 1;
												v78 = v66[v70];
												v76[v78[2]] = {};
												v70 = v70 + 1;
												v78 = v66[v70];
												v76[v78[2]][v78[3]] = v78[4];
												v70 = v70 + 1;
												v78 = v66[v70];
												v76[v78[2]][v78[3]] = v78[4];
												v70 = v70 + 1;
												v78 = v66[v70];
												v869 = v78[2];
												v76[v869](v13(v76, v869 + 1, v78[3]));
												v70 = v70 + 1;
												v78 = v66[v70];
												v76[v78[2]] = v61[v78[3]];
												v70 = v70 + 1;
												v78 = v66[v70];
												v76[v78[2]] = v76[v78[3]][v78[4]];
												v70 = v70 + 1;
												v78 = v66[v70];
												v76[v78[2]] = v76[v78[3]][v78[4]];
												v70 = v70 + 1;
												v78 = v66[v70];
												v869 = v78[2];
												v868 = v76[v78[3]];
												v76[v869 + 1] = v868;
												v76[v869] = v868[v78[4]];
												v70 = v70 + 1;
												v78 = v66[v70];
												v76[v78[2]] = v78[3];
												v70 = v70 + 1;
												v78 = v66[v70];
												v76[v78[2]] = {};
												v70 = v70 + 1;
												v78 = v66[v70];
												v76[v78[2]][v78[3]] = v78[4];
												v70 = v70 + 1;
												v78 = v66[v70];
												v76[v78[2]][v78[3]] = v78[4];
												v70 = v70 + 1;
												v78 = v66[v70];
												v869 = v78[2];
												v76[v869](v13(v76, v869 + 1, v78[3]));
												v70 = v70 + 1;
												v78 = v66[v70];
												v76[v78[2]] = v78[3];
												v70 = v70 + 1;
												v78 = v66[v70];
												v70 = v78[3];
											else
												local v882;
												v76[v78[2]] = v76[v78[3]][v78[4]];
												v70 = v70 + 1;
												v78 = v66[v70];
												v76[v78[2]] = v78[3];
												v70 = v70 + 1;
												v78 = v66[v70];
												v76[v78[2]] = v78[3];
												v70 = v70 + 1;
												v78 = v66[v70];
												v76[v78[2]] = v78[3];
												v70 = v70 + 1;
												v78 = v66[v70];
												v882 = v78[2];
												v76[v882] = v76[v882](v13(v76, v882 + 1, v78[3]));
												v70 = v70 + 1;
												v78 = v66[v70];
												v76[v78[2]][v78[3]] = v76[v78[4]];
												v70 = v70 + 1;
												v78 = v66[v70];
												v76[v78[2]][v78[3]] = v78[4];
												v70 = v70 + 1;
												v78 = v66[v70];
												v76[v78[2]] = v78[3];
											end
										elseif (v79 <= 112) then
											v76[v78[2]][v78[3]] = v78[4];
										elseif (v79 == 113) then
											local v892;
											local v893;
											v76[v78[2]] = v78[3];
											v70 = v70 + 1;
											v78 = v66[v70];
											v893 = v78[2];
											v76[v893](v76[v893 + 1]);
											v70 = v70 + 1;
											v78 = v66[v70];
											v76[v78[2]] = v62[v78[3]];
											v70 = v70 + 1;
											v78 = v66[v70];
											v893 = v78[2];
											v892 = v76[v78[3]];
											v76[v893 + 1] = v892;
											v76[v893] = v892[v78[4]];
											v70 = v70 + 1;
											v78 = v66[v70];
											v76[v78[2]] = v78[3];
											v70 = v70 + 1;
											v78 = v66[v70];
											v893 = v78[2];
											v76[v893] = v76[v893](v13(v76, v893 + 1, v78[3]));
											v70 = v70 + 1;
											v78 = v66[v70];
											v893 = v78[2];
											v892 = v76[v78[3]];
											v76[v893 + 1] = v892;
											v76[v893] = v892[v78[4]];
											v70 = v70 + 1;
											v78 = v66[v70];
											v76[v78[2]] = v78[3];
											v70 = v70 + 1;
											v78 = v66[v70];
											v76[v78[2]] = v62[v78[3]];
											v70 = v70 + 1;
											v78 = v66[v70];
											v893 = v78[2];
											v892 = v76[v78[3]];
											v76[v893 + 1] = v892;
											v76[v893] = v892[v78[4]];
											v70 = v70 + 1;
											v78 = v66[v70];
											v76[v78[2]] = v78[3];
											v70 = v70 + 1;
											v78 = v66[v70];
											v893 = v78[2];
											v76[v893] = v76[v893](v13(v76, v893 + 1, v78[3]));
											v70 = v70 + 1;
											v78 = v66[v70];
											v76[v78[2]] = v76[v78[3]][v78[4]];
											v70 = v70 + 1;
											v78 = v66[v70];
											v893 = v78[2];
											v76[v893](v13(v76, v893 + 1, v78[3]));
											v70 = v70 + 1;
											v78 = v66[v70];
											v70 = v78[3];
										else
											local v904 = 0;
											local v905;
											while true do
												if (v904 == 0) then
													v905 = v78[2];
													v76[v905] = v76[v905](v76[v905 + 1]);
													break;
												end
											end
										end
									elseif (v79 <= 117) then
										if (v79 <= 115) then
											local v258;
											local v259;
											v76[v78[2]] = v76[v78[3]][v78[4]];
											v70 = v70 + 1;
											v78 = v66[v70];
											v76[v78[2]]();
											v70 = v70 + 1;
											v78 = v66[v70];
											v76[v78[2]] = v62[v78[3]];
											v70 = v70 + 1;
											v78 = v66[v70];
											v259 = v78[2];
											v258 = v76[v78[3]];
											v76[v259 + 1] = v258;
											v76[v259] = v258[v78[4]];
											v70 = v70 + 1;
											v78 = v66[v70];
											v76[v78[2]] = v78[3];
											v70 = v70 + 1;
											v78 = v66[v70];
											v259 = v78[2];
											v76[v259] = v76[v259](v13(v76, v259 + 1, v78[3]));
											v70 = v70 + 1;
											v78 = v66[v70];
											v259 = v78[2];
											v258 = v76[v78[3]];
											v76[v259 + 1] = v258;
											v76[v259] = v258[v78[4]];
											v70 = v70 + 1;
											v78 = v66[v70];
											v76[v78[2]] = v78[3] ~= 0;
											v70 = v70 + 1;
											v78 = v66[v70];
											v76[v78[2]] = v78[3];
											v70 = v70 + 1;
											v78 = v66[v70];
											v76[v78[2]] = v78[3] ~= 0;
											v70 = v70 + 1;
											v78 = v66[v70];
											v76[v78[2]] = v62[v78[3]];
											v70 = v70 + 1;
											v78 = v66[v70];
											v259 = v78[2];
											v76[v259](v13(v76, v259 + 1, v78[3]));
											v70 = v70 + 1;
											v78 = v66[v70];
											v76[v78[2]] = v61[v78[3]];
											v70 = v70 + 1;
											v78 = v66[v70];
											v76[v78[2]] = v76[v78[3]][v78[4]];
											v70 = v70 + 1;
											v78 = v66[v70];
											v76[v78[2]] = v61[v78[3]];
											v70 = v70 + 1;
											v78 = v66[v70];
											v76[v78[2]] = v76[v78[3]][v78[4]];
											v70 = v70 + 1;
											v78 = v66[v70];
											v76[v78[2]] = v76[v78[3]][v76[v78[4]]];
											v70 = v70 + 1;
											v78 = v66[v70];
											v259 = v78[2];
											v258 = v76[v78[3]];
											v76[v259 + 1] = v258;
											v76[v259] = v258[v78[4]];
											v70 = v70 + 1;
											v78 = v66[v70];
											v76[v78[2]] = v78[3];
											v70 = v70 + 1;
											v78 = v66[v70];
											v259 = v78[2];
											v76[v259] = v76[v259](v13(v76, v259 + 1, v78[3]));
											v70 = v70 + 1;
											v78 = v66[v70];
											if v76[v78[2]] then
												v70 = v70 + 1;
											else
												v70 = v78[3];
											end
										elseif (v79 > 116) then
											local v907;
											v76[v78[2]] = v76[v78[3]] + v76[v78[4]];
											v70 = v70 + 1;
											v78 = v66[v70];
											v76[v78[2]][v78[3]] = v76[v78[4]];
											v70 = v70 + 1;
											v78 = v66[v70];
											v76[v78[2]] = v62[v78[3]];
											v70 = v70 + 1;
											v78 = v66[v70];
											v76[v78[2]] = v76[v78[3]][v78[4]];
											v70 = v70 + 1;
											v78 = v66[v70];
											v76[v78[2]] = v78[3];
											v70 = v70 + 1;
											v78 = v66[v70];
											v907 = v78[2];
											v76[v907](v76[v907 + 1]);
											v70 = v70 + 1;
											v78 = v66[v70];
											v76[v78[2]] = v78[3];
										else
											local v916;
											v916 = v78[2];
											v76[v916] = v76[v916]();
											v70 = v70 + 1;
											v78 = v66[v70];
											v76[v78[2]] = v62[v78[3]];
											v70 = v70 + 1;
											v78 = v66[v70];
											v76[v78[2]] = v76[v78[3]];
											v70 = v70 + 1;
											v78 = v66[v70];
											v916 = v78[2];
											v76[v916] = v76[v916](v76[v916 + 1]);
											v70 = v70 + 1;
											v78 = v66[v70];
											if (v76[v78[2]] == v78[4]) then
												v70 = v70 + 1;
											else
												v70 = v78[3];
											end
										end
									elseif (v79 <= 118) then
										local v272;
										v76[v78[2]] = v76[v78[3]][v78[4]];
										v70 = v70 + 1;
										v78 = v66[v70];
										v76[v78[2]] = v78[3];
										v70 = v70 + 1;
										v78 = v66[v70];
										v272 = v78[2];
										v76[v272](v76[v272 + 1]);
										v70 = v70 + 1;
										v78 = v66[v70];
										v76[v78[2]] = v62[v78[3]];
										v70 = v70 + 1;
										v78 = v66[v70];
										v76[v78[2]] = v76[v78[3]][v78[4]];
										v70 = v70 + 1;
										v78 = v66[v70];
										v272 = v78[2];
										v76[v272](v76[v272 + 1]);
										v70 = v70 + 1;
										v78 = v66[v70];
										v76[v78[2]] = v78[3];
										v70 = v70 + 1;
										v78 = v66[v70];
										v70 = v78[3];
									elseif (v79 == 119) then
										local v923;
										local v924;
										v76[v78[2]] = v76[v78[3]];
										v70 = v70 + 1;
										v78 = v66[v70];
										v924 = v78[2];
										v71 = (v924 + v77) - 1;
										for v1584 = v924, v71 do
											v923 = v72[v1584 - v924];
											v76[v1584] = v923;
										end
										v70 = v70 + 1;
										v78 = v66[v70];
										v924 = v78[2];
										do
											return v76[v924](v13(v76, v924 + 1, v71));
										end
										v70 = v70 + 1;
										v78 = v66[v70];
										v924 = v78[2];
										do
											return v13(v76, v924, v71);
										end
										v70 = v70 + 1;
										v78 = v66[v70];
										do
											return;
										end
									else
										local v929 = 0;
										local v930;
										local v931;
										local v932;
										local v933;
										local v934;
										while true do
											if (v929 == 3) then
												v933 = v76[v78[3]];
												v76[v934 + 1] = v933;
												v76[v934] = v933[v78[4]];
												v70 = v70 + 1;
												v78 = v66[v70];
												v934 = v78[2];
												v929 = 4;
											end
											if (v929 == 0) then
												v930 = nil;
												v931 = nil;
												v930, v932 = nil;
												v933 = nil;
												v934 = nil;
												v76[v78[2]] = v76[v78[3]] + v76[v78[4]];
												v929 = 1;
											end
											if (v929 == 1) then
												v70 = v70 + 1;
												v78 = v66[v70];
												v76[v78[2]][v78[3]] = v76[v78[4]];
												v70 = v70 + 1;
												v78 = v66[v70];
												v76[v78[2]] = v62[v78[3]];
												v929 = 2;
											end
											if (v929 == 2) then
												v70 = v70 + 1;
												v78 = v66[v70];
												v76[v78[2]] = v76[v78[3]][v78[4]];
												v70 = v70 + 1;
												v78 = v66[v70];
												v934 = v78[2];
												v929 = 3;
											end
											if (v929 == 5) then
												v934 = v78[2];
												v930 = {v76[v934](v13(v76, v934 + 1, v71))};
												v931 = 0;
												for v2799 = v934, v78[4] do
													local v2800 = 0;
													while true do
														if (v2800 == 0) then
															v931 = v931 + 1;
															v76[v2799] = v930[v931];
															break;
														end
													end
												end
												v70 = v70 + 1;
												v78 = v66[v70];
												v929 = 6;
											end
											if (v929 == 6) then
												v70 = v78[3];
												break;
											end
											if (v929 == 4) then
												v930, v932 = v69(v76[v934](v76[v934 + 1]));
												v71 = (v932 + v934) - 1;
												v931 = 0;
												for v2801 = v934, v71 do
													v931 = v931 + 1;
													v76[v2801] = v930[v931];
												end
												v70 = v70 + 1;
												v78 = v66[v70];
												v929 = 5;
											end
										end
									end
								elseif (v79 <= 132) then
									if (v79 <= 126) then
										if (v79 <= 123) then
											if (v79 <= 121) then
												v76[v78[2]] = v29(v67[v78[3]], nil, v62);
											elseif (v79 == 122) then
												local v935;
												v76[v78[2]] = v76[v78[3]][v78[4]];
												v70 = v70 + 1;
												v78 = v66[v70];
												v76[v78[2]]();
												v70 = v70 + 1;
												v78 = v66[v70];
												v76[v78[2]] = v76[v78[3]][v78[4]];
												v70 = v70 + 1;
												v78 = v66[v70];
												v76[v78[2]] = v76[v78[3]][v78[4]];
												v70 = v70 + 1;
												v78 = v66[v70];
												v76[v78[2]] = v62[v78[3]];
												v70 = v70 + 1;
												v78 = v66[v70];
												v76[v78[2]] = v76[v78[3]][v78[4]];
												v70 = v70 + 1;
												v78 = v66[v70];
												v76[v78[2]] = v78[3];
												v70 = v70 + 1;
												v78 = v66[v70];
												v76[v78[2]] = v78[3];
												v70 = v70 + 1;
												v78 = v66[v70];
												v76[v78[2]] = v78[3];
												v70 = v70 + 1;
												v78 = v66[v70];
												v935 = v78[2];
												v76[v935] = v76[v935](v13(v76, v935 + 1, v78[3]));
											else
												v76[v78[2]] = v78[3] ~= 0;
											end
										elseif (v79 <= 124) then
											local v280;
											local v281;
											v76[v78[2]] = v76[v78[3]][v78[4]];
											v70 = v70 + 1;
											v78 = v66[v70];
											v281 = v78[2];
											v280 = v76[v78[3]];
											v76[v281 + 1] = v280;
											v76[v281] = v280[v78[4]];
											v70 = v70 + 1;
											v78 = v66[v70];
											v76[v78[2]] = v78[3];
											v70 = v70 + 1;
											v78 = v66[v70];
											v281 = v78[2];
											v76[v281] = v76[v281](v13(v76, v281 + 1, v78[3]));
											v70 = v70 + 1;
											v78 = v66[v70];
											v281 = v78[2];
											v280 = v76[v78[3]];
											v76[v281 + 1] = v280;
											v76[v281] = v280[v78[4]];
											v70 = v70 + 1;
											v78 = v66[v70];
											v76[v78[2]] = v78[3];
											v70 = v70 + 1;
											v78 = v66[v70];
											v281 = v78[2];
											v76[v281] = v76[v281](v13(v76, v281 + 1, v78[3]));
											v70 = v70 + 1;
											v78 = v66[v70];
											v76[v78[2]] = v76[v78[3]][v78[4]];
											v70 = v70 + 1;
											v78 = v66[v70];
											v76[v78[2]] = v76[v78[3]][v78[4]];
											v70 = v70 + 1;
											v78 = v66[v70];
											v76[v78[2]] = v76[v78[3]][v78[4]];
										elseif (v79 > 125) then
											local v944;
											v76[v78[2]] = v76[v78[3]][v78[4]];
											v70 = v70 + 1;
											v78 = v66[v70];
											v76[v78[2]] = v62[v78[3]];
											v70 = v70 + 1;
											v78 = v66[v70];
											v76[v78[2]] = v76[v78[3]][v78[4]];
											v70 = v70 + 1;
											v78 = v66[v70];
											v76[v78[2]] = v78[3];
											v70 = v70 + 1;
											v78 = v66[v70];
											v76[v78[2]] = v78[3];
											v70 = v70 + 1;
											v78 = v66[v70];
											v76[v78[2]] = v78[3];
											v70 = v70 + 1;
											v78 = v66[v70];
											v944 = v78[2];
											v76[v944] = v76[v944](v13(v76, v944 + 1, v78[3]));
											v70 = v70 + 1;
											v78 = v66[v70];
											v76[v78[2]][v78[3]] = v76[v78[4]];
											v70 = v70 + 1;
											v78 = v66[v70];
											v76[v78[2]] = v78[3];
											v70 = v70 + 1;
											v78 = v66[v70];
											v70 = v78[3];
										else
											local v954;
											v954 = v78[2];
											v76[v954](v13(v76, v954 + 1, v78[3]));
											v70 = v70 + 1;
											v78 = v66[v70];
											v76[v78[2]] = v62[v78[3]];
											v70 = v70 + 1;
											v78 = v66[v70];
											v76[v78[2]] = v76[v78[3]][v78[4]];
											v70 = v70 + 1;
											v78 = v66[v70];
											v76[v78[2]] = v78[3];
											v70 = v70 + 1;
											v78 = v66[v70];
											v954 = v78[2];
											v76[v954](v76[v954 + 1]);
											v70 = v70 + 1;
											v78 = v66[v70];
											v76[v78[2]] = v62[v78[3]];
											v70 = v70 + 1;
											v78 = v66[v70];
											v76[v78[2]] = v76[v78[3]][v78[4]];
											v70 = v70 + 1;
											v78 = v66[v70];
											v76[v78[2]] = v78[3];
											v70 = v70 + 1;
											v78 = v66[v70];
											v954 = v78[2];
											v76[v954] = v76[v954](v76[v954 + 1]);
											v70 = v70 + 1;
											v78 = v66[v70];
											v76[v78[2]] = v62[v78[3]];
											v70 = v70 + 1;
											v78 = v66[v70];
											v76[v78[2]] = v76[v78[3]][v78[4]];
											v70 = v70 + 1;
											v78 = v66[v70];
											v76[v78[2]] = v78[3];
											v70 = v70 + 1;
											v78 = v66[v70];
											v954 = v78[2];
											v76[v954] = v76[v954](v76[v954 + 1]);
											v70 = v70 + 1;
											v78 = v66[v70];
											v76[v78[2]] = v62[v78[3]];
											v70 = v70 + 1;
											v78 = v66[v70];
											v76[v78[2]] = v76[v78[3]][v78[4]];
											v70 = v70 + 1;
											v78 = v66[v70];
											v76[v78[2]] = v78[3];
											v70 = v70 + 1;
											v78 = v66[v70];
											v954 = v78[2];
											v76[v954] = v76[v954](v76[v954 + 1]);
											v70 = v70 + 1;
											v78 = v66[v70];
											v76[v78[2]] = v62[v78[3]];
											v70 = v70 + 1;
											v78 = v66[v70];
											v76[v78[2]] = v76[v78[3]][v78[4]];
											v70 = v70 + 1;
											v78 = v66[v70];
											v76[v78[2]] = v78[3];
											v70 = v70 + 1;
											v78 = v66[v70];
											v954 = v78[2];
											v76[v954] = v76[v954](v76[v954 + 1]);
											v70 = v70 + 1;
											v78 = v66[v70];
											v76[v78[2]] = v62[v78[3]];
											v70 = v70 + 1;
											v78 = v66[v70];
											v76[v78[2]] = v76[v78[3]][v78[4]];
											v70 = v70 + 1;
											v78 = v66[v70];
											v76[v78[2]] = v78[3];
											v70 = v70 + 1;
											v78 = v66[v70];
											v954 = v78[2];
											v76[v954] = v76[v954](v76[v954 + 1]);
											v70 = v70 + 1;
											v78 = v66[v70];
											v76[v78[2]] = v62[v78[3]];
											v70 = v70 + 1;
											v78 = v66[v70];
											v76[v78[2]] = v76[v78[3]][v78[4]];
											v70 = v70 + 1;
											v78 = v66[v70];
											v76[v78[2]][v78[3]] = v76[v78[4]];
											v70 = v70 + 1;
											v78 = v66[v70];
											v76[v78[2]] = v62[v78[3]];
											v70 = v70 + 1;
											v78 = v66[v70];
											v76[v78[2]] = v76[v78[3]][v78[4]];
											v70 = v70 + 1;
											v78 = v66[v70];
											v76[v78[2]] = v76[v78[3]][v78[4]];
											v70 = v70 + 1;
											v78 = v66[v70];
											v76[v78[2]][v78[3]] = v76[v78[4]];
											v70 = v70 + 1;
											v78 = v66[v70];
											v76[v78[2]][v78[3]] = v76[v78[4]];
											v70 = v70 + 1;
											v78 = v66[v70];
											v76[v78[2]][v78[3]] = v78[4];
											v70 = v70 + 1;
											v78 = v66[v70];
											v76[v78[2]] = v62[v78[3]];
											v70 = v70 + 1;
											v78 = v66[v70];
											v76[v78[2]] = v76[v78[3]][v78[4]];
											v70 = v70 + 1;
											v78 = v66[v70];
											v76[v78[2]] = v78[3];
											v70 = v70 + 1;
											v78 = v66[v70];
											v76[v78[2]] = v78[3];
											v70 = v70 + 1;
											v78 = v66[v70];
											v76[v78[2]] = v78[3];
											v70 = v70 + 1;
											v78 = v66[v70];
											v954 = v78[2];
											v76[v954] = v76[v954](v13(v76, v954 + 1, v78[3]));
											v70 = v70 + 1;
											v78 = v66[v70];
											v76[v78[2]][v78[3]] = v76[v78[4]];
											v70 = v70 + 1;
											v78 = v66[v70];
											v76[v78[2]][v78[3]] = v78[4];
											v70 = v70 + 1;
											v78 = v66[v70];
											v76[v78[2]] = v62[v78[3]];
											v70 = v70 + 1;
											v78 = v66[v70];
											v76[v78[2]] = v76[v78[3]][v78[4]];
											v70 = v70 + 1;
											v78 = v66[v70];
											v76[v78[2]] = v78[3];
											v70 = v70 + 1;
											v78 = v66[v70];
											v76[v78[2]] = v78[3];
											v70 = v70 + 1;
											v78 = v66[v70];
											v76[v78[2]] = v78[3];
											v70 = v70 + 1;
											v78 = v66[v70];
											v76[v78[2]] = v78[3];
											v70 = v70 + 1;
											v78 = v66[v70];
											v954 = v78[2];
											v76[v954] = v76[v954](v13(v76, v954 + 1, v78[3]));
											v70 = v70 + 1;
											v78 = v66[v70];
											v76[v78[2]][v78[3]] = v76[v78[4]];
											v70 = v70 + 1;
											v78 = v66[v70];
											v76[v78[2]] = v62[v78[3]];
											v70 = v70 + 1;
											v78 = v66[v70];
											v76[v78[2]] = v76[v78[3]][v78[4]];
											v70 = v70 + 1;
											v78 = v66[v70];
											v76[v78[2]] = v78[3];
											v70 = v70 + 1;
											v78 = v66[v70];
											v76[v78[2]] = v78[3];
											v70 = v70 + 1;
											v78 = v66[v70];
											v76[v78[2]] = v78[3];
											v70 = v70 + 1;
											v78 = v66[v70];
											v76[v78[2]] = v78[3];
											v70 = v70 + 1;
											v78 = v66[v70];
											v954 = v78[2];
											v76[v954] = v76[v954](v13(v76, v954 + 1, v78[3]));
											v70 = v70 + 1;
											v78 = v66[v70];
											v76[v78[2]][v78[3]] = v76[v78[4]];
											v70 = v70 + 1;
											v78 = v66[v70];
											v76[v78[2]] = v62[v78[3]];
											v70 = v70 + 1;
											v78 = v66[v70];
											v76[v78[2]] = v76[v78[3]][v78[4]];
											v70 = v70 + 1;
											v78 = v66[v70];
											v76[v78[2]] = v78[3];
											v70 = v70 + 1;
											v78 = v66[v70];
											v76[v78[2]] = v78[3];
											v70 = v70 + 1;
											v78 = v66[v70];
											v76[v78[2]] = v78[3];
											v70 = v70 + 1;
											v78 = v66[v70];
											v954 = v78[2];
											v76[v954] = v76[v954](v13(v76, v954 + 1, v78[3]));
											v70 = v70 + 1;
											v78 = v66[v70];
											v76[v78[2]] = v62[v78[3]];
											v70 = v70 + 1;
											v78 = v66[v70];
											v76[v78[2]] = v76[v78[3]][v78[4]];
											v70 = v70 + 1;
											v78 = v66[v70];
											v76[v78[2]] = v78[3];
											v70 = v70 + 1;
											v78 = v66[v70];
											v954 = v78[2];
											v76[v954] = v76[v954](v76[v954 + 1]);
											v70 = v70 + 1;
											v78 = v66[v70];
											v76[v78[2]] = v62[v78[3]];
											v70 = v70 + 1;
											v78 = v66[v70];
											v76[v78[2]] = v76[v78[3]][v78[4]];
											v70 = v70 + 1;
											v78 = v66[v70];
											v76[v78[2]] = v78[3];
											v70 = v70 + 1;
											v78 = v66[v70];
											v954 = v78[2];
											v76[v954] = v76[v954](v76[v954 + 1]);
											v70 = v70 + 1;
											v78 = v66[v70];
											v76[v78[2]] = v62[v78[3]];
											v70 = v70 + 1;
											v78 = v66[v70];
											v76[v78[2]] = v76[v78[3]][v78[4]];
											v70 = v70 + 1;
											v78 = v66[v70];
											v76[v78[2]] = v78[3];
											v70 = v70 + 1;
											v78 = v66[v70];
											v954 = v78[2];
											v76[v954] = v76[v954](v76[v954 + 1]);
											v70 = v70 + 1;
											v78 = v66[v70];
											v76[v78[2]] = v62[v78[3]];
											v70 = v70 + 1;
											v78 = v66[v70];
											v76[v78[2]] = v76[v78[3]][v78[4]];
											v70 = v70 + 1;
											v78 = v66[v70];
											v76[v78[2]] = v78[3];
											v70 = v70 + 1;
											v78 = v66[v70];
											v954 = v78[2];
											v76[v954] = v76[v954](v76[v954 + 1]);
										end
									elseif (v79 <= 129) then
										if (v79 <= 127) then
											local v291 = 0;
											local v292;
											local v293;
											while true do
												if (v291 == 0) then
													v292 = nil;
													v293 = nil;
													v76[v78[2]] = v76[v78[3]][v78[4]];
													v70 = v70 + 1;
													v291 = 1;
												end
												if (v291 == 6) then
													v293 = v78[2];
													v76[v293] = v76[v293](v13(v76, v293 + 1, v78[3]));
													v70 = v70 + 1;
													v78 = v66[v70];
													v291 = 7;
												end
												if (v291 == 4) then
													v292 = v76[v78[3]];
													v76[v293 + 1] = v292;
													v76[v293] = v292[v78[4]];
													v70 = v70 + 1;
													v291 = 5;
												end
												if (v291 == 2) then
													v293 = v78[2];
													v76[v293](v76[v293 + 1]);
													v70 = v70 + 1;
													v78 = v66[v70];
													v291 = 3;
												end
												if (v291 == 8) then
													v70 = v70 + 1;
													v78 = v66[v70];
													v76[v78[2]] = v78[3] ~= 0;
													v70 = v70 + 1;
													v291 = 9;
												end
												if (v291 == 9) then
													v78 = v66[v70];
													v76[v78[2]] = v78[3];
													break;
												end
												if (v291 == 7) then
													v293 = v78[2];
													v292 = v76[v78[3]];
													v76[v293 + 1] = v292;
													v76[v293] = v292[v78[4]];
													v291 = 8;
												end
												if (v291 == 1) then
													v78 = v66[v70];
													v76[v78[2]] = v78[3];
													v70 = v70 + 1;
													v78 = v66[v70];
													v291 = 2;
												end
												if (v291 == 5) then
													v78 = v66[v70];
													v76[v78[2]] = v78[3];
													v70 = v70 + 1;
													v78 = v66[v70];
													v291 = 6;
												end
												if (v291 == 3) then
													v76[v78[2]] = v62[v78[3]];
													v70 = v70 + 1;
													v78 = v66[v70];
													v293 = v78[2];
													v291 = 4;
												end
											end
										elseif (v79 > 128) then
											v76[v78[2]]();
										else
											local v965 = 0;
											local v966;
											local v967;
											while true do
												if (v965 == 20) then
													v76[v78[2]] = v78[3];
													v70 = v70 + 1;
													v78 = v66[v70];
													v76[v78[2]] = {};
													v70 = v70 + 1;
													v78 = v66[v70];
													v76[v78[2]] = v62[v78[3]];
													v70 = v70 + 1;
													v78 = v66[v70];
													v76[v78[2]] = v76[v78[3]][v78[4]];
													v965 = 21;
												end
												if (18 == v965) then
													v78 = v66[v70];
													v76[v78[2]][v78[3]] = v76[v78[4]];
													v70 = v70 + 1;
													v78 = v66[v70];
													v967 = v78[2];
													v76[v967](v13(v76, v967 + 1, v78[3]));
													v70 = v70 + 1;
													v78 = v66[v70];
													v76[v78[2]] = v76[v78[3]][v78[4]];
													v70 = v70 + 1;
													v965 = 19;
												end
												if (16 == v965) then
													v967 = v78[2];
													v966 = v76[v78[3]];
													v76[v967 + 1] = v966;
													v76[v967] = v966[v78[4]];
													v70 = v70 + 1;
													v78 = v66[v70];
													v76[v78[2]] = v78[3];
													v70 = v70 + 1;
													v78 = v66[v70];
													v76[v78[2]] = {};
													v965 = 17;
												end
												if (5 == v965) then
													v70 = v70 + 1;
													v78 = v66[v70];
													v76[v78[2]] = v76[v78[3]] + v76[v78[4]];
													v70 = v70 + 1;
													v78 = v66[v70];
													v76[v78[2]][v78[3]] = v76[v78[4]];
													v70 = v70 + 1;
													v78 = v66[v70];
													v76[v78[2]] = v76[v78[3]][v78[4]];
													v70 = v70 + 1;
													v965 = 6;
												end
												if (v965 == 3) then
													v76[v78[2]] = v76[v78[3]][v78[4]];
													v70 = v70 + 1;
													v78 = v66[v70];
													v76[v78[2]] = v62[v78[3]];
													v70 = v70 + 1;
													v78 = v66[v70];
													v76[v78[2]] = v76[v78[3]][v78[4]];
													v70 = v70 + 1;
													v78 = v66[v70];
													v76[v78[2]] = v78[3];
													v965 = 4;
												end
												if (v965 == 19) then
													v78 = v66[v70];
													v76[v78[2]] = v76[v78[3]][v78[4]];
													v70 = v70 + 1;
													v78 = v66[v70];
													v967 = v78[2];
													v966 = v76[v78[3]];
													v76[v967 + 1] = v966;
													v76[v967] = v966[v78[4]];
													v70 = v70 + 1;
													v78 = v66[v70];
													v965 = 20;
												end
												if (v965 == 21) then
													v70 = v70 + 1;
													v78 = v66[v70];
													v76[v78[2]] = v76[v78[3]][v78[4]];
													v70 = v70 + 1;
													v78 = v66[v70];
													v76[v78[2]][v78[3]] = v76[v78[4]];
													v70 = v70 + 1;
													v78 = v66[v70];
													v967 = v78[2];
													v76[v967](v13(v76, v967 + 1, v78[3]));
													v965 = 22;
												end
												if (v965 == 13) then
													v70 = v70 + 1;
													v78 = v66[v70];
													v76[v78[2]] = v78[3];
													v70 = v70 + 1;
													v78 = v66[v70];
													v76[v78[2]] = {};
													v70 = v70 + 1;
													v78 = v66[v70];
													v76[v78[2]] = v62[v78[3]];
													v70 = v70 + 1;
													v965 = 14;
												end
												if (v965 == 7) then
													v967 = v78[2];
													v76[v967] = v76[v967](v13(v76, v967 + 1, v78[3]));
													v70 = v70 + 1;
													v78 = v66[v70];
													v967 = v78[2];
													v966 = v76[v78[3]];
													v76[v967 + 1] = v966;
													v76[v967] = v966[v78[4]];
													v70 = v70 + 1;
													v78 = v66[v70];
													v965 = 8;
												end
												if (v965 == 17) then
													v70 = v70 + 1;
													v78 = v66[v70];
													v76[v78[2]] = v62[v78[3]];
													v70 = v70 + 1;
													v78 = v66[v70];
													v76[v78[2]] = v76[v78[3]][v78[4]];
													v70 = v70 + 1;
													v78 = v66[v70];
													v76[v78[2]] = v76[v78[3]][v78[4]];
													v70 = v70 + 1;
													v965 = 18;
												end
												if (v965 == 15) then
													v967 = v78[2];
													v76[v967](v13(v76, v967 + 1, v78[3]));
													v70 = v70 + 1;
													v78 = v66[v70];
													v76[v78[2]] = v76[v78[3]][v78[4]];
													v70 = v70 + 1;
													v78 = v66[v70];
													v76[v78[2]] = v76[v78[3]][v78[4]];
													v70 = v70 + 1;
													v78 = v66[v70];
													v965 = 16;
												end
												if (v965 == 9) then
													v76[v78[2]] = v76[v78[3]][v78[4]];
													v70 = v70 + 1;
													v78 = v66[v70];
													v76[v78[2]] = v76[v78[3]][v78[4]];
													v70 = v70 + 1;
													v78 = v66[v70];
													v76[v78[2]] = v76[v78[3]][v78[4]];
													v70 = v70 + 1;
													v78 = v66[v70];
													v76[v78[2]] = v76[v78[3]][v78[4]];
													v965 = 10;
												end
												if (v965 == 4) then
													v70 = v70 + 1;
													v78 = v66[v70];
													v76[v78[2]] = v78[3];
													v70 = v70 + 1;
													v78 = v66[v70];
													v76[v78[2]] = v78[3];
													v70 = v70 + 1;
													v78 = v66[v70];
													v967 = v78[2];
													v76[v967] = v76[v967](v13(v76, v967 + 1, v78[3]));
													v965 = 5;
												end
												if (v965 == 25) then
													v70 = v70 + 1;
													v78 = v66[v70];
													v967 = v78[2];
													v76[v967](v13(v76, v967 + 1, v78[3]));
													v70 = v70 + 1;
													v78 = v66[v70];
													v76[v78[2]] = v76[v78[3]][v78[4]];
													v70 = v70 + 1;
													v78 = v66[v70];
													v76[v78[2]] = v76[v78[3]][v78[4]];
													v965 = 26;
												end
												if (v965 == 2) then
													v78 = v66[v70];
													v76[v78[2]] = v76[v78[3]][v78[4]];
													v70 = v70 + 1;
													v78 = v66[v70];
													v76[v78[2]] = v76[v78[3]][v78[4]];
													v70 = v70 + 1;
													v78 = v66[v70];
													v76[v78[2]] = v76[v78[3]][v78[4]];
													v70 = v70 + 1;
													v78 = v66[v70];
													v965 = 3;
												end
												if (v965 == 0) then
													v966 = nil;
													v967 = nil;
													v967 = v78[2];
													v966 = v76[v78[3]];
													v76[v967 + 1] = v966;
													v76[v967] = v966[v78[4]];
													v70 = v70 + 1;
													v78 = v66[v70];
													v76[v78[2]] = v78[3];
													v70 = v70 + 1;
													v965 = 1;
												end
												if (v965 == 23) then
													v76[v967 + 1] = v966;
													v76[v967] = v966[v78[4]];
													v70 = v70 + 1;
													v78 = v66[v70];
													v76[v78[2]] = v78[3];
													v70 = v70 + 1;
													v78 = v66[v70];
													v76[v78[2]] = {};
													v70 = v70 + 1;
													v78 = v66[v70];
													v965 = 24;
												end
												if (v965 == 11) then
													v78 = v66[v70];
													v76[v78[2]] = v76[v78[3]][v78[4]];
													v70 = v70 + 1;
													v78 = v66[v70];
													v76[v78[2]] = v76[v78[3]] + v76[v78[4]];
													v70 = v70 + 1;
													v78 = v66[v70];
													v76[v78[2]][v78[3]] = v76[v78[4]];
													v70 = v70 + 1;
													v78 = v66[v70];
													v965 = 12;
												end
												if (v965 == 26) then
													v70 = v70 + 1;
													v78 = v66[v70];
													v76[v78[2]] = v76[v78[3]][v78[4]];
													v70 = v70 + 1;
													v78 = v66[v70];
													v76[v78[2]] = v76[v78[3]][v78[4]];
													v70 = v70 + 1;
													v78 = v66[v70];
													if (v76[v78[2]] <= v78[4]) then
														v70 = v70 + 1;
													else
														v70 = v78[3];
													end
													break;
												end
												if (v965 == 8) then
													v76[v78[2]] = v78[3];
													v70 = v70 + 1;
													v78 = v66[v70];
													v967 = v78[2];
													v76[v967] = v76[v967](v13(v76, v967 + 1, v78[3]));
													v70 = v70 + 1;
													v78 = v66[v70];
													v76[v78[2]] = v76[v78[3]][v78[4]];
													v70 = v70 + 1;
													v78 = v66[v70];
													v965 = 9;
												end
												if (v965 == 24) then
													v76[v78[2]] = v62[v78[3]];
													v70 = v70 + 1;
													v78 = v66[v70];
													v76[v78[2]] = v76[v78[3]][v78[4]];
													v70 = v70 + 1;
													v78 = v66[v70];
													v76[v78[2]] = v76[v78[3]][v78[4]];
													v70 = v70 + 1;
													v78 = v66[v70];
													v76[v78[2]][v78[3]] = v76[v78[4]];
													v965 = 25;
												end
												if (v965 == 22) then
													v70 = v70 + 1;
													v78 = v66[v70];
													v76[v78[2]] = v76[v78[3]][v78[4]];
													v70 = v70 + 1;
													v78 = v66[v70];
													v76[v78[2]] = v76[v78[3]][v78[4]];
													v70 = v70 + 1;
													v78 = v66[v70];
													v967 = v78[2];
													v966 = v76[v78[3]];
													v965 = 23;
												end
												if (6 == v965) then
													v78 = v66[v70];
													v967 = v78[2];
													v966 = v76[v78[3]];
													v76[v967 + 1] = v966;
													v76[v967] = v966[v78[4]];
													v70 = v70 + 1;
													v78 = v66[v70];
													v76[v78[2]] = v78[3];
													v70 = v70 + 1;
													v78 = v66[v70];
													v965 = 7;
												end
												if (v965 == 10) then
													v70 = v70 + 1;
													v78 = v66[v70];
													v76[v78[2]] = v76[v78[3]][v78[4]];
													v70 = v70 + 1;
													v78 = v66[v70];
													v76[v78[2]] = v76[v78[3]][v78[4]];
													v70 = v70 + 1;
													v78 = v66[v70];
													v76[v78[2]] = v76[v78[3]][v78[4]];
													v70 = v70 + 1;
													v965 = 11;
												end
												if (v965 == 1) then
													v78 = v66[v70];
													v967 = v78[2];
													v76[v967] = v76[v967](v13(v76, v967 + 1, v78[3]));
													v70 = v70 + 1;
													v78 = v66[v70];
													v76[v78[2]] = v76[v78[3]][v78[4]];
													v70 = v70 + 1;
													v78 = v66[v70];
													v76[v78[2]] = v76[v78[3]][v78[4]];
													v70 = v70 + 1;
													v965 = 2;
												end
												if (12 == v965) then
													v76[v78[2]] = v76[v78[3]][v78[4]];
													v70 = v70 + 1;
													v78 = v66[v70];
													v76[v78[2]] = v76[v78[3]][v78[4]];
													v70 = v70 + 1;
													v78 = v66[v70];
													v967 = v78[2];
													v966 = v76[v78[3]];
													v76[v967 + 1] = v966;
													v76[v967] = v966[v78[4]];
													v965 = 13;
												end
												if (v965 == 14) then
													v78 = v66[v70];
													v76[v78[2]] = v76[v78[3]][v78[4]];
													v70 = v70 + 1;
													v78 = v66[v70];
													v76[v78[2]] = v76[v78[3]][v78[4]];
													v70 = v70 + 1;
													v78 = v66[v70];
													v76[v78[2]][v78[3]] = v76[v78[4]];
													v70 = v70 + 1;
													v78 = v66[v70];
													v965 = 15;
												end
											end
										end
									elseif (v79 <= 130) then
										local v294 = 0;
										local v295;
										local v296;
										while true do
											if (v294 == 3) then
												v76[v78[2]] = v78[3] ~= 0;
												v70 = v70 + 1;
												v78 = v66[v70];
												v76[v78[2]] = v78[3];
												v70 = v70 + 1;
												v78 = v66[v70];
												v294 = 4;
											end
											if (v294 == 2) then
												v296 = v78[2];
												v295 = v76[v78[3]];
												v76[v296 + 1] = v295;
												v76[v296] = v295[v78[4]];
												v70 = v70 + 1;
												v78 = v66[v70];
												v294 = 3;
											end
											if (v294 == 4) then
												v76[v78[2]] = v78[3] ~= 0;
												v70 = v70 + 1;
												v78 = v66[v70];
												v76[v78[2]] = v62[v78[3]];
												v70 = v70 + 1;
												v78 = v66[v70];
												v294 = 5;
											end
											if (v294 == 1) then
												v70 = v70 + 1;
												v78 = v66[v70];
												v296 = v78[2];
												v76[v296](v76[v296 + 1]);
												v70 = v70 + 1;
												v78 = v66[v70];
												v294 = 2;
											end
											if (v294 == 5) then
												v296 = v78[2];
												v76[v296](v13(v76, v296 + 1, v78[3]));
												v70 = v70 + 1;
												v78 = v66[v70];
												v70 = v78[3];
												break;
											end
											if (v294 == 0) then
												v295 = nil;
												v296 = nil;
												v76[v78[2]] = v76[v78[3]][v78[4]];
												v70 = v70 + 1;
												v78 = v66[v70];
												v76[v78[2]] = v78[3];
												v294 = 1;
											end
										end
									elseif (v79 > 131) then
										local v968 = 0;
										local v969;
										while true do
											if (5 == v968) then
												v70 = v70 + 1;
												v78 = v66[v70];
												v76[v78[2]][v78[3]] = v76[v78[4]];
												v968 = 6;
											end
											if (v968 == 6) then
												v70 = v70 + 1;
												v78 = v66[v70];
												v76[v78[2]][v78[3]] = v78[4];
												v968 = 7;
											end
											if (v968 == 3) then
												v78 = v66[v70];
												v76[v78[2]] = v78[3];
												v70 = v70 + 1;
												v968 = 4;
											end
											if (v968 == 1) then
												v78 = v66[v70];
												v76[v78[2]] = v78[3];
												v70 = v70 + 1;
												v968 = 2;
											end
											if (v968 == 2) then
												v78 = v66[v70];
												v76[v78[2]] = v78[3];
												v70 = v70 + 1;
												v968 = 3;
											end
											if (v968 == 4) then
												v78 = v66[v70];
												v969 = v78[2];
												v76[v969] = v76[v969](v13(v76, v969 + 1, v78[3]));
												v968 = 5;
											end
											if (7 == v968) then
												v70 = v70 + 1;
												v78 = v66[v70];
												v76[v78[2]] = v78[3];
												break;
											end
											if (v968 == 0) then
												v969 = nil;
												v76[v78[2]] = v76[v78[3]][v78[4]];
												v70 = v70 + 1;
												v968 = 1;
											end
										end
									else
										local v970;
										local v971;
										v76[v78[2]] = v76[v78[3]][v78[4]];
										v70 = v70 + 1;
										v78 = v66[v70];
										v971 = v78[2];
										v970 = v76[v78[3]];
										v76[v971 + 1] = v970;
										v76[v971] = v970[v78[4]];
										v70 = v70 + 1;
										v78 = v66[v70];
										v76[v78[2]] = v78[3];
										v70 = v70 + 1;
										v78 = v66[v70];
										v971 = v78[2];
										v76[v971] = v76[v971](v13(v76, v971 + 1, v78[3]));
										v70 = v70 + 1;
										v78 = v66[v70];
										if v76[v78[2]] then
											v70 = v70 + 1;
										else
											v70 = v78[3];
										end
									end
								elseif (v79 <= 138) then
									if (v79 <= 135) then
										if (v79 <= 133) then
											local v297;
											v76[v78[2]] = v76[v78[3]][v78[4]];
											v70 = v70 + 1;
											v78 = v66[v70];
											v76[v78[2]] = v62[v78[3]];
											v70 = v70 + 1;
											v78 = v66[v70];
											v76[v78[2]] = v76[v78[3]][v78[4]];
											v70 = v70 + 1;
											v78 = v66[v70];
											v76[v78[2]] = v78[3];
											v70 = v70 + 1;
											v78 = v66[v70];
											v76[v78[2]] = v78[3];
											v70 = v70 + 1;
											v78 = v66[v70];
											v76[v78[2]] = v78[3];
											v70 = v70 + 1;
											v78 = v66[v70];
											v297 = v78[2];
											v76[v297] = v76[v297](v13(v76, v297 + 1, v78[3]));
											v70 = v70 + 1;
											v78 = v66[v70];
											v76[v78[2]][v78[3]] = v76[v78[4]];
											v70 = v70 + 1;
											v78 = v66[v70];
											v76[v78[2]] = v76[v78[3]][v78[4]];
											v70 = v70 + 1;
											v78 = v66[v70];
											v76[v78[2]] = v76[v78[3]][v78[4]];
										elseif (v79 > 134) then
											local v981;
											local v982;
											v76[v78[2]] = v76[v78[3]][v78[4]];
											v70 = v70 + 1;
											v78 = v66[v70];
											v76[v78[2]] = v61[v78[3]];
											v70 = v70 + 1;
											v78 = v66[v70];
											v76[v78[2]] = v76[v78[3]][v78[4]];
											v70 = v70 + 1;
											v78 = v66[v70];
											v76[v78[2]] = v76[v78[3]][v76[v78[4]]];
											v70 = v70 + 1;
											v78 = v66[v70];
											v76[v78[2]] = v76[v78[3]][v78[4]];
											v70 = v70 + 1;
											v78 = v66[v70];
											v982 = v78[2];
											v981 = v76[v78[3]];
											v76[v982 + 1] = v981;
											v76[v982] = v981[v78[4]];
											v70 = v70 + 1;
											v78 = v66[v70];
											v76[v78[2]] = v78[3];
											v70 = v70 + 1;
											v78 = v66[v70];
											v982 = v78[2];
											v76[v982] = v76[v982](v13(v76, v982 + 1, v78[3]));
											v70 = v70 + 1;
											v78 = v66[v70];
											if v76[v78[2]] then
												v70 = v70 + 1;
											else
												v70 = v78[3];
											end
										else
											local v994;
											local v995;
											local v994, v996;
											local v997;
											local v998;
											v76[v78[2]] = v61[v78[3]];
											v70 = v70 + 1;
											v78 = v66[v70];
											v998 = v78[2];
											v997 = v76[v78[3]];
											v76[v998 + 1] = v997;
											v76[v998] = v997[v78[4]];
											v70 = v70 + 1;
											v78 = v66[v70];
											v998 = v78[2];
											v994, v996 = v69(v76[v998](v76[v998 + 1]));
											v71 = (v996 + v998) - 1;
											v995 = 0;
											for v1639 = v998, v71 do
												v995 = v995 + 1;
												v76[v1639] = v994[v995];
											end
											v70 = v70 + 1;
											v78 = v66[v70];
											v998 = v78[2];
											v994 = {v76[v998](v13(v76, v998 + 1, v71))};
											v995 = 0;
											for v1642 = v998, v78[4] do
												v995 = v995 + 1;
												v76[v1642] = v994[v995];
											end
											v70 = v70 + 1;
											v78 = v66[v70];
											v70 = v78[3];
										end
									elseif (v79 <= 136) then
										local v307;
										v76[v78[2]] = v78[3];
										v70 = v70 + 1;
										v78 = v66[v70];
										v307 = v78[2];
										v76[v307](v76[v307 + 1]);
										v70 = v70 + 1;
										v78 = v66[v70];
										v76[v78[2]] = v62[v78[3]];
										v70 = v70 + 1;
										v78 = v66[v70];
										v76[v78[2]] = v76[v78[3]][v78[4]];
										v70 = v70 + 1;
										v78 = v66[v70];
										v76[v78[2]] = v78[3];
										v70 = v70 + 1;
										v78 = v66[v70];
										v307 = v78[2];
										v76[v307](v76[v307 + 1]);
										v70 = v70 + 1;
										v78 = v66[v70];
										v76[v78[2]] = v76[v78[3]][v78[4]];
										v70 = v70 + 1;
										v78 = v66[v70];
										v76[v78[2]] = v76[v78[3]][v78[4]];
										v70 = v70 + 1;
										v78 = v66[v70];
										v76[v78[2]] = v62[v78[3]];
										v70 = v70 + 1;
										v78 = v66[v70];
										v76[v78[2]] = v76[v78[3]][v78[4]];
									elseif (v79 == 137) then
										local v1008;
										v76[v78[2]] = v78[3];
										v70 = v70 + 1;
										v78 = v66[v70];
										v76[v78[2]] = {};
										v70 = v70 + 1;
										v78 = v66[v70];
										v76[v78[2]] = v62[v78[3]];
										v70 = v70 + 1;
										v78 = v66[v70];
										v76[v78[2]] = v76[v78[3]][v78[4]];
										v70 = v70 + 1;
										v78 = v66[v70];
										v76[v78[2]] = v76[v78[3]][v78[4]];
										v70 = v70 + 1;
										v78 = v66[v70];
										v76[v78[2]][v78[3]] = v76[v78[4]];
										v70 = v70 + 1;
										v78 = v66[v70];
										v1008 = v78[2];
										v76[v1008](v13(v76, v1008 + 1, v78[3]));
										v70 = v70 + 1;
										v78 = v66[v70];
										v76[v78[2]] = v76[v78[3]];
										v70 = v70 + 1;
										v78 = v66[v70];
										v76[v78[2]]();
										v70 = v70 + 1;
										v78 = v66[v70];
										v76[v78[2]] = v78[3];
									else
										local v1018 = 0;
										while true do
											if (v1018 == 2) then
												v78 = v66[v70];
												v76[v78[2]] = v76[v78[3]][v78[4]];
												v70 = v70 + 1;
												v78 = v66[v70];
												v1018 = 3;
											end
											if (v1018 == 1) then
												v70 = v70 + 1;
												v78 = v66[v70];
												v76[v78[2]][v78[3]] = v76[v78[4]];
												v70 = v70 + 1;
												v1018 = 2;
											end
											if (v1018 == 4) then
												v70 = v70 + 1;
												v78 = v66[v70];
												v76[v78[2]] = v78[3];
												break;
											end
											if (v1018 == 0) then
												v76[v78[2]] = v76[v78[3]][v78[4]];
												v70 = v70 + 1;
												v78 = v66[v70];
												v76[v78[2]] = v76[v78[3]][v78[4]];
												v1018 = 1;
											end
											if (v1018 == 3) then
												v76[v78[2]] = v76[v78[3]][v78[4]];
												v70 = v70 + 1;
												v78 = v66[v70];
												v76[v78[2]][v78[3]] = v76[v78[4]];
												v1018 = 4;
											end
										end
									end
								elseif (v79 <= 141) then
									if (v79 <= 139) then
										local v314;
										local v315;
										v76[v78[2]] = v76[v78[3]][v78[4]];
										v70 = v70 + 1;
										v78 = v66[v70];
										v76[v78[2]]();
										v70 = v70 + 1;
										v78 = v66[v70];
										v76[v78[2]] = v62[v78[3]];
										v70 = v70 + 1;
										v78 = v66[v70];
										v76[v78[2]] = v61[v78[3]];
										v70 = v70 + 1;
										v78 = v66[v70];
										v76[v78[2]] = v76[v78[3]][v78[4]];
										v70 = v70 + 1;
										v78 = v66[v70];
										v315 = v78[2];
										v314 = v76[v78[3]];
										v76[v315 + 1] = v314;
										v76[v315] = v314[v78[4]];
										v70 = v70 + 1;
										v78 = v66[v70];
										v76[v78[2]] = v78[3];
										v70 = v70 + 1;
										v78 = v66[v70];
										v315 = v78[2];
										v76[v315] = v76[v315](v13(v76, v315 + 1, v78[3]));
										v70 = v70 + 1;
										v78 = v66[v70];
										v76[v78[2]] = v76[v78[3]][v78[4]];
										v70 = v70 + 1;
										v78 = v66[v70];
										v76[v78[2]] = v76[v78[3]][v78[4]];
										v70 = v70 + 1;
										v78 = v66[v70];
										v76[v78[2]] = v76[v78[3]][v78[4]];
										v70 = v70 + 1;
										v78 = v66[v70];
										v315 = v78[2];
										v76[v315](v76[v315 + 1]);
										v70 = v70 + 1;
										v78 = v66[v70];
										v76[v78[2]] = v78[3];
										v70 = v70 + 1;
										v78 = v66[v70];
										v70 = v78[3];
									elseif (v79 > 140) then
										local v1019 = v78[2];
										local v1020 = v76[v1019];
										for v1645 = v1019 + 1, v71 do
											v7(v1020, v76[v1645]);
										end
									elseif not v76[v78[2]] then
										v70 = v70 + 1;
									else
										v70 = v78[3];
									end
								elseif (v79 <= 142) then
									local v327;
									local v328;
									v76[v78[2]] = v76[v78[3]][v78[4]];
									v70 = v70 + 1;
									v78 = v66[v70];
									v76[v78[2]]();
									v70 = v70 + 1;
									v78 = v66[v70];
									v76[v78[2]] = v76[v78[3]][v78[4]];
									v70 = v70 + 1;
									v78 = v66[v70];
									v328 = v78[2];
									v327 = v76[v78[3]];
									v76[v328 + 1] = v327;
									v76[v328] = v327[v78[4]];
									v70 = v70 + 1;
									v78 = v66[v70];
									v76[v78[2]] = v78[3];
									v70 = v70 + 1;
									v78 = v66[v70];
									v328 = v78[2];
									v76[v328] = v76[v328](v13(v76, v328 + 1, v78[3]));
									v70 = v70 + 1;
									v78 = v66[v70];
									v76[v78[2]] = v76[v78[3]][v78[4]];
									v70 = v70 + 1;
									v78 = v66[v70];
									v76[v78[2]] = v76[v78[3]][v78[4]];
									v70 = v70 + 1;
									v78 = v66[v70];
									v76[v78[2]] = v76[v78[3]][v78[4]];
									v70 = v70 + 1;
									v78 = v66[v70];
									v76[v78[2]] = v76[v78[3]][v78[4]];
								elseif (v79 == 143) then
									local v1021 = 0;
									local v1022;
									while true do
										if (v1021 == 0) then
											v1022 = nil;
											v76[v78[2]] = v78[3] ~= 0;
											v70 = v70 + 1;
											v78 = v66[v70];
											v1021 = 1;
										end
										if (v1021 == 6) then
											v70 = v70 + 1;
											v78 = v66[v70];
											v1022 = v78[2];
											v76[v1022](v76[v1022 + 1]);
											v1021 = 7;
										end
										if (v1021 == 3) then
											v78 = v66[v70];
											v1022 = v78[2];
											v76[v1022](v13(v76, v1022 + 1, v78[3]));
											v70 = v70 + 1;
											v1021 = 4;
										end
										if (v1021 == 5) then
											v76[v78[2]] = v76[v78[3]][v78[4]];
											v70 = v70 + 1;
											v78 = v66[v70];
											v76[v78[2]] = v78[3];
											v1021 = 6;
										end
										if (v1021 == 2) then
											v70 = v70 + 1;
											v78 = v66[v70];
											v76[v78[2]] = v62[v78[3]];
											v70 = v70 + 1;
											v1021 = 3;
										end
										if (v1021 == 1) then
											v76[v78[2]] = v78[3];
											v70 = v70 + 1;
											v78 = v66[v70];
											v76[v78[2]] = v78[3] ~= 0;
											v1021 = 2;
										end
										if (v1021 == 4) then
											v78 = v66[v70];
											v76[v78[2]] = v62[v78[3]];
											v70 = v70 + 1;
											v78 = v66[v70];
											v1021 = 5;
										end
										if (7 == v1021) then
											v70 = v70 + 1;
											v78 = v66[v70];
											v76[v78[2]] = v78[3];
											break;
										end
									end
								else
									local v1023;
									v76[v78[2]] = v76[v78[3]][v78[4]];
									v70 = v70 + 1;
									v78 = v66[v70];
									v76[v78[2]] = v76[v78[3]][v78[4]];
									v70 = v70 + 1;
									v78 = v66[v70];
									v76[v78[2]] = v62[v78[3]];
									v70 = v70 + 1;
									v78 = v66[v70];
									v76[v78[2]] = v76[v78[3]][v78[4]];
									v70 = v70 + 1;
									v78 = v66[v70];
									v76[v78[2]] = v78[3];
									v70 = v70 + 1;
									v78 = v66[v70];
									v76[v78[2]] = v78[3];
									v70 = v70 + 1;
									v78 = v66[v70];
									v76[v78[2]] = v78[3];
									v70 = v70 + 1;
									v78 = v66[v70];
									v1023 = v78[2];
									v76[v1023] = v76[v1023](v13(v76, v1023 + 1, v78[3]));
									v70 = v70 + 1;
									v78 = v66[v70];
									v76[v78[2]][v78[3]] = v76[v78[4]];
									v70 = v70 + 1;
									v78 = v66[v70];
									v70 = v78[3];
								end
							elseif (v79 <= 168) then
								if (v79 <= 156) then
									if (v79 <= 150) then
										if (v79 <= 147) then
											if (v79 <= 145) then
												do
													return v76[v78[2]];
												end
											elseif (v79 > 146) then
												if (v76[v78[2]] ~= v78[4]) then
													v70 = v70 + 1;
												else
													v70 = v78[3];
												end
											else
												local v1033;
												local v1034;
												v76[v78[2]] = v76[v78[3]][v78[4]];
												v70 = v70 + 1;
												v78 = v66[v70];
												v1034 = v78[2];
												v1033 = v76[v78[3]];
												v76[v1034 + 1] = v1033;
												v76[v1034] = v1033[v78[4]];
												v70 = v70 + 1;
												v78 = v66[v70];
												v76[v78[2]] = v78[3];
												v70 = v70 + 1;
												v78 = v66[v70];
												v1034 = v78[2];
												v76[v1034] = v76[v1034](v13(v76, v1034 + 1, v78[3]));
												v70 = v70 + 1;
												v78 = v66[v70];
												v1034 = v78[2];
												v1033 = v76[v78[3]];
												v76[v1034 + 1] = v1033;
												v76[v1034] = v1033[v78[4]];
												v70 = v70 + 1;
												v78 = v66[v70];
												v76[v78[2]] = v78[3];
												v70 = v70 + 1;
												v78 = v66[v70];
												v1034 = v78[2];
												v76[v1034] = v76[v1034](v13(v76, v1034 + 1, v78[3]));
												v70 = v70 + 1;
												v78 = v66[v70];
												v76[v78[2]] = v76[v78[3]][v78[4]];
												v70 = v70 + 1;
												v78 = v66[v70];
												v76[v78[2]] = v76[v78[3]][v78[4]];
												v70 = v70 + 1;
												v78 = v66[v70];
												v76[v78[2]] = v76[v78[3]][v78[4]];
											end
										elseif (v79 <= 148) then
											local v338;
											v76[v78[2]]();
											v70 = v70 + 1;
											v78 = v66[v70];
											v76[v78[2]] = v62[v78[3]];
											v70 = v70 + 1;
											v78 = v66[v70];
											v76[v78[2]] = v76[v78[3]][v78[4]];
											v70 = v70 + 1;
											v78 = v66[v70];
											v76[v78[2]] = v78[3];
											v70 = v70 + 1;
											v78 = v66[v70];
											v338 = v78[2];
											v76[v338](v76[v338 + 1]);
											v70 = v70 + 1;
											v78 = v66[v70];
											v76[v78[2]] = v78[3];
										elseif (v79 > 149) then
											local v1044 = 0;
											local v1045;
											while true do
												if (v1044 == 3) then
													v78 = v66[v70];
													v76[v78[2]] = v78[3];
													v70 = v70 + 1;
													v78 = v66[v70];
													v1045 = v78[2];
													v76[v1045] = v76[v1045](v13(v76, v1045 + 1, v78[3]));
													v1044 = 4;
												end
												if (1 == v1044) then
													v78 = v66[v70];
													v76[v78[2]] = v62[v78[3]];
													v70 = v70 + 1;
													v78 = v66[v70];
													v76[v78[2]] = v76[v78[3]][v78[4]];
													v70 = v70 + 1;
													v1044 = 2;
												end
												if (v1044 == 4) then
													v70 = v70 + 1;
													v78 = v66[v70];
													v76[v78[2]][v78[3]] = v76[v78[4]];
													v70 = v70 + 1;
													v78 = v66[v70];
													v76[v78[2]] = v62[v78[3]];
													v1044 = 5;
												end
												if (v1044 == 2) then
													v78 = v66[v70];
													v76[v78[2]] = v78[3];
													v70 = v70 + 1;
													v78 = v66[v70];
													v76[v78[2]] = v78[3];
													v70 = v70 + 1;
													v1044 = 3;
												end
												if (v1044 == 0) then
													v1045 = nil;
													v76[v78[2]] = v76[v78[3]][v78[4]];
													v70 = v70 + 1;
													v78 = v66[v70];
													v76[v78[2]] = v76[v78[3]][v78[4]];
													v70 = v70 + 1;
													v1044 = 1;
												end
												if (v1044 == 5) then
													v70 = v70 + 1;
													v78 = v66[v70];
													v76[v78[2]] = v76[v78[3]][v78[4]];
													v70 = v70 + 1;
													v78 = v66[v70];
													v76[v78[2]] = v78[3];
													v1044 = 6;
												end
												if (v1044 == 7) then
													v76[v78[2]] = v78[3];
													break;
												end
												if (v1044 == 6) then
													v70 = v70 + 1;
													v78 = v66[v70];
													v1045 = v78[2];
													v76[v1045](v76[v1045 + 1]);
													v70 = v70 + 1;
													v78 = v66[v70];
													v1044 = 7;
												end
											end
										else
											local v1046;
											local v1047;
											v1047 = v78[2];
											v1046 = v76[v78[3]];
											v76[v1047 + 1] = v1046;
											v76[v1047] = v1046[v78[4]];
											v70 = v70 + 1;
											v78 = v66[v70];
											v76[v78[2]] = v78[3];
											v70 = v70 + 1;
											v78 = v66[v70];
											v1047 = v78[2];
											v76[v1047] = v76[v1047](v13(v76, v1047 + 1, v78[3]));
											v70 = v70 + 1;
											v78 = v66[v70];
											v1047 = v78[2];
											v1046 = v76[v78[3]];
											v76[v1047 + 1] = v1046;
											v76[v1047] = v1046[v78[4]];
											v70 = v70 + 1;
											v78 = v66[v70];
											v76[v78[2]] = v78[3];
											v70 = v70 + 1;
											v78 = v66[v70];
											v1047 = v78[2];
											v76[v1047](v13(v76, v1047 + 1, v78[3]));
										end
									elseif (v79 <= 153) then
										if (v79 <= 151) then
											local v345;
											v76[v78[2]] = v62[v78[3]];
											v70 = v70 + 1;
											v78 = v66[v70];
											v76[v78[2]] = v76[v78[3]][v78[4]];
											v70 = v70 + 1;
											v78 = v66[v70];
											v76[v78[2]] = v78[3];
											v70 = v70 + 1;
											v78 = v66[v70];
											v345 = v78[2];
											v76[v345] = v76[v345](v76[v345 + 1]);
											v70 = v70 + 1;
											v78 = v66[v70];
											v76[v78[2]] = v62[v78[3]];
											v70 = v70 + 1;
											v78 = v66[v70];
											v76[v78[2]] = v76[v78[3]][v78[4]];
											v70 = v70 + 1;
											v78 = v66[v70];
											v76[v78[2]][v78[3]] = v76[v78[4]];
											v70 = v70 + 1;
											v78 = v66[v70];
											v76[v78[2]] = v62[v78[3]];
											v70 = v70 + 1;
											v78 = v66[v70];
											v76[v78[2]] = v76[v78[3]][v78[4]];
											v70 = v70 + 1;
											v78 = v66[v70];
											v76[v78[2]] = v76[v78[3]][v78[4]];
										elseif (v79 > 152) then
											local v1056;
											v76[v78[2]] = v76[v78[3]][v78[4]];
											v70 = v70 + 1;
											v78 = v66[v70];
											v76[v78[2]] = v78[3];
											v70 = v70 + 1;
											v78 = v66[v70];
											v1056 = v78[2];
											v76[v1056](v76[v1056 + 1]);
											v70 = v70 + 1;
											v78 = v66[v70];
											v76[v78[2]] = v62[v78[3]];
											v70 = v70 + 1;
											v78 = v66[v70];
											v76[v78[2]] = v76[v78[3]][v78[4]];
											v70 = v70 + 1;
											v78 = v66[v70];
											v1056 = v78[2];
											v76[v1056](v76[v1056 + 1]);
											v70 = v70 + 1;
											v78 = v66[v70];
											v76[v78[2]] = v78[3];
											v70 = v70 + 1;
											v78 = v66[v70];
											v70 = v78[3];
										else
											v76[v78[2]] = v76[v78[3]];
										end
									elseif (v79 <= 154) then
										local v355;
										local v356;
										v356 = v78[2];
										v355 = v76[v78[3]];
										v76[v356 + 1] = v355;
										v76[v356] = v355[v78[4]];
										v70 = v70 + 1;
										v78 = v66[v70];
										v76[v78[2]] = v78[3];
										v70 = v70 + 1;
										v78 = v66[v70];
										v356 = v78[2];
										v76[v356] = v76[v356](v13(v76, v356 + 1, v78[3]));
										v70 = v70 + 1;
										v78 = v66[v70];
										v356 = v78[2];
										v355 = v76[v78[3]];
										v76[v356 + 1] = v355;
										v76[v356] = v355[v78[4]];
										v70 = v70 + 1;
										v78 = v66[v70];
										v76[v78[2]] = v78[3];
										v70 = v70 + 1;
										v78 = v66[v70];
										v356 = v78[2];
										v76[v356] = v76[v356](v13(v76, v356 + 1, v78[3]));
										v70 = v70 + 1;
										v78 = v66[v70];
										v76[v78[2]] = v76[v78[3]][v78[4]];
										v70 = v70 + 1;
										v78 = v66[v70];
										v76[v78[2]] = v76[v78[3]][v78[4]];
										v70 = v70 + 1;
										v78 = v66[v70];
										v76[v78[2]] = v76[v78[3]][v78[4]];
										v70 = v70 + 1;
										v78 = v66[v70];
										v76[v78[2]] = v76[v78[3]][v78[4]];
									elseif (v79 > 155) then
										local v1065;
										v76[v78[2]] = v78[3] ~= 0;
										v70 = v70 + 1;
										v78 = v66[v70];
										v76[v78[2]] = v78[3];
										v70 = v70 + 1;
										v78 = v66[v70];
										v76[v78[2]] = v78[3] ~= 0;
										v70 = v70 + 1;
										v78 = v66[v70];
										v76[v78[2]] = v62[v78[3]];
										v70 = v70 + 1;
										v78 = v66[v70];
										v1065 = v78[2];
										v76[v1065](v13(v76, v1065 + 1, v78[3]));
										v70 = v70 + 1;
										v78 = v66[v70];
										v70 = v78[3];
									else
										local v1071;
										local v1072;
										v1072 = v78[2];
										v1071 = v76[v78[3]];
										v76[v1072 + 1] = v1071;
										v76[v1072] = v1071[v78[4]];
										v70 = v70 + 1;
										v78 = v66[v70];
										v76[v78[2]] = v78[3];
										v70 = v70 + 1;
										v78 = v66[v70];
										v1072 = v78[2];
										v76[v1072] = v76[v1072](v13(v76, v1072 + 1, v78[3]));
										v70 = v70 + 1;
										v78 = v66[v70];
										v1072 = v78[2];
										v1071 = v76[v78[3]];
										v76[v1072 + 1] = v1071;
										v76[v1072] = v1071[v78[4]];
										v70 = v70 + 1;
										v78 = v66[v70];
										v76[v78[2]] = v76[v78[3]];
										v70 = v70 + 1;
										v78 = v66[v70];
										v1072 = v78[2];
										v76[v1072] = v76[v1072](v13(v76, v1072 + 1, v78[3]));
										v70 = v70 + 1;
										v78 = v66[v70];
										v76[v78[2]] = v76[v78[3]];
										v70 = v70 + 1;
										v78 = v66[v70];
										v76[v78[2]] = {};
										v70 = v70 + 1;
										v78 = v66[v70];
										v76[v78[2]][v78[3]] = v78[4];
										v70 = v70 + 1;
										v78 = v66[v70];
										v76[v78[2]] = v76[v78[3]];
										v70 = v70 + 1;
										v78 = v66[v70];
										v76[v78[2]] = v78[3];
										v70 = v70 + 1;
										v78 = v66[v70];
										v70 = v78[3];
									end
								elseif (v79 <= 162) then
									if (v79 <= 159) then
										if (v79 <= 157) then
											v76[v78[2]] = v76[v78[3]] - v78[4];
										elseif (v79 > 158) then
											v76[v78[2]]();
											v70 = v70 + 1;
											v78 = v66[v70];
											v76[v78[2]] = v76[v78[3]][v78[4]];
											v70 = v70 + 1;
											v78 = v66[v70];
											v76[v78[2]] = v76[v78[3]][v78[4]];
											v70 = v70 + 1;
											v78 = v66[v70];
											v76[v78[2]] = v76[v78[3]][v78[4]];
											v70 = v70 + 1;
											v78 = v66[v70];
											v76[v78[2]] = v76[v78[3]][v78[4]];
											v70 = v70 + 1;
											v78 = v66[v70];
											v76[v78[2]] = v62[v78[3]];
											v70 = v70 + 1;
											v78 = v66[v70];
											v76[v78[2]] = v76[v78[3]][v78[4]];
											v70 = v70 + 1;
											v78 = v66[v70];
											v76[v78[2]] = v78[3];
											v70 = v70 + 1;
											v78 = v66[v70];
											v76[v78[2]] = v78[3];
											v70 = v70 + 1;
											v78 = v66[v70];
											v76[v78[2]] = v78[3];
										else
											local v1088;
											local v1089;
											v76[v78[2]] = v76[v78[3]][v78[4]];
											v70 = v70 + 1;
											v78 = v66[v70];
											v76[v78[2]] = v76[v78[3]][v78[4]];
											v70 = v70 + 1;
											v78 = v66[v70];
											v76[v78[2]][v78[3]] = v76[v78[4]];
											v70 = v70 + 1;
											v78 = v66[v70];
											v76[v78[2]] = v78[3];
											v70 = v70 + 1;
											v78 = v66[v70];
											v76[v78[2]] = v76[v78[3]][v78[4]];
											v70 = v70 + 1;
											v78 = v66[v70];
											v1089 = v78[3];
											v1088 = v76[v1089];
											for v1646 = v1089 + 1, v78[4] do
												v1088 = v1088 .. v76[v1646];
											end
											v76[v78[2]] = v1088;
											v70 = v70 + 1;
											v78 = v66[v70];
											v76[v78[2]][v78[3]] = v76[v78[4]];
											v70 = v70 + 1;
											v78 = v66[v70];
											v76[v78[2]] = v62[v78[3]];
											v70 = v70 + 1;
											v78 = v66[v70];
											v76[v78[2]] = v76[v78[3]][v78[4]];
											v70 = v70 + 1;
											v78 = v66[v70];
											v76[v78[2]] = v78[3];
										end
									elseif (v79 <= 160) then
										local v367 = 0;
										local v368;
										local v369;
										while true do
											if (0 == v367) then
												v368 = nil;
												v369 = nil;
												v76[v78[2]] = v76[v78[3]][v78[4]];
												v70 = v70 + 1;
												v367 = 1;
											end
											if (v367 == 3) then
												v70 = v70 + 1;
												v78 = v66[v70];
												v76[v78[2]] = v78[3];
												v70 = v70 + 1;
												v367 = 4;
											end
											if (v367 == 9) then
												v369 = v78[2];
												v76[v369] = v76[v369](v13(v76, v369 + 1, v78[3]));
												v70 = v70 + 1;
												v78 = v66[v70];
												v367 = 10;
											end
											if (v367 == 2) then
												v369 = v78[2];
												v368 = v76[v78[3]];
												v76[v369 + 1] = v368;
												v76[v369] = v368[v78[4]];
												v367 = 3;
											end
											if (1 == v367) then
												v78 = v66[v70];
												v76[v78[2]] = v76[v78[3]][v78[4]];
												v70 = v70 + 1;
												v78 = v66[v70];
												v367 = 2;
											end
											if (4 == v367) then
												v78 = v66[v70];
												v369 = v78[2];
												v76[v369](v13(v76, v369 + 1, v78[3]));
												v70 = v70 + 1;
												v367 = 5;
											end
											if (v367 == 7) then
												v368 = v76[v78[3]];
												v76[v369 + 1] = v368;
												v76[v369] = v368[v78[4]];
												v70 = v70 + 1;
												v367 = 8;
											end
											if (v367 == 8) then
												v78 = v66[v70];
												v76[v78[2]] = v78[3];
												v70 = v70 + 1;
												v78 = v66[v70];
												v367 = 9;
											end
											if (v367 == 6) then
												v76[v78[2]] = v76[v78[3]][v78[4]];
												v70 = v70 + 1;
												v78 = v66[v70];
												v369 = v78[2];
												v367 = 7;
											end
											if (v367 == 10) then
												if v76[v78[2]] then
													v70 = v70 + 1;
												else
													v70 = v78[3];
												end
												break;
											end
											if (5 == v367) then
												v78 = v66[v70];
												v76[v78[2]] = v61[v78[3]];
												v70 = v70 + 1;
												v78 = v66[v70];
												v367 = 6;
											end
										end
									elseif (v79 > 161) then
										local v1098;
										v76[v78[2]] = v76[v78[3]][v78[4]];
										v70 = v70 + 1;
										v78 = v66[v70];
										v76[v78[2]] = v78[3];
										v70 = v70 + 1;
										v78 = v66[v70];
										v76[v78[2]] = v78[3];
										v70 = v70 + 1;
										v78 = v66[v70];
										v76[v78[2]] = v78[3];
										v70 = v70 + 1;
										v78 = v66[v70];
										v1098 = v78[2];
										v76[v1098] = v76[v1098](v13(v76, v1098 + 1, v78[3]));
										v70 = v70 + 1;
										v78 = v66[v70];
										v76[v78[2]][v78[3]] = v76[v78[4]];
										v70 = v70 + 1;
										v78 = v66[v70];
										v76[v78[2]][v78[3]] = v78[4];
										v70 = v70 + 1;
										v78 = v66[v70];
										v76[v78[2]] = v78[3];
										v70 = v70 + 1;
										v78 = v66[v70];
										v70 = v78[3];
									else
										local v1108 = 0;
										local v1109;
										local v1110;
										local v1111;
										local v1112;
										while true do
											if (v1108 == 8) then
												v70 = v70 + 1;
												v78 = v66[v70];
												v76[v78[2]] = {};
												v70 = v70 + 1;
												v78 = v66[v70];
												v76[v78[2]][v78[3]] = v78[4];
												v1108 = 9;
											end
											if (v1108 == 4) then
												v78 = v66[v70];
												v76[v78[2]] = v76[v78[3]];
												v70 = v70 + 1;
												v78 = v66[v70];
												v1112 = v78[2];
												v76[v1112] = v76[v1112](v76[v1112 + 1]);
												v1108 = 5;
											end
											if (v1108 == 10) then
												v70 = v70 + 1;
												v78 = v66[v70];
												v76[v78[2]] = v76[v78[3]][v78[4]];
												v70 = v70 + 1;
												v78 = v66[v70];
												v76[v78[2]] = v76[v78[3]][v78[4]];
												v1108 = 11;
											end
											if (v1108 == 2) then
												v78 = v66[v70];
												v76[v78[2]] = {};
												v70 = v70 + 1;
												v78 = v66[v70];
												v76[v78[2]] = {};
												v70 = v70 + 1;
												v1108 = 3;
											end
											if (v1108 == 1) then
												v78 = v66[v70];
												v76[v78[2]][v78[3]] = v76[v78[4]];
												v70 = v70 + 1;
												v78 = v66[v70];
												v76[v78[2]][v78[3]] = v76[v78[4]];
												v70 = v70 + 1;
												v1108 = 2;
											end
											if (v1108 == 13) then
												v70 = v70 + 1;
												v78 = v66[v70];
												v76[v78[2]][v78[3]] = v76[v78[4]];
												v70 = v70 + 1;
												v78 = v66[v70];
												v76[v78[2]] = {};
												v1108 = 14;
											end
											if (6 == v1108) then
												v70 = v70 + 1;
												v78 = v66[v70];
												v76[v78[2]][v78[3]] = v78[4];
												v70 = v70 + 1;
												v78 = v66[v70];
												v76[v78[2]][v78[3]] = v78[4];
												v1108 = 7;
											end
											if (v1108 == 7) then
												v70 = v70 + 1;
												v78 = v66[v70];
												v76[v78[2]][v78[3]] = v76[v78[4]];
												v70 = v70 + 1;
												v78 = v66[v70];
												v76[v78[2]] = {};
												v1108 = 8;
											end
											if (v1108 == 5) then
												v70 = v70 + 1;
												v78 = v66[v70];
												v76[v78[2]][v78[3]] = v76[v78[4]];
												v70 = v70 + 1;
												v78 = v66[v70];
												v76[v78[2]] = {};
												v1108 = 6;
											end
											if (v1108 == 9) then
												v70 = v70 + 1;
												v78 = v66[v70];
												v76[v78[2]] = v78[3];
												v70 = v70 + 1;
												v78 = v66[v70];
												v76[v78[2]] = v62[v78[3]];
												v1108 = 10;
											end
											if (v1108 == 3) then
												v78 = v66[v70];
												v76[v78[2]][v78[3]] = v78[4];
												v70 = v70 + 1;
												v78 = v66[v70];
												v76[v78[2]] = v62[v78[3]];
												v70 = v70 + 1;
												v1108 = 4;
											end
											if (15 == v1108) then
												v70 = v70 + 1;
												v78 = v66[v70];
												v76[v78[2]][v78[3]] = v76[v78[4]];
												v70 = v70 + 1;
												v78 = v66[v70];
												v1112 = v78[2];
												v1108 = 16;
											end
											if (v1108 == 12) then
												v70 = v70 + 1;
												v78 = v66[v70];
												v1111 = v78[3];
												v1110 = v76[v1111];
												for v2804 = v1111 + 1, v78[4] do
													v1110 = v1110 .. v76[v2804];
												end
												v76[v78[2]] = v1110;
												v1108 = 13;
											end
											if (v1108 == 0) then
												v1109 = nil;
												v1110 = nil;
												v1111 = nil;
												v1112 = nil;
												v76[v78[2]] = {};
												v70 = v70 + 1;
												v1108 = 1;
											end
											if (v1108 == 11) then
												v70 = v70 + 1;
												v78 = v66[v70];
												v76[v78[2]] = v76[v78[3]][v78[4]];
												v70 = v70 + 1;
												v78 = v66[v70];
												v76[v78[2]] = v78[3];
												v1108 = 12;
											end
											if (v1108 == 14) then
												v70 = v70 + 1;
												v78 = v66[v70];
												v76[v78[2]][v78[3]] = v78[4];
												v70 = v70 + 1;
												v78 = v66[v70];
												v76[v78[2]] = v61[v78[3]];
												v1108 = 15;
											end
											if (v1108 == 16) then
												v1109 = v76[v1112];
												v1111 = v78[3];
												for v2805 = 1, v1111 do
													v1109[v2805] = v76[v1112 + v2805];
												end
												break;
											end
										end
									end
								elseif (v79 <= 165) then
									if (v79 <= 163) then
										local v370 = 0;
										local v371;
										local v372;
										local v373;
										local v374;
										while true do
											if (v370 == 1) then
												v71 = (v373 + v371) - 1;
												v374 = 0;
												v370 = 2;
											end
											if (v370 == 2) then
												for v1761 = v371, v71 do
													v374 = v374 + 1;
													v76[v1761] = v372[v374];
												end
												break;
											end
											if (v370 == 0) then
												v371 = v78[2];
												v372, v373 = v69(v76[v371](v13(v76, v371 + 1, v78[3])));
												v370 = 1;
											end
										end
									elseif (v79 == 164) then
										local v1113 = v78[2];
										local v1114 = v78[4];
										local v1115 = v1113 + 2;
										local v1116 = {v76[v1113](v76[v1113 + 1], v76[v1115])};
										for v1680 = 1, v1114 do
											v76[v1115 + v1680] = v1116[v1680];
										end
										local v1117 = v1116[1];
										if v1117 then
											local v1764 = 0;
											while true do
												if (v1764 == 0) then
													v76[v1115] = v1117;
													v70 = v78[3];
													break;
												end
											end
										else
											v70 = v70 + 1;
										end
									else
										local v1118;
										local v1119;
										local v1118, v1120;
										local v1121;
										local v1122;
										v76[v78[2]] = v62[v78[3]];
										v70 = v70 + 1;
										v78 = v66[v70];
										v76[v78[2]] = v61[v78[3]];
										v70 = v70 + 1;
										v78 = v66[v70];
										v76[v78[2]] = v76[v78[3]][v78[4]];
										v70 = v70 + 1;
										v78 = v66[v70];
										v76[v78[2]] = v76[v78[3]][v78[4]];
										v70 = v70 + 1;
										v78 = v66[v70];
										v76[v78[2]] = v76[v78[3]][v78[4]];
										v70 = v70 + 1;
										v78 = v66[v70];
										v76[v78[2]] = v76[v78[3]][v78[4]];
										v70 = v70 + 1;
										v78 = v66[v70];
										v76[v78[2]] = v76[v78[3]][v78[4]];
										v70 = v70 + 1;
										v78 = v66[v70];
										v76[v78[2]] = v76[v78[3]][v78[4]];
										v70 = v70 + 1;
										v78 = v66[v70];
										v1122 = v78[2];
										v1121 = v76[v78[3]];
										v76[v1122 + 1] = v1121;
										v76[v1122] = v1121[v78[4]];
										v70 = v70 + 1;
										v78 = v66[v70];
										v1122 = v78[2];
										v1118, v1120 = v69(v76[v1122](v76[v1122 + 1]));
										v71 = (v1120 + v1122) - 1;
										v1119 = 0;
										for v1683 = v1122, v71 do
											v1119 = v1119 + 1;
											v76[v1683] = v1118[v1119];
										end
										v70 = v70 + 1;
										v78 = v66[v70];
										v1122 = v78[2];
										v1118 = {v76[v1122](v13(v76, v1122 + 1, v71))};
										v1119 = 0;
										for v1686 = v1122, v78[4] do
											v1119 = v1119 + 1;
											v76[v1686] = v1118[v1119];
										end
										v70 = v70 + 1;
										v78 = v66[v70];
										v70 = v78[3];
									end
								elseif (v79 <= 166) then
									local v375;
									v76[v78[2]] = v78[3];
									v70 = v70 + 1;
									v78 = v66[v70];
									v375 = v78[2];
									v76[v375] = v76[v375](v13(v76, v375 + 1, v78[3]));
									v70 = v70 + 1;
									v78 = v66[v70];
									v76[v78[2]][v78[3]] = v76[v78[4]];
									v70 = v70 + 1;
									v78 = v66[v70];
									v76[v78[2]][v78[3]] = v78[4];
									v70 = v70 + 1;
									v78 = v66[v70];
									v76[v78[2]][v78[3]] = v76[v78[4]];
									v70 = v70 + 1;
									v78 = v66[v70];
									v70 = v78[3];
								elseif (v79 > 167) then
									local v1134;
									local v1135;
									v1135 = v78[2];
									v1134 = v76[v78[3]];
									v76[v1135 + 1] = v1134;
									v76[v1135] = v1134[v78[4]];
									v70 = v70 + 1;
									v78 = v66[v70];
									v76[v78[2]] = v78[3];
									v70 = v70 + 1;
									v78 = v66[v70];
									v1135 = v78[2];
									v76[v1135] = v76[v1135](v13(v76, v1135 + 1, v78[3]));
									v70 = v70 + 1;
									v78 = v66[v70];
									v76[v78[2]] = v76[v78[3]][v78[4]];
									v70 = v70 + 1;
									v78 = v66[v70];
									v76[v78[2]] = v62[v78[3]];
									v70 = v70 + 1;
									v78 = v66[v70];
									v1135 = v78[2];
									v1134 = v76[v78[3]];
									v76[v1135 + 1] = v1134;
									v76[v1135] = v1134[v78[4]];
									v70 = v70 + 1;
									v78 = v66[v70];
									v76[v78[2]] = v78[3];
									v70 = v70 + 1;
									v78 = v66[v70];
									v1135 = v78[2];
									v76[v1135] = v76[v1135](v13(v76, v1135 + 1, v78[3]));
									v70 = v70 + 1;
									v78 = v66[v70];
									v76[v78[2]] = v62[v78[3]];
									v70 = v70 + 1;
									v78 = v66[v70];
									v76[v78[2]] = v78[3];
								else
									do
										return;
									end
								end
							elseif (v79 <= 180) then
								if (v79 <= 174) then
									if (v79 <= 171) then
										if (v79 <= 169) then
											v76[v78[2]] = v76[v78[3]][v78[4]];
											v70 = v70 + 1;
											v78 = v66[v70];
											v76[v78[2]]();
											v70 = v70 + 1;
											v78 = v66[v70];
											v76[v78[2]] = v62[v78[3]];
											v70 = v70 + 1;
											v78 = v66[v70];
											v76[v78[2]] = v76[v78[3]][v78[4]];
											v70 = v70 + 1;
											v78 = v66[v70];
											v76[v78[2]] = v76[v78[3]][v78[4]];
										elseif (v79 > 170) then
											local v1146 = 0;
											local v1147;
											while true do
												if (v1146 == 2) then
													v70 = v70 + 1;
													v78 = v66[v70];
													v76[v78[2]] = v78[3];
													v70 = v70 + 1;
													v1146 = 3;
												end
												if (v1146 == 5) then
													v76[v78[2]][v78[3]] = v78[4];
													v70 = v70 + 1;
													v78 = v66[v70];
													v76[v78[2]] = v78[3];
													break;
												end
												if (v1146 == 4) then
													v78 = v66[v70];
													v76[v78[2]][v78[3]] = v76[v78[4]];
													v70 = v70 + 1;
													v78 = v66[v70];
													v1146 = 5;
												end
												if (v1146 == 3) then
													v78 = v66[v70];
													v1147 = v78[2];
													v76[v1147] = v76[v1147](v13(v76, v1147 + 1, v78[3]));
													v70 = v70 + 1;
													v1146 = 4;
												end
												if (v1146 == 1) then
													v76[v78[2]] = v78[3];
													v70 = v70 + 1;
													v78 = v66[v70];
													v76[v78[2]] = v78[3];
													v1146 = 2;
												end
												if (0 == v1146) then
													v1147 = nil;
													v76[v78[2]] = v76[v78[3]][v78[4]];
													v70 = v70 + 1;
													v78 = v66[v70];
													v1146 = 1;
												end
											end
										else
											local v1148 = 0;
											while true do
												if (v1148 == 3) then
													v76[v78[2]] = v76[v78[3]][v78[4]];
													v70 = v70 + 1;
													v78 = v66[v70];
													if v76[v78[2]] then
														v70 = v70 + 1;
													else
														v70 = v78[3];
													end
													break;
												end
												if (0 == v1148) then
													v76[v78[2]] = v76[v78[3]][v78[4]];
													v70 = v70 + 1;
													v78 = v66[v70];
													v76[v78[2]]();
													v1148 = 1;
												end
												if (v1148 == 1) then
													v70 = v70 + 1;
													v78 = v66[v70];
													v76[v78[2]] = v62[v78[3]];
													v70 = v70 + 1;
													v1148 = 2;
												end
												if (v1148 == 2) then
													v78 = v66[v70];
													v76[v78[2]] = v76[v78[3]][v78[4]];
													v70 = v70 + 1;
													v78 = v66[v70];
													v1148 = 3;
												end
											end
										end
									elseif (v79 <= 172) then
										local v388;
										v76[v78[2]] = v76[v78[3]][v78[4]];
										v70 = v70 + 1;
										v78 = v66[v70];
										v76[v78[2]] = v78[3];
										v70 = v70 + 1;
										v78 = v66[v70];
										v388 = v78[2];
										v76[v388](v76[v388 + 1]);
										v70 = v70 + 1;
										v78 = v66[v70];
										v76[v78[2]] = v78[3];
										v70 = v70 + 1;
										v78 = v66[v70];
										v70 = v78[3];
									elseif (v79 == 173) then
										local v1149 = v78[2];
										local v1150 = v76[v78[3]];
										v76[v1149 + 1] = v1150;
										v76[v1149] = v1150[v78[4]];
									elseif (v76[v78[2]] < v78[4]) then
										v70 = v70 + 1;
									else
										v70 = v78[3];
									end
								elseif (v79 <= 177) then
									if (v79 <= 175) then
										local v394;
										local v395;
										v395 = v78[2];
										v394 = v76[v78[3]];
										v76[v395 + 1] = v394;
										v76[v395] = v394[v78[4]];
										v70 = v70 + 1;
										v78 = v66[v70];
										v76[v78[2]] = v78[3];
										v70 = v70 + 1;
										v78 = v66[v70];
										v395 = v78[2];
										v76[v395] = v76[v395](v13(v76, v395 + 1, v78[3]));
										v70 = v70 + 1;
										v78 = v66[v70];
										v395 = v78[2];
										v394 = v76[v78[3]];
										v76[v395 + 1] = v394;
										v76[v395] = v394[v78[4]];
										v70 = v70 + 1;
										v78 = v66[v70];
										v76[v78[2]] = v78[3];
										v70 = v70 + 1;
										v78 = v66[v70];
										v395 = v78[2];
										v76[v395] = v76[v395](v13(v76, v395 + 1, v78[3]));
										v70 = v70 + 1;
										v78 = v66[v70];
										v76[v78[2]] = v76[v78[3]][v78[4]];
										v70 = v70 + 1;
										v78 = v66[v70];
										v76[v78[2]] = v76[v78[3]][v78[4]];
										v70 = v70 + 1;
										v78 = v66[v70];
										v76[v78[2]] = v76[v78[3]][v78[4]];
										v70 = v70 + 1;
										v78 = v66[v70];
										v76[v78[2]] = v76[v78[3]][v78[4]];
									elseif (v79 == 176) then
										local v1154;
										local v1155;
										v76[v78[2]] = v76[v78[3]][v78[4]];
										v70 = v70 + 1;
										v78 = v66[v70];
										v76[v78[2]] = v76[v78[3]][v78[4]];
										v70 = v70 + 1;
										v78 = v66[v70];
										v1155 = v78[2];
										v1154 = v76[v78[3]];
										v76[v1155 + 1] = v1154;
										v76[v1155] = v1154[v78[4]];
										v70 = v70 + 1;
										v78 = v66[v70];
										v76[v78[2]] = v78[3];
										v70 = v70 + 1;
										v78 = v66[v70];
										v76[v78[2]] = {};
										v70 = v70 + 1;
										v78 = v66[v70];
										v76[v78[2]][v78[3]] = v78[4];
										v70 = v70 + 1;
										v78 = v66[v70];
										v76[v78[2]][v78[3]] = v78[4];
										v70 = v70 + 1;
										v78 = v66[v70];
										v1155 = v78[2];
										v76[v1155](v13(v76, v1155 + 1, v78[3]));
										v70 = v70 + 1;
										v78 = v66[v70];
										v76[v78[2]] = v61[v78[3]];
										v70 = v70 + 1;
										v78 = v66[v70];
										v76[v78[2]] = v76[v78[3]][v78[4]];
										v70 = v70 + 1;
										v78 = v66[v70];
										v76[v78[2]] = v76[v78[3]][v78[4]];
										v70 = v70 + 1;
										v78 = v66[v70];
										v1155 = v78[2];
										v1154 = v76[v78[3]];
										v76[v1155 + 1] = v1154;
										v76[v1155] = v1154[v78[4]];
										v70 = v70 + 1;
										v78 = v66[v70];
										v76[v78[2]] = v78[3];
										v70 = v70 + 1;
										v78 = v66[v70];
										v76[v78[2]] = {};
										v70 = v70 + 1;
										v78 = v66[v70];
										v76[v78[2]][v78[3]] = v78[4];
										v70 = v70 + 1;
										v78 = v66[v70];
										v76[v78[2]][v78[3]] = v78[4];
										v70 = v70 + 1;
										v78 = v66[v70];
										v1155 = v78[2];
										v76[v1155](v13(v76, v1155 + 1, v78[3]));
										v70 = v70 + 1;
										v78 = v66[v70];
										v76[v78[2]] = v78[3];
									else
										local v1168;
										local v1169;
										local v1168, v1170;
										local v1171;
										local v1172;
										v76[v78[2]] = v76[v78[3]][v78[4]];
										v70 = v70 + 1;
										v78 = v66[v70];
										v76[v78[2]] = v76[v78[3]][v78[4]];
										v70 = v70 + 1;
										v78 = v66[v70];
										v76[v78[2]] = v76[v78[3]][v78[4]];
										v70 = v70 + 1;
										v78 = v66[v70];
										v76[v78[2]] = v76[v78[3]][v78[4]];
										v70 = v70 + 1;
										v78 = v66[v70];
										v76[v78[2]] = v76[v78[3]][v78[4]];
										v70 = v70 + 1;
										v78 = v66[v70];
										v76[v78[2]] = v76[v78[3]][v78[4]];
										v70 = v70 + 1;
										v78 = v66[v70];
										v1172 = v78[2];
										v1171 = v76[v78[3]];
										v76[v1172 + 1] = v1171;
										v76[v1172] = v1171[v78[4]];
										v70 = v70 + 1;
										v78 = v66[v70];
										v1172 = v78[2];
										v1168, v1170 = v69(v76[v1172](v76[v1172 + 1]));
										v71 = (v1170 + v1172) - 1;
										v1169 = 0;
										for v1689 = v1172, v71 do
											local v1690 = 0;
											while true do
												if (v1690 == 0) then
													v1169 = v1169 + 1;
													v76[v1689] = v1168[v1169];
													break;
												end
											end
										end
										v70 = v70 + 1;
										v78 = v66[v70];
										v1172 = v78[2];
										v1168 = {v76[v1172](v13(v76, v1172 + 1, v71))};
										v1169 = 0;
										for v1691 = v1172, v78[4] do
											v1169 = v1169 + 1;
											v76[v1691] = v1168[v1169];
										end
										v70 = v70 + 1;
										v78 = v66[v70];
										v70 = v78[3];
									end
								elseif (v79 <= 178) then
									local v405 = 0;
									local v406;
									local v407;
									while true do
										if (v405 == 0) then
											v406 = nil;
											v407 = nil;
											v76[v78[2]] = v62[v78[3]];
											v70 = v70 + 1;
											v78 = v66[v70];
											v405 = 1;
										end
										if (v405 == 3) then
											v76[v78[2]] = v78[3];
											v70 = v70 + 1;
											v78 = v66[v70];
											v407 = v78[2];
											v76[v407] = v76[v407](v13(v76, v407 + 1, v78[3]));
											v405 = 4;
										end
										if (4 == v405) then
											v70 = v70 + 1;
											v78 = v66[v70];
											v407 = v78[2];
											v406 = v76[v78[3]];
											v76[v407 + 1] = v406;
											v405 = 5;
										end
										if (v405 == 2) then
											v406 = v76[v78[3]];
											v76[v407 + 1] = v406;
											v76[v407] = v406[v78[4]];
											v70 = v70 + 1;
											v78 = v66[v70];
											v405 = 3;
										end
										if (1 == v405) then
											v407 = v78[2];
											v76[v407](v13(v76, v407 + 1, v78[3]));
											v70 = v70 + 1;
											v78 = v66[v70];
											v407 = v78[2];
											v405 = 2;
										end
										if (7 == v405) then
											v76[v78[2]] = v76[v78[3]][v78[4]];
											v70 = v70 + 1;
											v78 = v66[v70];
											v76[v78[2]] = v76[v78[3]][v78[4]];
											break;
										end
										if (v405 == 5) then
											v76[v407] = v406[v78[4]];
											v70 = v70 + 1;
											v78 = v66[v70];
											v76[v78[2]] = v78[3];
											v70 = v70 + 1;
											v405 = 6;
										end
										if (v405 == 6) then
											v78 = v66[v70];
											v407 = v78[2];
											v76[v407] = v76[v407](v13(v76, v407 + 1, v78[3]));
											v70 = v70 + 1;
											v78 = v66[v70];
											v405 = 7;
										end
									end
								elseif (v79 > 179) then
									if (v78[2] == v76[v78[4]]) then
										v70 = v70 + 1;
									else
										v70 = v78[3];
									end
								else
									local v1182;
									local v1183;
									v1183 = v78[2];
									v1182 = v76[v78[3]];
									v76[v1183 + 1] = v1182;
									v76[v1183] = v1182[v78[4]];
									v70 = v70 + 1;
									v78 = v66[v70];
									v76[v78[2]] = v78[3];
									v70 = v70 + 1;
									v78 = v66[v70];
									v76[v78[2]] = {};
									v70 = v70 + 1;
									v78 = v66[v70];
									v76[v78[2]] = v62[v78[3]];
									v70 = v70 + 1;
									v78 = v66[v70];
									v76[v78[2]] = v76[v78[3]][v78[4]];
									v70 = v70 + 1;
									v78 = v66[v70];
									v76[v78[2]] = v76[v78[3]][v78[4]];
									v70 = v70 + 1;
									v78 = v66[v70];
									v76[v78[2]][v78[3]] = v76[v78[4]];
									v70 = v70 + 1;
									v78 = v66[v70];
									v1183 = v78[2];
									v76[v1183](v13(v76, v1183 + 1, v78[3]));
									v70 = v70 + 1;
									v78 = v66[v70];
									v70 = v78[3];
								end
							elseif (v79 <= 186) then
								if (v79 <= 183) then
									if (v79 <= 181) then
										v76[v78[2]] = v76[v78[3]][v76[v78[4]]];
									elseif (v79 > 182) then
										local v1196 = v78[2];
										v76[v1196](v76[v1196 + 1]);
									else
										local v1197 = 0;
										while true do
											if (v1197 == 5) then
												v78 = v66[v70];
												if (v78[2] <= v76[v78[4]]) then
													v70 = v70 + 1;
												else
													v70 = v78[3];
												end
												break;
											end
											if (v1197 == 4) then
												v70 = v70 + 1;
												v78 = v66[v70];
												v76[v78[2]] = v76[v78[3]][v78[4]];
												v70 = v70 + 1;
												v1197 = 5;
											end
											if (v1197 == 3) then
												v76[v78[2]] = v76[v78[3]][v76[v78[4]]];
												v70 = v70 + 1;
												v78 = v66[v70];
												v76[v78[2]] = v76[v78[3]][v78[4]];
												v1197 = 4;
											end
											if (v1197 == 2) then
												v78 = v66[v70];
												v76[v78[2]] = v76[v78[3]][v78[4]];
												v70 = v70 + 1;
												v78 = v66[v70];
												v1197 = 3;
											end
											if (v1197 == 1) then
												v70 = v70 + 1;
												v78 = v66[v70];
												v76[v78[2]] = v76[v78[3]][v78[4]];
												v70 = v70 + 1;
												v1197 = 2;
											end
											if (v1197 == 0) then
												v76[v78[2]] = v76[v78[3]][v78[4]];
												v70 = v70 + 1;
												v78 = v66[v70];
												v76[v78[2]]();
												v1197 = 1;
											end
										end
									end
								elseif (v79 <= 184) then
									local v410 = 0;
									local v411;
									while true do
										if (v410 == 1) then
											v78 = v66[v70];
											v76[v78[2]] = v78[3];
											v70 = v70 + 1;
											v410 = 2;
										end
										if (v410 == 2) then
											v78 = v66[v70];
											v411 = v78[2];
											v76[v411](v76[v411 + 1]);
											v410 = 3;
										end
										if (v410 == 0) then
											v411 = nil;
											v76[v78[2]] = v76[v78[3]][v78[4]];
											v70 = v70 + 1;
											v410 = 1;
										end
										if (v410 == 3) then
											v70 = v70 + 1;
											v78 = v66[v70];
											v76[v78[2]] = v78[3];
											v410 = 4;
										end
										if (v410 == 4) then
											v70 = v70 + 1;
											v78 = v66[v70];
											v70 = v78[3];
											break;
										end
									end
								elseif (v79 == 185) then
									if (v78[2] <= v76[v78[4]]) then
										v70 = v70 + 1;
									else
										v70 = v78[3];
									end
								else
									local v1198;
									v76[v78[2]] = v76[v78[3]][v78[4]];
									v70 = v70 + 1;
									v78 = v66[v70];
									v76[v78[2]] = v76[v78[3]][v78[4]];
									v70 = v70 + 1;
									v78 = v66[v70];
									v76[v78[2]] = v76[v78[3]][v78[4]];
									v70 = v70 + 1;
									v78 = v66[v70];
									v76[v78[2]] = v62[v78[3]];
									v70 = v70 + 1;
									v78 = v66[v70];
									v76[v78[2]] = v76[v78[3]][v78[4]];
									v70 = v70 + 1;
									v78 = v66[v70];
									v76[v78[2]] = v78[3];
									v70 = v70 + 1;
									v78 = v66[v70];
									v76[v78[2]] = v78[3];
									v70 = v70 + 1;
									v78 = v66[v70];
									v76[v78[2]] = v78[3];
									v70 = v70 + 1;
									v78 = v66[v70];
									v1198 = v78[2];
									v76[v1198] = v76[v1198](v13(v76, v1198 + 1, v78[3]));
									v70 = v70 + 1;
									v78 = v66[v70];
									v76[v78[2]] = v76[v78[3]] + v76[v78[4]];
								end
							elseif (v79 <= 189) then
								if (v79 <= 187) then
									local v412;
									local v413;
									v76[v78[2]] = v76[v78[3]][v78[4]];
									v70 = v70 + 1;
									v78 = v66[v70];
									v76[v78[2]] = v76[v78[3]][v78[4]];
									v70 = v70 + 1;
									v78 = v66[v70];
									v413 = v78[2];
									v412 = v76[v78[3]];
									v76[v413 + 1] = v412;
									v76[v413] = v412[v78[4]];
									v70 = v70 + 1;
									v78 = v66[v70];
									v76[v78[2]] = v78[3];
									v70 = v70 + 1;
									v78 = v66[v70];
									v76[v78[2]] = {};
									v70 = v70 + 1;
									v78 = v66[v70];
									v76[v78[2]][v78[3]] = v78[4];
									v70 = v70 + 1;
									v78 = v66[v70];
									v76[v78[2]][v78[3]] = v78[4];
									v70 = v70 + 1;
									v78 = v66[v70];
									v413 = v78[2];
									v76[v413](v13(v76, v413 + 1, v78[3]));
									v70 = v70 + 1;
									v78 = v66[v70];
									v76[v78[2]] = v61[v78[3]];
									v70 = v70 + 1;
									v78 = v66[v70];
									v76[v78[2]] = v76[v78[3]][v78[4]];
									v70 = v70 + 1;
									v78 = v66[v70];
									v76[v78[2]] = v76[v78[3]][v78[4]];
									v70 = v70 + 1;
									v78 = v66[v70];
									v413 = v78[2];
									v412 = v76[v78[3]];
									v76[v413 + 1] = v412;
									v76[v413] = v412[v78[4]];
									v70 = v70 + 1;
									v78 = v66[v70];
									v76[v78[2]] = v78[3];
									v70 = v70 + 1;
									v78 = v66[v70];
									v76[v78[2]] = {};
									v70 = v70 + 1;
									v78 = v66[v70];
									v76[v78[2]][v78[3]] = v78[4];
									v70 = v70 + 1;
									v78 = v66[v70];
									v76[v78[2]][v78[3]] = v78[4];
									v70 = v70 + 1;
									v78 = v66[v70];
									v413 = v78[2];
									v76[v413](v13(v76, v413 + 1, v78[3]));
									v70 = v70 + 1;
									v78 = v66[v70];
									v76[v78[2]] = v78[3];
								elseif (v79 > 188) then
									local v1206;
									v76[v78[2]] = v76[v78[3]][v78[4]];
									v70 = v70 + 1;
									v78 = v66[v70];
									v76[v78[2]] = v78[3];
									v70 = v70 + 1;
									v78 = v66[v70];
									v76[v78[2]] = v78[3];
									v70 = v70 + 1;
									v78 = v66[v70];
									v76[v78[2]] = v78[3];
									v70 = v70 + 1;
									v78 = v66[v70];
									v76[v78[2]] = v78[3];
									v70 = v70 + 1;
									v78 = v66[v70];
									v1206 = v78[2];
									v76[v1206] = v76[v1206](v13(v76, v1206 + 1, v78[3]));
									v70 = v70 + 1;
									v78 = v66[v70];
									v76[v78[2]][v78[3]] = v76[v78[4]];
									v70 = v70 + 1;
									v78 = v66[v70];
									v76[v78[2]] = v62[v78[3]];
									v70 = v70 + 1;
									v78 = v66[v70];
									v76[v78[2]] = v76[v78[3]][v78[4]];
									v70 = v70 + 1;
									v78 = v66[v70];
									v76[v78[2]] = v78[3];
								else
									local v1216 = 0;
									local v1217;
									local v1218;
									while true do
										if (v1216 == 1) then
											v76[v78[2]] = v78[3];
											v70 = v70 + 1;
											v78 = v66[v70];
											v1218 = v78[2];
											v76[v1218](v76[v1218 + 1]);
											v1216 = 2;
										end
										if (v1216 == 3) then
											v76[v78[2]] = v76[v78[3]][v78[4]];
											v70 = v70 + 1;
											v78 = v66[v70];
											v76[v78[2]] = v76[v78[3]][v78[4]];
											v70 = v70 + 1;
											v1216 = 4;
										end
										if (v1216 == 0) then
											v1217 = nil;
											v1218 = nil;
											v76[v78[2]] = v76[v78[3]][v78[4]];
											v70 = v70 + 1;
											v78 = v66[v70];
											v1216 = 1;
										end
										if (v1216 == 6) then
											v78 = v66[v70];
											v76[v78[2]] = v78[3];
											v70 = v70 + 1;
											v78 = v66[v70];
											v70 = v78[3];
											break;
										end
										if (v1216 == 5) then
											v70 = v70 + 1;
											v78 = v66[v70];
											v1218 = v78[2];
											v76[v1218](v76[v1218 + 1]);
											v70 = v70 + 1;
											v1216 = 6;
										end
										if (v1216 == 2) then
											v70 = v70 + 1;
											v78 = v66[v70];
											v76[v78[2]] = v61[v78[3]];
											v70 = v70 + 1;
											v78 = v66[v70];
											v1216 = 3;
										end
										if (v1216 == 4) then
											v78 = v66[v70];
											v1218 = v78[2];
											v1217 = v76[v78[3]];
											v76[v1218 + 1] = v1217;
											v76[v1218] = v1217[v78[4]];
											v1216 = 5;
										end
									end
								end
							elseif (v79 <= 191) then
								if (v79 > 190) then
									local v1219 = 0;
									local v1220;
									local v1221;
									local v1222;
									local v1223;
									local v1224;
									while true do
										if (v1219 == 9) then
											v70 = v78[3];
											break;
										end
										if (v1219 == 0) then
											v1220 = nil;
											v1221 = nil;
											v1220, v1222 = nil;
											v1223 = nil;
											v1224 = nil;
											v1219 = 1;
										end
										if (v1219 == 5) then
											v78 = v66[v70];
											v1224 = v78[2];
											v1223 = v76[v78[3]];
											v76[v1224 + 1] = v1223;
											v76[v1224] = v1223[v78[4]];
											v1219 = 6;
										end
										if (v1219 == 7) then
											v1221 = 0;
											for v2810 = v1224, v71 do
												local v2811 = 0;
												while true do
													if (v2811 == 0) then
														v1221 = v1221 + 1;
														v76[v2810] = v1220[v1221];
														break;
													end
												end
											end
											v70 = v70 + 1;
											v78 = v66[v70];
											v1224 = v78[2];
											v1219 = 8;
										end
										if (v1219 == 6) then
											v70 = v70 + 1;
											v78 = v66[v70];
											v1224 = v78[2];
											v1220, v1222 = v69(v76[v1224](v76[v1224 + 1]));
											v71 = (v1222 + v1224) - 1;
											v1219 = 7;
										end
										if (3 == v1219) then
											v70 = v70 + 1;
											v78 = v66[v70];
											v76[v78[2]] = v76[v78[3]][v78[4]];
											v70 = v70 + 1;
											v78 = v66[v70];
											v1219 = 4;
										end
										if (v1219 == 8) then
											v1220 = {v76[v1224](v13(v76, v1224 + 1, v71))};
											v1221 = 0;
											for v2812 = v1224, v78[4] do
												local v2813 = 0;
												while true do
													if (v2813 == 0) then
														v1221 = v1221 + 1;
														v76[v2812] = v1220[v1221];
														break;
													end
												end
											end
											v70 = v70 + 1;
											v78 = v66[v70];
											v1219 = 9;
										end
										if (4 == v1219) then
											v76[v78[2]] = v76[v78[3]][v78[4]];
											v70 = v70 + 1;
											v78 = v66[v70];
											v76[v78[2]] = v76[v78[3]][v78[4]];
											v70 = v70 + 1;
											v1219 = 5;
										end
										if (v1219 == 1) then
											v76[v78[2]] = v61[v78[3]];
											v70 = v70 + 1;
											v78 = v66[v70];
											v76[v78[2]] = v76[v78[3]][v78[4]];
											v70 = v70 + 1;
											v1219 = 2;
										end
										if (v1219 == 2) then
											v78 = v66[v70];
											v76[v78[2]] = v76[v78[3]][v78[4]];
											v70 = v70 + 1;
											v78 = v66[v70];
											v76[v78[2]] = v76[v78[3]][v78[4]];
											v1219 = 3;
										end
									end
								else
									local v1225;
									local v1226;
									v76[v78[2]] = v76[v78[3]][v78[4]];
									v70 = v70 + 1;
									v78 = v66[v70];
									v76[v78[2]] = v76[v78[3]][v78[4]];
									v70 = v70 + 1;
									v78 = v66[v70];
									v76[v78[2]][v78[3]] = v76[v78[4]];
									v70 = v70 + 1;
									v78 = v66[v70];
									v76[v78[2]] = v78[3];
									v70 = v70 + 1;
									v78 = v66[v70];
									v76[v78[2]] = v76[v78[3]][v78[4]];
									v70 = v70 + 1;
									v78 = v66[v70];
									v1226 = v78[3];
									v1225 = v76[v1226];
									for v1736 = v1226 + 1, v78[4] do
										v1225 = v1225 .. v76[v1736];
									end
									v76[v78[2]] = v1225;
									v70 = v70 + 1;
									v78 = v66[v70];
									v76[v78[2]][v78[3]] = v76[v78[4]];
									v70 = v70 + 1;
									v78 = v66[v70];
									v76[v78[2]] = v78[3];
								end
							elseif (v79 > 192) then
								local v1234 = 0;
								local v1235;
								while true do
									if (v1234 == 0) then
										v1235 = nil;
										v76[v78[2]] = v76[v78[3]][v78[4]];
										v70 = v70 + 1;
										v1234 = 1;
									end
									if (v1234 == 9) then
										v70 = v70 + 1;
										v78 = v66[v70];
										v76[v78[2]] = v76[v78[3]] + v76[v78[4]];
										break;
									end
									if (6 == v1234) then
										v78 = v66[v70];
										v76[v78[2]] = v78[3];
										v70 = v70 + 1;
										v1234 = 7;
									end
									if (3 == v1234) then
										v78 = v66[v70];
										v76[v78[2]] = v62[v78[3]];
										v70 = v70 + 1;
										v1234 = 4;
									end
									if (v1234 == 7) then
										v78 = v66[v70];
										v76[v78[2]] = v78[3];
										v70 = v70 + 1;
										v1234 = 8;
									end
									if (2 == v1234) then
										v78 = v66[v70];
										v76[v78[2]] = v76[v78[3]][v78[4]];
										v70 = v70 + 1;
										v1234 = 3;
									end
									if (v1234 == 8) then
										v78 = v66[v70];
										v1235 = v78[2];
										v76[v1235] = v76[v1235](v13(v76, v1235 + 1, v78[3]));
										v1234 = 9;
									end
									if (v1234 == 5) then
										v78 = v66[v70];
										v76[v78[2]] = v78[3];
										v70 = v70 + 1;
										v1234 = 6;
									end
									if (v1234 == 4) then
										v78 = v66[v70];
										v76[v78[2]] = v76[v78[3]][v78[4]];
										v70 = v70 + 1;
										v1234 = 5;
									end
									if (v1234 == 1) then
										v78 = v66[v70];
										v76[v78[2]] = v76[v78[3]][v78[4]];
										v70 = v70 + 1;
										v1234 = 2;
									end
								end
							else
								v76[v78[2]] = v76[v78[3]][v78[4]];
								v70 = v70 + 1;
								v78 = v66[v70];
								v76[v78[2]]();
								v70 = v70 + 1;
								v78 = v66[v70];
								v76[v78[2]] = v76[v78[3]][v78[4]];
								v70 = v70 + 1;
								v78 = v66[v70];
								v76[v78[2]] = v76[v78[3]][v78[4]];
								v70 = v70 + 1;
								v78 = v66[v70];
								v76[v78[2]] = v76[v78[3]][v78[4]];
								v70 = v70 + 1;
								v78 = v66[v70];
								if (v76[v78[2]] == v78[4]) then
									v70 = v70 + 1;
								else
									v70 = v78[3];
								end
							end
							v70 = v70 + 1;
							break;
						end
					end
				end
			end;
		end
		return v29(v28(), {}, v17)(...);
	end
	vv9(), ...);
end
